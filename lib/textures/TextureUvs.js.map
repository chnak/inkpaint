{"version":3,"sources":["../../src/textures/TextureUvs.js"],"names":["TextureUvs","constructor","x0","y0","x1","y1","x2","y2","x3","y3","uvsUint32","Uint32Array","set","frame","baseFrame","rotate","tw","width","th","height","w2","h2","cX","x","cY","y","GroupD8","add","NW","uX","uY","Math","round"],"mappings":";;;;;;;AAAA;;;;AAEe,MAAMA,UAAN,CAAiB;AAC9BC,EAAAA,WAAW,GAAG;AACZ,SAAKC,EAAL,GAAU,CAAV;AACA,SAAKC,EAAL,GAAU,CAAV;AACA,SAAKC,EAAL,GAAU,CAAV;AACA,SAAKC,EAAL,GAAU,CAAV;AACA,SAAKC,EAAL,GAAU,CAAV;AACA,SAAKC,EAAL,GAAU,CAAV;AACA,SAAKC,EAAL,GAAU,CAAV;AACA,SAAKC,EAAL,GAAU,CAAV;AACA,SAAKC,SAAL,GAAiB,IAAIC,WAAJ,CAAgB,CAAhB,CAAjB;AACD;;AAEDC,EAAAA,GAAG,CAACC,KAAD,EAAQC,SAAR,EAAmBC,MAAnB,EAA2B;AAC5B,QAAMC,EAAE,GAAGF,SAAS,CAACG,KAArB;AACA,QAAMC,EAAE,GAAGJ,SAAS,CAACK,MAArB;;AAEA,QAAIJ,MAAJ,EAAY;AACV;AACA,UAAMK,EAAE,GAAGP,KAAK,CAACI,KAAN,GAAc,CAAd,GAAkBD,EAA7B;AACA,UAAMK,EAAE,GAAGR,KAAK,CAACM,MAAN,GAAe,CAAf,GAAmBD,EAA9B,CAHU,CAKV;;AACA,UAAMI,EAAE,GAAGT,KAAK,CAACU,CAAN,GAAUP,EAAV,GAAeI,EAA1B;AACA,UAAMI,EAAE,GAAGX,KAAK,CAACY,CAAN,GAAUP,EAAV,GAAeG,EAA1B;AAEAN,MAAAA,MAAM,GAAGW,gBAAQC,GAAR,CAAYZ,MAAZ,EAAoBW,gBAAQE,EAA5B,CAAT,CATU,CASgC;;AAC1C,WAAK1B,EAAL,GAAUoB,EAAE,GAAGF,EAAE,GAAGM,gBAAQG,EAAR,CAAWd,MAAX,CAApB;AACA,WAAKZ,EAAL,GAAUqB,EAAE,GAAGH,EAAE,GAAGK,gBAAQI,EAAR,CAAWf,MAAX,CAApB;AAEAA,MAAAA,MAAM,GAAGW,gBAAQC,GAAR,CAAYZ,MAAZ,EAAoB,CAApB,CAAT,CAbU,CAauB;;AACjC,WAAKX,EAAL,GAAUkB,EAAE,GAAGF,EAAE,GAAGM,gBAAQG,EAAR,CAAWd,MAAX,CAApB;AACA,WAAKV,EAAL,GAAUmB,EAAE,GAAGH,EAAE,GAAGK,gBAAQI,EAAR,CAAWf,MAAX,CAApB;AAEAA,MAAAA,MAAM,GAAGW,gBAAQC,GAAR,CAAYZ,MAAZ,EAAoB,CAApB,CAAT;AACA,WAAKT,EAAL,GAAUgB,EAAE,GAAGF,EAAE,GAAGM,gBAAQG,EAAR,CAAWd,MAAX,CAApB;AACA,WAAKR,EAAL,GAAUiB,EAAE,GAAGH,EAAE,GAAGK,gBAAQI,EAAR,CAAWf,MAAX,CAApB;AAEAA,MAAAA,MAAM,GAAGW,gBAAQC,GAAR,CAAYZ,MAAZ,EAAoB,CAApB,CAAT;AACA,WAAKP,EAAL,GAAUc,EAAE,GAAGF,EAAE,GAAGM,gBAAQG,EAAR,CAAWd,MAAX,CAApB;AACA,WAAKN,EAAL,GAAUe,EAAE,GAAGH,EAAE,GAAGK,gBAAQI,EAAR,CAAWf,MAAX,CAApB;AACD,KAxBD,MAwBO;AACL,WAAKb,EAAL,GAAUW,KAAK,CAACU,CAAN,GAAUP,EAApB;AACA,WAAKb,EAAL,GAAUU,KAAK,CAACY,CAAN,GAAUP,EAApB;AAEA,WAAKd,EAAL,GAAU,CAACS,KAAK,CAACU,CAAN,GAAUV,KAAK,CAACI,KAAjB,IAA0BD,EAApC;AACA,WAAKX,EAAL,GAAUQ,KAAK,CAACY,CAAN,GAAUP,EAApB;AAEA,WAAKZ,EAAL,GAAU,CAACO,KAAK,CAACU,CAAN,GAAUV,KAAK,CAACI,KAAjB,IAA0BD,EAApC;AACA,WAAKT,EAAL,GAAU,CAACM,KAAK,CAACY,CAAN,GAAUZ,KAAK,CAACM,MAAjB,IAA2BD,EAArC;AAEA,WAAKV,EAAL,GAAUK,KAAK,CAACU,CAAN,GAAUP,EAApB;AACA,WAAKP,EAAL,GAAU,CAACI,KAAK,CAACY,CAAN,GAAUZ,KAAK,CAACM,MAAjB,IAA2BD,EAArC;AACD;;AAED,SAAKR,SAAL,CAAe,CAAf,IACG,CAACqB,IAAI,CAACC,KAAL,CAAW,KAAK7B,EAAL,GAAU,KAArB,IAA8B,MAA/B,KAA0C,EAA3C,GACC4B,IAAI,CAACC,KAAL,CAAW,KAAK9B,EAAL,GAAU,KAArB,IAA8B,MAFjC;AAGA,SAAKQ,SAAL,CAAe,CAAf,IACG,CAACqB,IAAI,CAACC,KAAL,CAAW,KAAK3B,EAAL,GAAU,KAArB,IAA8B,MAA/B,KAA0C,EAA3C,GACC0B,IAAI,CAACC,KAAL,CAAW,KAAK5B,EAAL,GAAU,KAArB,IAA8B,MAFjC;AAGA,SAAKM,SAAL,CAAe,CAAf,IACG,CAACqB,IAAI,CAACC,KAAL,CAAW,KAAKzB,EAAL,GAAU,KAArB,IAA8B,MAA/B,KAA0C,EAA3C,GACCwB,IAAI,CAACC,KAAL,CAAW,KAAK1B,EAAL,GAAU,KAArB,IAA8B,MAFjC;AAGA,SAAKI,SAAL,CAAe,CAAf,IACG,CAACqB,IAAI,CAACC,KAAL,CAAW,KAAKvB,EAAL,GAAU,KAArB,IAA8B,MAA/B,KAA0C,EAA3C,GACCsB,IAAI,CAACC,KAAL,CAAW,KAAKxB,EAAL,GAAU,KAArB,IAA8B,MAFjC;AAGD;;AAnE6B","sourcesContent":["import GroupD8 from \"../math/GroupD8\";\n\nexport default class TextureUvs {\n  constructor() {\n    this.x0 = 0;\n    this.y0 = 0;\n    this.x1 = 1;\n    this.y1 = 0;\n    this.x2 = 1;\n    this.y2 = 1;\n    this.x3 = 0;\n    this.y3 = 1;\n    this.uvsUint32 = new Uint32Array(4);\n  }\n\n  set(frame, baseFrame, rotate) {\n    const tw = baseFrame.width;\n    const th = baseFrame.height;\n\n    if (rotate) {\n      // width and height div 2 div baseFrame size\n      const w2 = frame.width / 2 / tw;\n      const h2 = frame.height / 2 / th;\n\n      // coordinates of center\n      const cX = frame.x / tw + w2;\n      const cY = frame.y / th + h2;\n\n      rotate = GroupD8.add(rotate, GroupD8.NW); // NW is top-left corner\n      this.x0 = cX + w2 * GroupD8.uX(rotate);\n      this.y0 = cY + h2 * GroupD8.uY(rotate);\n\n      rotate = GroupD8.add(rotate, 2); // rotate 90 degrees clockwise\n      this.x1 = cX + w2 * GroupD8.uX(rotate);\n      this.y1 = cY + h2 * GroupD8.uY(rotate);\n\n      rotate = GroupD8.add(rotate, 2);\n      this.x2 = cX + w2 * GroupD8.uX(rotate);\n      this.y2 = cY + h2 * GroupD8.uY(rotate);\n\n      rotate = GroupD8.add(rotate, 2);\n      this.x3 = cX + w2 * GroupD8.uX(rotate);\n      this.y3 = cY + h2 * GroupD8.uY(rotate);\n    } else {\n      this.x0 = frame.x / tw;\n      this.y0 = frame.y / th;\n\n      this.x1 = (frame.x + frame.width) / tw;\n      this.y1 = frame.y / th;\n\n      this.x2 = (frame.x + frame.width) / tw;\n      this.y2 = (frame.y + frame.height) / th;\n\n      this.x3 = frame.x / tw;\n      this.y3 = (frame.y + frame.height) / th;\n    }\n\n    this.uvsUint32[0] =\n      ((Math.round(this.y0 * 65535) & 0xffff) << 16) |\n      (Math.round(this.x0 * 65535) & 0xffff);\n    this.uvsUint32[1] =\n      ((Math.round(this.y1 * 65535) & 0xffff) << 16) |\n      (Math.round(this.x1 * 65535) & 0xffff);\n    this.uvsUint32[2] =\n      ((Math.round(this.y2 * 65535) & 0xffff) << 16) |\n      (Math.round(this.x2 * 65535) & 0xffff);\n    this.uvsUint32[3] =\n      ((Math.round(this.y3 * 65535) & 0xffff) << 16) |\n      (Math.round(this.x3 * 65535) & 0xffff);\n  }\n}\n"],"file":"TextureUvs.js"}