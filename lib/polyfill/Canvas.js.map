{"version":3,"sources":["../../src/polyfill/Canvas.js"],"names":["PSCanvas","Canvas","constructor","width","height","type","_event","EventEmitter","_glResizeExt","_gl","_renderType","useTypedArray","rgbReverse","isPSCanvas","id","getContext","options","ctx","GLFix","fixGetUniformLocation","fixTexImage2D","getExtension","_ctx","value","resize","clientWidth","clientHeight","addEventListener","listener","addListener","removeEventListener","removeListener","removeAllListeners","_glBuffer","pixels","Uint8Array","readPixels","RGBA","UNSIGNED_BYTE","Buffer","from","_putImageData","data","Uint8ClampedArray","getImageData","_fillImageData","putImageData","_reverseColor","m","i","j","col","row","k","idx","idx2","imageData","toBuffer","toDataURL","createPNGStream","createJPEGStream","createPDFStream","destroy"],"mappings":"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","sourcesContent":["import { gl, Canvas, createImageData } from \"../canvas-gl\";\nimport poly from \"./poly\";\nimport GLFix from \"./glfix\";\nimport { uuidvx } from \"../utils\";\nimport EventEmitter from \"eventemitter3\";\n\nexport default class PSCanvas extends poly(Canvas) {\n  constructor(width, height, type) {\n    super(width, height, type);\n\n    this._event = new EventEmitter();\n    this._glResizeExt = null;\n    this._gl = null;\n    this._renderType = \"2d\";\n    this.useTypedArray = false;\n    this.rgbReverse = false;\n    this.isPSCanvas = true;\n    this.id = uuidvx();\n  }\n\n  // Get canvas context\n  getContext(type, options) {\n    this._renderType = type;\n\n    if (type === \"webgl\") {\n      if (this._gl) return this._gl;\n\n      const { width, height } = this;\n      const ctx = gl(width, height, options);\n      GLFix.fixGetUniformLocation(ctx);\n      GLFix.fixTexImage2D(ctx);\n\n      this._gl = ctx;\n      this._glResizeExt = ctx.getExtension(\"STACKGL_resize_drawingbuffer\");\n      this._ctx = super.getContext(\"2d\", options);\n      return this._gl;\n    } else {\n      this._ctx = super.getContext(\"2d\", options);\n    }\n\n    return super.getContext(type, options);\n  }\n\n  // Canvas Reset width and height\n  get height() {\n    return super.height;\n  }\n\n  set height(value) {\n    if (this._glResizeExt) this._glResizeExt.resize(this.width, value);\n    super.height = value;\n  }\n\n  get width() {\n    return super.width;\n  }\n\n  set width(value) {\n    if (this._glResizeExt) this._glResizeExt.resize(value, this.height);\n    super.width = value;\n  }\n\n  get clientWidth() {\n    return super.width;\n  }\n\n  get clientHeight() {\n    return super.height;\n  }\n\n  // add and remove event listener\n  addEventListener(type, listener) {\n    return this._event.addListener(type, listener);\n  }\n\n  removeEventListener(type, listener) {\n    if (listener) return this._event.removeListener(type, listener);\n    return this._event.removeAllListeners(type);\n  }\n\n  _glBuffer() {\n    const { width, height, _ctx, _gl } = this;\n    const pixels = new Uint8Array(width * height * 4);\n    _gl.readPixels(0, 0, width, height, _gl.RGBA, _gl.UNSIGNED_BYTE, pixels);\n    return Buffer.from(pixels);\n  }\n\n  _putImageData() {\n    let data;\n    const { width, height, _ctx, _gl, useTypedArray } = this;\n    const pixels = new Uint8Array(width * height * 4);\n    _gl.readPixels(0, 0, width, height, _gl.RGBA, _gl.UNSIGNED_BYTE, pixels);\n\n    if (useTypedArray) {\n      data = createImageData(new Uint8ClampedArray(pixels), width, height);\n    } else {\n      data = _ctx.getImageData(0, 0, width, height);\n      this._fillImageData(data, pixels, width, height);\n    }\n\n    _ctx.putImageData(data, 0, 0);\n  }\n\n  _reverseColor() {\n    const m = [2, 1, 0, 3];\n    const { width, height, _ctx } = this;\n    const pixels = _ctx.getImageData(0, 0, width, height);\n    const data = new Uint8Array(width * height * 4);\n    for (let i = 0; i < height; i++) {\n      for (let j = 0; j < width; j++) {\n        const col = j;\n        const row = i;\n        for (let k = 0; k < 4; k++) {\n          const idx = 4 * (row * width + col) + m[k];\n          const idx2 = 4 * (row * width + col) + k;\n          data[idx] = pixels.data[idx2];\n        }\n      }\n    }\n    const imageData = createImageData(new Uint8ClampedArray(data), width, height);\n    _ctx.putImageData(imageData, 0, 0);\n  }\n\n  _fillImageData(data, pixels, width, height) {\n    const m = this.rgbReverse ? [2, 1, 0, 3] : [0, 1, 2, 3];\n    for (let i = 0; i < height; i++) {\n      for (let j = 0; j < width; j++) {\n        const col = j;\n        const row = height - i - 1;\n        for (let k = 0; k < 4; k++) {\n          const idx = 4 * (row * width + col) + m[k];\n          const idx2 = 4 * (i * width + col) + k;\n          data.data[idx] = pixels[idx2];\n        }\n      }\n    }\n\n    return data;\n  }\n\n  // Store buffer png jpg and other data\n  toBuffer(...args) {\n    if (this._gl) return this._glBuffer();\n    else if (this.rgbReverse) this._reverseColor();\n    return super.toBuffer(...args);\n  }\n\n  toDataURL(...args) {\n    if (this._gl) this._putImageData();\n    else if (this.rgbReverse) this._reverseColor();\n    return super.toDataURL(...args);\n  }\n\n  createPNGStream(...args) {\n    if (this._gl) this._putImageData();\n    else if (this.rgbReverse) this._reverseColor();\n    return super.createPNGStream(...args);\n  }\n\n  createJPEGStream(...args) {\n    if (this._gl) this._putImageData();\n    else if (this.rgbReverse) this._reverseColor();\n    return super.createJPEGStream(...args);\n  }\n\n  createPDFStream(...args) {\n    if (this._gl) this._putImageData();\n    else if (this.rgbReverse) this._reverseColor();\n    return super.createPDFStream(...args);\n  }\n\n  destroy() {\n    //super.destroy();\n    this._event.removeAllListeners();\n    this._event = null;\n    this._glResizeExt = null;\n    this._gl = null;\n    this._ctx = null;\n  }\n}\n"],"file":"Canvas.js"}