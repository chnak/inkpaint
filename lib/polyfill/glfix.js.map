{"version":3,"sources":["../../src/polyfill/glfix.js"],"names":["GLFix","fixGetUniformLocation","ctx","_getUniformLocation","getUniformLocation","program","name","_uniforms","test","reg","RegExp","i","length","_name","call","fixTexImage2D","_tetImage2D","texImage2D"],"mappings":";;;;;;AAAA,IAAMA,KAAK,GAAG;AACZ;AACAC,EAAAA,qBAAqB,CAACC,GAAD,EAAM;AACzB,QAAMC,mBAAmB,GAAGD,GAAG,CAACE,kBAAhC;;AAEAF,IAAAA,GAAG,CAACE,kBAAJ,GAAyB,UAASC,OAAT,EAAkBC,IAAlB,EAAwB;AAC/C,UAAID,OAAO,CAACE,SAAR,IAAqB,CAAC,WAAWC,IAAX,CAAgBF,IAAhB,CAA1B,EAAiD;AAC/C,YAAMG,GAAG,GAAG,IAAIC,MAAJ,CAAcJ,IAAd,iBAAZ;;AAEA,aAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,OAAO,CAACE,SAAR,CAAkBK,MAAtC,EAA8CD,CAAC,EAA/C,EAAmD;AACjD,cAAME,KAAK,GAAGR,OAAO,CAACE,SAAR,CAAkBI,CAAlB,EAAqBL,IAAnC;AACA,cAAIG,GAAG,CAACD,IAAJ,CAASK,KAAT,CAAJ,EAAqBP,IAAI,GAAGO,KAAP;AACtB;AACF;;AAED,aAAOV,mBAAmB,CAACW,IAApB,CAAyB,IAAzB,EAA+BT,OAA/B,EAAwCC,IAAxC,CAAP;AACD,KAXD;AAYD,GAjBW;;AAmBZS,EAAAA,aAAa,CAACb,GAAD,EAAM;AACjB,QAAMc,WAAW,GAAGd,GAAG,CAACe,UAAxB,CADiB,CAGjB;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACD;;AAlCW,CAAd;eAqCejB,K","sourcesContent":["const GLFix = {\n  // Temporary fix https://github.com/stackgl/headless-gl/issues/170\n  fixGetUniformLocation(ctx) {\n    const _getUniformLocation = ctx.getUniformLocation;\n\n    ctx.getUniformLocation = function(program, name) {\n      if (program._uniforms && !/\\[\\d+\\]$/.test(name)) {\n        const reg = new RegExp(`${name}\\\\[\\\\d+\\\\]$`);\n\n        for (let i = 0; i < program._uniforms.length; i++) {\n          const _name = program._uniforms[i].name;\n          if (reg.test(_name)) name = _name;\n        }\n      }\n\n      return _getUniformLocation.call(this, program, name);\n    };\n  },\n\n  fixTexImage2D(ctx) {\n    const _tetImage2D = ctx.texImage2D;\n\n    // ctx.texImage2D = function(...args) {\n    //   let pixels = args[args.length - 1];\n    //   if (pixels._image) pixels = pixels._image;\n\n    //   if (pixels instanceof Image) {\n    //     const canvas = new Canvas(pixels.width, pixels.height);\n    //     canvas.getContext(\"2d\").drawImage(pixels, 0, 0);\n    //     args[args.length - 1] = canvas;\n    //   }\n\n    //   return _tetImage2D.apply(this, args);\n    // };\n  }\n};\n\nexport default GLFix;\n"],"file":"glfix.js"}