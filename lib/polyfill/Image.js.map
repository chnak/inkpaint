{"version":3,"sources":["../../src/polyfill/Image.js"],"names":["myCanvas","PsImage","CImage","constructor","isPsImage","addEventListener","name","cb","_eventemitter","EventEmitter","once","convertToImageData","image","flip","width","height","ctx","getContext","scale","translate","clearRect","drawImage","getImageData","convertToCanvas","imgData","can","putImageData","isBrowser","window","Image"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AAEA,IAAIA,QAAJ;;AACA,MAAMC,OAAN,SAAsB,mBAAKC,eAAL,CAAtB,CAAmC;AACjCC,EAAAA,WAAW,GAAU;AACnB,UAAM,YAAN;AACA,SAAKC,SAAL,GAAiB,IAAjB;AACD;;AAEDC,EAAAA,gBAAgB,CAACC,IAAD,EAAOC,EAAP,EAAW;AACzB,QAAI,CAAC,KAAKC,aAAV,EAAyB;AACvB,WAAKA,aAAL,GAAqB,IAAIC,qBAAJ,EAArB;AACD;;AAED,SAAKD,aAAL,CAAmBE,IAAnB,CAAwBJ,IAAxB,EAA8BC,EAA9B;AACD;;AAEwB,SAAlBI,kBAAkB,CAACC,KAAD,EAAQC,IAAR,EAAsB;AAAA,QAAdA,IAAc;AAAdA,MAAAA,IAAc,GAAP,KAAO;AAAA;;AAC7C,QAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAoBH,KAA1B;AAEA,QAAI,CAACZ,QAAL,EAAeA,QAAQ,GAAG,4BAAac,KAAb,EAAoBC,MAApB,CAAX;AACff,IAAAA,QAAQ,CAACc,KAAT,GAAiBA,KAAjB;AACAd,IAAAA,QAAQ,CAACe,MAAT,GAAkBA,MAAlB;AACA,QAAMC,GAAG,GAAGhB,QAAQ,CAACiB,UAAT,CAAoB,IAApB,CAAZ;;AAEA,QAAIJ,IAAJ,EAAU;AACRG,MAAAA,GAAG,CAACE,KAAJ,CAAU,CAAV,EAAa,CAAC,CAAd;AACAF,MAAAA,GAAG,CAACG,SAAJ,CAAc,CAAd,EAAiB,CAACJ,MAAlB;AACD;;AAEDC,IAAAA,GAAG,CAACI,SAAJ,CAAcN,KAAd,EAAqBC,MAArB;AACAC,IAAAA,GAAG,CAACK,SAAJ,CAAcT,KAAd,EAAqB,CAArB,EAAwB,CAAxB;AACA,WAAOI,GAAG,CAACM,YAAJ,CAAiB,CAAjB,EAAoB,CAApB,EAAuBR,KAAvB,EAA8BC,MAA9B,CAAP;AACD;;AAEqB,SAAfQ,eAAe,CAACC,OAAD,EAAUV,KAAV,EAAiBC,MAAjB,EAAyB;AAC7C,QAAMU,GAAG,GAAG,4BAAaX,KAAb,EAAoBC,MAApB,CAAZ;AACA,QAAMC,GAAG,GAAGS,GAAG,CAACR,UAAJ,CAAe,IAAf,CAAZ;AACAD,IAAAA,GAAG,CAACU,YAAJ,CAAiBF,OAAjB,EAA0B,CAA1B,EAA6B,CAA7B;AACA,WAAOC,GAAP;AACD;;AArCgC;;eAwCpBE,2BAAYC,MAAM,CAACC,KAAnB,GAA2B5B,O","sourcesContent":["import poly from \"./poly\";\nimport { createCanvas, Image as CImage } from \"../canvas-gl\";\nimport EventEmitter from \"eventemitter3\";\nimport { isBrowser } from \"browser-or-node\";\n\nlet myCanvas;\nclass PsImage extends poly(CImage) {\n  constructor(...args) {\n    super(...args);\n    this.isPsImage = true;\n  }\n\n  addEventListener(name, cb) {\n    if (!this._eventemitter) {\n      this._eventemitter = new EventEmitter();\n    }\n\n    this._eventemitter.once(name, cb);\n  }\n\n  static convertToImageData(image, flip = false) {\n    const { width, height } = image;\n\n    if (!myCanvas) myCanvas = createCanvas(width, height);\n    myCanvas.width = width;\n    myCanvas.height = height;\n    const ctx = myCanvas.getContext(\"2d\");\n\n    if (flip) {\n      ctx.scale(1, -1);\n      ctx.translate(0, -height);\n    }\n\n    ctx.clearRect(width, height);\n    ctx.drawImage(image, 0, 0);\n    return ctx.getImageData(0, 0, width, height);\n  }\n\n  static convertToCanvas(imgData, width, height) {\n    const can = createCanvas(width, height);\n    const ctx = can.getContext(\"2d\");\n    ctx.putImageData(imgData, 0, 0);\n    return can;\n  }\n}\n\nexport default isBrowser ? window.Image : PsImage;\n"],"file":"Image.js"}