{"version":3,"sources":["../../src/display/TransformBase.js"],"names":["TransformBase","constructor","worldTransform","Matrix","localTransform","_worldID","_parentID","updateLocalTransform","updateTransform","parentTransform","pt","wt","lt","a","b","c","d","tx","ty","prototype","updateWorldTransform","IDENTITY"],"mappings":";;;;;;;AAAA;;AAEe,MAAMA,aAAN,CAAoB;AACjCC,EAAAA,WAAW,GAAG;AACZ,SAAKC,cAAL,GAAsB,IAAIC,YAAJ,EAAtB;AACA,SAAKC,cAAL,GAAsB,IAAID,YAAJ,EAAtB;AAEA,SAAKE,QAAL,GAAgB,CAAhB;AACA,SAAKC,SAAL,GAAiB,CAAjB;AACD;;AAEDC,EAAAA,oBAAoB,GAAG,CACrB;AACD;;AAEDC,EAAAA,eAAe,CAACC,eAAD,EAAkB;AAC/B,QAAMC,EAAE,GAAGD,eAAe,CAACP,cAA3B;AACA,QAAMS,EAAE,GAAG,KAAKT,cAAhB;AACA,QAAMU,EAAE,GAAG,KAAKR,cAAhB,CAH+B,CAK/B;;AACAO,IAAAA,EAAE,CAACE,CAAH,GAAOD,EAAE,CAACC,CAAH,GAAOH,EAAE,CAACG,CAAV,GAAcD,EAAE,CAACE,CAAH,GAAOJ,EAAE,CAACK,CAA/B;AACAJ,IAAAA,EAAE,CAACG,CAAH,GAAOF,EAAE,CAACC,CAAH,GAAOH,EAAE,CAACI,CAAV,GAAcF,EAAE,CAACE,CAAH,GAAOJ,EAAE,CAACM,CAA/B;AACAL,IAAAA,EAAE,CAACI,CAAH,GAAOH,EAAE,CAACG,CAAH,GAAOL,EAAE,CAACG,CAAV,GAAcD,EAAE,CAACI,CAAH,GAAON,EAAE,CAACK,CAA/B;AACAJ,IAAAA,EAAE,CAACK,CAAH,GAAOJ,EAAE,CAACG,CAAH,GAAOL,EAAE,CAACI,CAAV,GAAcF,EAAE,CAACI,CAAH,GAAON,EAAE,CAACM,CAA/B;AACAL,IAAAA,EAAE,CAACM,EAAH,GAAQL,EAAE,CAACK,EAAH,GAAQP,EAAE,CAACG,CAAX,GAAeD,EAAE,CAACM,EAAH,GAAQR,EAAE,CAACK,CAA1B,GAA8BL,EAAE,CAACO,EAAzC;AACAN,IAAAA,EAAE,CAACO,EAAH,GAAQN,EAAE,CAACK,EAAH,GAAQP,EAAE,CAACI,CAAX,GAAeF,EAAE,CAACM,EAAH,GAAQR,EAAE,CAACM,CAA1B,GAA8BN,EAAE,CAACQ,EAAzC;AAEA,SAAKb,QAAL;AACD;;AA3BgC;;;AA8BnCL,aAAa,CAACmB,SAAd,CAAwBC,oBAAxB,GACEpB,aAAa,CAACmB,SAAd,CAAwBX,eAD1B;AAGAR,aAAa,CAACqB,QAAd,GAAyB,IAAIrB,aAAJ,EAAzB","sourcesContent":["import { Matrix } from \"../math\";\n\nexport default class TransformBase {\n  constructor() {\n    this.worldTransform = new Matrix();\n    this.localTransform = new Matrix();\n\n    this._worldID = 0;\n    this._parentID = 0;\n  }\n\n  updateLocalTransform() {\n    // empty\n  }\n\n  updateTransform(parentTransform) {\n    const pt = parentTransform.worldTransform;\n    const wt = this.worldTransform;\n    const lt = this.localTransform;\n\n    // concat the parent matrix with the objects transform.\n    wt.a = lt.a * pt.a + lt.b * pt.c;\n    wt.b = lt.a * pt.b + lt.b * pt.d;\n    wt.c = lt.c * pt.a + lt.d * pt.c;\n    wt.d = lt.c * pt.b + lt.d * pt.d;\n    wt.tx = lt.tx * pt.a + lt.ty * pt.c + pt.tx;\n    wt.ty = lt.tx * pt.b + lt.ty * pt.d + pt.ty;\n\n    this._worldID++;\n  }\n}\n\nTransformBase.prototype.updateWorldTransform =\n  TransformBase.prototype.updateTransform;\n\nTransformBase.IDENTITY = new TransformBase();\n"],"file":"TransformBase.js"}