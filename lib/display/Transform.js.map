{"version":3,"sources":["../../src/display/Transform.js"],"names":["Transform","TransformBase","constructor","position","Point","scale","skew","ObservablePoint","updateSkew","pivot","_rotation","_cx","_sx","_cy","_sy","Math","cos","_y","sin","_x","updateLocalTransform","lt","localTransform","a","x","b","c","y","d","tx","ty","updateTransform","parentTransform","pt","worldTransform","wt","_worldID","setFromMatrix","matrix","decompose","rotation","value"],"mappings":"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","sourcesContent":["import { Point, ObservablePoint } from \"../math\";\nimport TransformBase from \"./TransformBase\";\n\nexport default class Transform extends TransformBase {\n  constructor() {\n    super();\n\n    this.position = new Point(0, 0);\n    this.scale = new Point(1, 1);\n    this.skew = new ObservablePoint(this.updateSkew, this, 0, 0);\n    this.pivot = new Point(0, 0);\n    this._rotation = 0;\n\n    this._cx = 1; // cos rotation + skewY;\n    this._sx = 0; // sin rotation + skewY;\n    this._cy = 0; // cos rotation + Math.PI/2 - skewX;\n    this._sy = 1; // sin rotation + Math.PI/2 - skewX;\n  }\n\n  updateSkew() {\n    this._cx = Math.cos(this._rotation + this.skew._y);\n    this._sx = Math.sin(this._rotation + this.skew._y);\n    this._cy = -Math.sin(this._rotation - this.skew._x); // cos, added PI/2\n    this._sy = Math.cos(this._rotation - this.skew._x); // sin, added PI/2\n  }\n\n  updateLocalTransform() {\n    const lt = this.localTransform;\n\n    lt.a = this._cx * this.scale.x;\n    lt.b = this._sx * this.scale.x;\n    lt.c = this._cy * this.scale.y;\n    lt.d = this._sy * this.scale.y;\n\n    lt.tx = this.position.x - (this.pivot.x * lt.a + this.pivot.y * lt.c);\n    lt.ty = this.position.y - (this.pivot.x * lt.b + this.pivot.y * lt.d);\n  }\n\n  updateTransform(parentTransform) {\n    const lt = this.localTransform;\n\n    lt.a = this._cx * this.scale.x;\n    lt.b = this._sx * this.scale.x;\n    lt.c = this._cy * this.scale.y;\n    lt.d = this._sy * this.scale.y;\n\n    lt.tx = this.position.x - (this.pivot.x * lt.a + this.pivot.y * lt.c);\n    lt.ty = this.position.y - (this.pivot.x * lt.b + this.pivot.y * lt.d);\n\n    // concat the parent matrix with the objects transform.\n    const pt = parentTransform.worldTransform;\n    const wt = this.worldTransform;\n\n    wt.a = lt.a * pt.a + lt.b * pt.c;\n    wt.b = lt.a * pt.b + lt.b * pt.d;\n    wt.c = lt.c * pt.a + lt.d * pt.c;\n    wt.d = lt.c * pt.b + lt.d * pt.d;\n    wt.tx = lt.tx * pt.a + lt.ty * pt.c + pt.tx;\n    wt.ty = lt.tx * pt.b + lt.ty * pt.d + pt.ty;\n\n    this._worldID++;\n  }\n\n  setFromMatrix(matrix) {\n    matrix.decompose(this);\n  }\n\n  get rotation() {\n    return this._rotation;\n  }\n\n  set rotation(value) {\n    this._rotation = value;\n    this.updateSkew();\n  }\n}\n"],"file":"Transform.js"}