{"version":3,"sources":["../../src/utils/trimCanvas.js"],"names":["trimCanvas","canvas","width","height","context","getContext","imageData","getImageData","pixels","data","len","length","bound","top","left","right","bottom","i","x","y"],"mappings":";;;;;;;AAAe,SAASA,UAAT,CAAoBC,MAApB,EAA4B;AACzC,MAAIC,KAAK,GAAGD,MAAM,CAACC,KAAnB;AACA,MAAIC,MAAM,GAAGF,MAAM,CAACE,MAApB;AAEA,MAAMC,OAAO,GAAGH,MAAM,CAACI,UAAP,CAAkB,IAAlB,CAAhB;AACA,MAAMC,SAAS,GAAGF,OAAO,CAACG,YAAR,CAAqB,CAArB,EAAwB,CAAxB,EAA2BL,KAA3B,EAAkCC,MAAlC,CAAlB;AACA,MAAMK,MAAM,GAAGF,SAAS,CAACG,IAAzB;AACA,MAAMC,GAAG,GAAGF,MAAM,CAACG,MAAnB;AAEA,MAAMC,KAAK,GAAG;AACZC,IAAAA,GAAG,EAAE,IADO;AAEZC,IAAAA,IAAI,EAAE,IAFM;AAGZC,IAAAA,KAAK,EAAE,IAHK;AAIZC,IAAAA,MAAM,EAAE;AAJI,GAAd;AAMA,MAAIP,IAAI,GAAG,IAAX;AACA,MAAIQ,CAAJ;AACA,MAAIC,CAAJ;AACA,MAAIC,CAAJ;;AAEA,OAAKF,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGP,GAAhB,EAAqBO,CAAC,IAAI,CAA1B,EAA6B;AAC3B,QAAIT,MAAM,CAACS,CAAC,GAAG,CAAL,CAAN,KAAkB,CAAtB,EAAyB;AACvBC,MAAAA,CAAC,GAAID,CAAC,GAAG,CAAL,GAAUf,KAAd;AACAiB,MAAAA,CAAC,GAAG,CAAC,EAAEF,CAAC,GAAG,CAAJ,GAAQf,KAAV,CAAL;;AAEA,UAAIU,KAAK,CAACC,GAAN,KAAc,IAAlB,EAAwB;AACtBD,QAAAA,KAAK,CAACC,GAAN,GAAYM,CAAZ;AACD;;AAED,UAAIP,KAAK,CAACE,IAAN,KAAe,IAAnB,EAAyB;AACvBF,QAAAA,KAAK,CAACE,IAAN,GAAaI,CAAb;AACD,OAFD,MAEO,IAAIA,CAAC,GAAGN,KAAK,CAACE,IAAd,EAAoB;AACzBF,QAAAA,KAAK,CAACE,IAAN,GAAaI,CAAb;AACD;;AAED,UAAIN,KAAK,CAACG,KAAN,KAAgB,IAApB,EAA0B;AACxBH,QAAAA,KAAK,CAACG,KAAN,GAAcG,CAAC,GAAG,CAAlB;AACD,OAFD,MAEO,IAAIN,KAAK,CAACG,KAAN,GAAcG,CAAlB,EAAqB;AAC1BN,QAAAA,KAAK,CAACG,KAAN,GAAcG,CAAC,GAAG,CAAlB;AACD;;AAED,UAAIN,KAAK,CAACI,MAAN,KAAiB,IAArB,EAA2B;AACzBJ,QAAAA,KAAK,CAACI,MAAN,GAAeG,CAAf;AACD,OAFD,MAEO,IAAIP,KAAK,CAACI,MAAN,GAAeG,CAAnB,EAAsB;AAC3BP,QAAAA,KAAK,CAACI,MAAN,GAAeG,CAAf;AACD;AACF;AACF;;AAED,MAAIP,KAAK,CAACC,GAAN,KAAc,IAAlB,EAAwB;AACtBX,IAAAA,KAAK,GAAGU,KAAK,CAACG,KAAN,GAAcH,KAAK,CAACE,IAA5B;AACAX,IAAAA,MAAM,GAAGS,KAAK,CAACI,MAAN,GAAeJ,KAAK,CAACC,GAArB,GAA2B,CAApC;AACAJ,IAAAA,IAAI,GAAGL,OAAO,CAACG,YAAR,CAAqBK,KAAK,CAACE,IAA3B,EAAiCF,KAAK,CAACC,GAAvC,EAA4CX,KAA5C,EAAmDC,MAAnD,CAAP;AACD;;AAED,SAAO;AACLA,IAAAA,MADK;AAELD,IAAAA,KAFK;AAGLO,IAAAA;AAHK,GAAP;AAKD","sourcesContent":["export default function trimCanvas(canvas) {\n  let width = canvas.width;\n  let height = canvas.height;\n\n  const context = canvas.getContext(\"2d\");\n  const imageData = context.getImageData(0, 0, width, height);\n  const pixels = imageData.data;\n  const len = pixels.length;\n\n  const bound = {\n    top: null,\n    left: null,\n    right: null,\n    bottom: null\n  };\n  let data = null;\n  let i;\n  let x;\n  let y;\n\n  for (i = 0; i < len; i += 4) {\n    if (pixels[i + 3] !== 0) {\n      x = (i / 4) % width;\n      y = ~~(i / 4 / width);\n\n      if (bound.top === null) {\n        bound.top = y;\n      }\n\n      if (bound.left === null) {\n        bound.left = x;\n      } else if (x < bound.left) {\n        bound.left = x;\n      }\n\n      if (bound.right === null) {\n        bound.right = x + 1;\n      } else if (bound.right < x) {\n        bound.right = x + 1;\n      }\n\n      if (bound.bottom === null) {\n        bound.bottom = y;\n      } else if (bound.bottom < y) {\n        bound.bottom = y;\n      }\n    }\n  }\n\n  if (bound.top !== null) {\n    width = bound.right - bound.left;\n    height = bound.bottom - bound.top + 1;\n    data = context.getImageData(bound.left, bound.top, width, height);\n  }\n\n  return {\n    height,\n    width,\n    data\n  };\n}\n"],"file":"trimCanvas.js"}