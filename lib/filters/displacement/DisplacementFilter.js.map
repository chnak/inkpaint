{"version":3,"sources":["../../../src/filters/displacement/DisplacementFilter.js"],"names":["DisplacementFilter","core","Filter","constructor","sprite","scale","maskMatrix","Matrix","renderable","maskSprite","uniforms","mapSampler","_texture","filterMatrix","x","y","undefined","Point","apply","filterManager","input","output","calculateSpriteMatrix","applyFilter","map","value"],"mappings":";;;;;;;AAAA;;AAEA;;;;;;AAEe,MAAMA,kBAAN,SAAiCC,IAAI,CAACC,MAAtC,CAA6C;AAC1DC,EAAAA,WAAW,CAACC,MAAD,EAASC,KAAT,EAAgB;AACzB,QAAMC,UAAU,GAAG,IAAIL,IAAI,CAACM,MAAT,EAAnB;AAEAH,IAAAA,MAAM,CAACI,UAAP,GAAoB,KAApB;AAEA,WACE;AADF,sZAME;AANF;AAUA,SAAKC,UAAL,GAAkBL,MAAlB;AACA,SAAKE,UAAL,GAAkBA,UAAlB;AAEA,SAAKI,QAAL,CAAcC,UAAd,GAA2BP,MAAM,CAACQ,QAAlC;AACA,SAAKF,QAAL,CAAcG,YAAd,GAA6BP,UAA7B;AACA,SAAKI,QAAL,CAAcL,KAAd,GAAsB;AAAES,MAAAA,CAAC,EAAE,CAAL;AAAQC,MAAAA,CAAC,EAAE;AAAX,KAAtB;;AAEA,QAAIV,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAKW,SAAhC,EAA2C;AACzCX,MAAAA,KAAK,GAAG,EAAR;AACD;;AAED,SAAKA,KAAL,GAAa,IAAIJ,IAAI,CAACgB,KAAT,CAAeZ,KAAf,EAAsBA,KAAtB,CAAb;AACD;;AAEDa,EAAAA,KAAK,CAACC,aAAD,EAAgBC,KAAhB,EAAuBC,MAAvB,EAA+B;AAClC,SAAKX,QAAL,CAAcG,YAAd,GAA6BM,aAAa,CAACG,qBAAd,CAC3B,KAAKhB,UADsB,EAE3B,KAAKG,UAFsB,CAA7B;AAIA,SAAKC,QAAL,CAAcL,KAAd,CAAoBS,CAApB,GAAwB,KAAKT,KAAL,CAAWS,CAAnC;AACA,SAAKJ,QAAL,CAAcL,KAAd,CAAoBU,CAApB,GAAwB,KAAKV,KAAL,CAAWU,CAAnC,CANkC,CAQlC;;AACAI,IAAAA,aAAa,CAACI,WAAd,CAA0B,IAA1B,EAAgCH,KAAhC,EAAuCC,MAAvC;AACD;;AAEM,MAAHG,GAAG,GAAG;AACR,WAAO,KAAKd,QAAL,CAAcC,UAArB;AACD;;AAEM,MAAHa,GAAG,CAACC,KAAD,EAAQ;AACb,SAAKf,QAAL,CAAcC,UAAd,GAA2Bc,KAA3B;AACD;;AAhDyD","sourcesContent":["import * as core from \"../../core\";\nimport { readFileSync } from \"fs\";\nimport { join } from \"path\";\n\nexport default class DisplacementFilter extends core.Filter {\n  constructor(sprite, scale) {\n    const maskMatrix = new core.Matrix();\n\n    sprite.renderable = false;\n\n    super(\n      // vertex shader\n      readFileSync(\n        join(__dirname, \"../fragments/default-filter-matrix.vert\"),\n        \"utf8\"\n      ),\n      // fragment shader\n      readFileSync(join(__dirname, \"./displacement.frag\"), \"utf8\")\n    );\n\n    this.maskSprite = sprite;\n    this.maskMatrix = maskMatrix;\n\n    this.uniforms.mapSampler = sprite._texture;\n    this.uniforms.filterMatrix = maskMatrix;\n    this.uniforms.scale = { x: 1, y: 1 };\n\n    if (scale === null || scale === undefined) {\n      scale = 20;\n    }\n\n    this.scale = new core.Point(scale, scale);\n  }\n\n  apply(filterManager, input, output) {\n    this.uniforms.filterMatrix = filterManager.calculateSpriteMatrix(\n      this.maskMatrix,\n      this.maskSprite\n    );\n    this.uniforms.scale.x = this.scale.x;\n    this.uniforms.scale.y = this.scale.y;\n\n    // draw the filter...\n    filterManager.applyFilter(this, input, output);\n  }\n\n  get map() {\n    return this.uniforms.mapSampler;\n  }\n\n  set map(value) {\n    this.uniforms.mapSampler = value;\n  }\n}\n"],"file":"DisplacementFilter.js"}