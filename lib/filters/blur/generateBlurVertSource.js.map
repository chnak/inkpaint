{"version":3,"sources":["../../../src/filters/blur/generateBlurVertSource.js"],"names":["vertTemplate","join","generateVertBlurSource","kernelSize","x","halfLength","Math","ceil","vertSource","blurLoop","template","i","blur","replace"],"mappings":";;;;;;AAAA,IAAMA,YAAY,GAAG,CACjB,iCADiB,EAEjB,+BAFiB,EAIjB,yBAJiB,EAKjB,gCALiB,EAOjB,sCAPiB,EASjB,iBATiB,EAUjB,GAViB,EAWjB,qFAXiB,EAYjB,QAZiB,EAajB,GAbiB,EAcnBC,IAdmB,CAcd,IAdc,CAArB;;AAgBe,SAASC,sBAAT,CAAgCC,UAAhC,EAA4CC,CAA5C,EACf;AACI,MAAMC,UAAU,GAAGC,IAAI,CAACC,IAAL,CAAUJ,UAAU,GAAG,CAAvB,CAAnB;AAEA,MAAIK,UAAU,GAAGR,YAAjB;AAEA,MAAIS,QAAQ,GAAG,EAAf;AACA,MAAIC,QAAJ,CANJ,CAOI;;AAEA,MAAIN,CAAJ,EACA;AACIM,IAAAA,QAAQ,GAAG,gFAAX;AACH,GAHD,MAKA;AACIA,IAAAA,QAAQ,GAAG,gFAAX;AACH;;AAED,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,UAApB,EAAgCQ,CAAC,EAAjC,EACA;AACI,QAAIC,IAAI,GAAGF,QAAQ,CAACG,OAAT,CAAiB,SAAjB,EAA4BF,CAA5B,CAAX,CADJ,CAGI;AAEA;AACA;AACA;AACA;;AAEAC,IAAAA,IAAI,GAAGA,IAAI,CAACC,OAAL,CAAa,eAAb,EAAiCF,CAAC,IAAIN,UAAU,GAAG,CAAjB,CAAlC,QAAP;AAEAI,IAAAA,QAAQ,IAAIG,IAAZ;AACAH,IAAAA,QAAQ,IAAI,IAAZ;AACH;;AAEDD,EAAAA,UAAU,GAAGA,UAAU,CAACK,OAAX,CAAmB,QAAnB,EAA6BJ,QAA7B,CAAb;AACAD,EAAAA,UAAU,GAAGA,UAAU,CAACK,OAAX,CAAmB,QAAnB,EAA6BV,UAA7B,CAAb;AAEA,SAAOK,UAAP;AACH","sourcesContent":["const vertTemplate = [\n    'attribute vec2 aVertexPosition;',\n    'attribute vec2 aTextureCoord;',\n\n    'uniform float strength;',\n    'uniform mat3 projectionMatrix;',\n\n    'varying vec2 vBlurTexCoords[%size%];',\n\n    'void main(void)',\n    '{',\n    'gl_Position = vec4((projectionMatrix * vec3((aVertexPosition), 1.0)).xy, 0.0, 1.0);',\n    '%blur%',\n    '}',\n].join('\\n');\n\nexport default function generateVertBlurSource(kernelSize, x)\n{\n    const halfLength = Math.ceil(kernelSize / 2);\n\n    let vertSource = vertTemplate;\n\n    let blurLoop = '';\n    let template;\n    // let value;\n\n    if (x)\n    {\n        template = 'vBlurTexCoords[%index%] = aTextureCoord + vec2(%sampleIndex% * strength, 0.0);';\n    }\n    else\n    {\n        template = 'vBlurTexCoords[%index%] = aTextureCoord + vec2(0.0, %sampleIndex% * strength);';\n    }\n\n    for (let i = 0; i < kernelSize; i++)\n    {\n        let blur = template.replace('%index%', i);\n\n        // value = i;\n\n        // if(i >= halfLength)\n        // {\n        //     value = kernelSize - i - 1;\n        // }\n\n        blur = blur.replace('%sampleIndex%', `${i - (halfLength - 1)}.0`);\n\n        blurLoop += blur;\n        blurLoop += '\\n';\n    }\n\n    vertSource = vertSource.replace('%blur%', blurLoop);\n    vertSource = vertSource.replace('%size%', kernelSize);\n\n    return vertSource;\n}\n"],"file":"generateBlurVertSource.js"}