{"version":3,"sources":["../../../src/filters/blur/BlurFilter.js"],"names":["BlurFilter","Filter","constructor","strength","quality","resolution","kernelSize","blurXFilter","BlurXFilter","blurYFilter","BlurYFilter","padding","settings","RESOLUTION","blur","apply","filterManager","input","output","renderTarget","getRenderTarget","returnRenderTarget","value","Math","max","abs","blurX","blurY","blendMode","_blendMode"],"mappings":"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","sourcesContent":["import settings from \"../../settings\";\nimport Filter from \"../../renderers/webgl/filters/Filter\";\nimport BlurXFilter from \"./BlurXFilter\";\nimport BlurYFilter from \"./BlurYFilter\";\n\nexport default class BlurFilter extends Filter {\n  constructor(strength, quality, resolution, kernelSize) {\n    super();\n\n    this.blurXFilter = new BlurXFilter(\n      strength,\n      quality,\n      resolution,\n      kernelSize\n    );\n    this.blurYFilter = new BlurYFilter(\n      strength,\n      quality,\n      resolution,\n      kernelSize\n    );\n\n    this.padding = 0;\n    this.resolution = resolution || settings.RESOLUTION;\n    this.quality = quality || 4;\n    this.blur = strength || 8;\n  }\n\n  apply(filterManager, input, output) {\n    const renderTarget = filterManager.getRenderTarget(true);\n\n    this.blurXFilter.apply(filterManager, input, renderTarget, true);\n    this.blurYFilter.apply(filterManager, renderTarget, output, false);\n    filterManager.returnRenderTarget(renderTarget);\n  }\n\n  /**\n   * Sets the strength of both the blurX and blurY properties simultaneously\n   *\n   * @member {number}\n   * @default 2\n   */\n  get blur() {\n    return this.blurXFilter.blur;\n  }\n\n  set blur(value) {\n    this.blurXFilter.blur = this.blurYFilter.blur = value;\n    this.padding =\n      Math.max(\n        Math.abs(this.blurXFilter.strength),\n        Math.abs(this.blurYFilter.strength)\n      ) * 2;\n  }\n\n  /**\n   * Sets the number of passes for blur. More passes means higher quaility bluring.\n   *\n   * @member {number}\n   * @default 1\n   */\n  get quality() {\n    return this.blurXFilter.quality;\n  }\n\n  set quality(value) {\n    this.blurXFilter.quality = this.blurYFilter.quality = value;\n  }\n\n  /**\n   * Sets the strength of the blurX property\n   *\n   * @member {number}\n   * @default 2\n   */\n  get blurX() {\n    return this.blurXFilter.blur;\n  }\n\n  set blurX(value) {\n    this.blurXFilter.blur = value;\n    this.padding =\n      Math.max(\n        Math.abs(this.blurXFilter.strength),\n        Math.abs(this.blurYFilter.strength)\n      ) * 2;\n  }\n\n  /**\n   * Sets the strength of the blurY property\n   *\n   * @member {number}\n   * @default 2\n   */\n  get blurY() {\n    return this.blurYFilter.blur;\n  }\n\n  set blurY(value) {\n    this.blurYFilter.blur = value;\n    this.padding =\n      Math.max(\n        Math.abs(this.blurXFilter.strength),\n        Math.abs(this.blurYFilter.strength)\n      ) * 2;\n  }\n\n  get blendMode() {\n    return this.blurYFilter._blendMode;\n  }\n\n  set blendMode(value) {\n    this.blurYFilter._blendMode = value;\n  }\n}\n"],"file":"BlurFilter.js"}