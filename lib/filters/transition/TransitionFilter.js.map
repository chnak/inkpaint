{"version":3,"sources":["../../../src/filters/transition/TransitionFilter.js"],"names":["TransitionFilter","Filter","constructor","transition","vert","frag","glsl","lines","line","split","trim","startsWith","words","word","replace","push","join","prev","fromSprite","next","toSprite","sprite","setSprite","ratio","uniforms","offset","_offset","params","unit","key","paramsTypes","value","defaultParams","console","warn","bind","Error","renderable","texture","updateProgress","progress"],"mappings":"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","sourcesContent":["import Filter from \"../../renderers/webgl/filters/Filter\";\nimport { readFileSync } from \"fs\";\nimport { join } from \"path\";\n\nexport default class TransitionFilter extends Filter {\n  constructor(transition) {\n    let vert = readFileSync(join(__dirname, \"./trans.vert\"), \"utf8\");\n    let frag = readFileSync(join(__dirname, \"./trans.frag\"), \"utf8\");\n\n    // todo: extractUniformsFromString写的比较烂，需要过滤掉注释\n    let glsl = transition.glsl;\n    const lines = [];\n    for (let line of glsl.split(\"\\n\")) {\n      line = line.trim();\n      if (line.startsWith('//')) continue;\n      if (line.startsWith('uniform ')) {\n        const words = [];\n        for (const word of line.replace(/\\s+/g, ' ').split(\" \")) {\n          if (word.startsWith('//')) break;\n          words.push(word);\n        }\n        lines.push(words.join(' '));\n      } else {\n        lines.push(line);\n      }\n    }\n    glsl = lines.join(\"\\n\");\n    frag = frag.replace('${transitionGlsl}', glsl);\n    super(vert, frag);\n\n    this.transition = transition;\n  }\n\n  // apply(filterManager, input, output) {\n  //   console.log('apply', this.uniforms);\n  //   super.apply(filterManager, input, output);\n  // }\n\n  get prev() {\n    return this.fromSprite;\n  }\n\n  get next() {\n    return this.toSprite;\n  }\n\n  set prev(sprite) {\n    this.setSprite('from', sprite);\n  }\n\n  set next(sprite) {\n    this.setSprite('to', sprite);\n  }\n\n  get ratio() {\n    return this.uniforms.ratio;\n  }\n\n  set ratio(ratio) {\n    this.uniforms.ratio = ratio;\n  }\n\n  get offset() {\n    return this.uniforms._offset;\n  }\n\n  set offset(offset) {\n    this.uniforms._offset = offset;\n  }\n\n  set params(params) {\n    let unit = 2;\n    const { transition, uniforms } = this;\n    for (let key in transition.paramsTypes) {\n      const value = key in params\n        ? params[key]\n        : transition.defaultParams[key];\n      if (transition.paramsTypes[key] === \"sampler2D\") {\n        if (!value) {\n          console.warn(\n            \"uniform[\" +\n              key +\n              \"]: A texture MUST be defined for uniform sampler2D of a texture\"\n          );\n        } else if (typeof value.bind !== \"function\") {\n          throw new Error(\n            \"uniform[\" +\n              key +\n              \"]: A gl-texture2d API-like object was expected\"\n          );\n        } else {\n          uniforms[key] = value.bind(unit++);\n        }\n      } else {\n        uniforms[key] = value;\n      }\n    }\n  }\n\n  setSprite(key, sprite) {\n    this[`${key}Sprite`] = sprite;\n    sprite.renderable = false;\n    this.uniforms[`${key}Sampler`] = sprite.texture;\n  }\n\n  updateProgress(progress) {\n    this.uniforms.progress = progress;\n  }\n}\n"],"file":"TransitionFilter.js"}