{"version":3,"sources":["../../src/graphics/GraphicsData.js"],"names":["GraphicsData","constructor","lineWidth","lineColor","lineAlpha","fillColor","fillAlpha","fill","nativeLines","shape","lineAlignment","_lineTint","_fillTint","holes","type","clone","addHole","push","destroy"],"mappings":";;;;;;;AAAe,MAAMA,YAAN,CAAmB;AAChCC,EAAAA,WAAW,CACTC,SADS,EAETC,SAFS,EAGTC,SAHS,EAITC,SAJS,EAKTC,SALS,EAMTC,IANS,EAOTC,WAPS,EAQTC,KARS,EASTC,aATS,EAUT;AACA,SAAKR,SAAL,GAAiBA,SAAjB;AACA,SAAKQ,aAAL,GAAqBA,aAArB;AACA,SAAKF,WAAL,GAAmBA,WAAnB;AACA,SAAKL,SAAL,GAAiBA,SAAjB;AAEA,SAAKC,SAAL,GAAiBA,SAAjB;AACA,SAAKO,SAAL,GAAiBR,SAAjB;AAEA;AACJ;AACA;AACA;;AACI,SAAKE,SAAL,GAAiBA,SAAjB;AAEA;AACJ;AACA;AACA;;AACI,SAAKC,SAAL,GAAiBA,SAAjB;AAEA;AACJ;AACA;AACA;AACA;;AACI,SAAKM,SAAL,GAAiBP,SAAjB;AAEA;AACJ;AACA;AACA;;AACI,SAAKE,IAAL,GAAYA,IAAZ;AAEA,SAAKM,KAAL,GAAa,EAAb;AAEA;AACJ;AACA;AACA;;AACI,SAAKJ,KAAL,GAAaA,KAAb;AAEA;AACJ;AACA;AACA;;AACI,SAAKK,IAAL,GAAYL,KAAK,CAACK,IAAlB;AACD;AAED;AACF;AACA;AACA;AACA;;;AACEC,EAAAA,KAAK,GAAG;AACN,WAAO,IAAIf,YAAJ,CACL,KAAKE,SADA,EAEL,KAAKC,SAFA,EAGL,KAAKC,SAHA,EAIL,KAAKC,SAJA,EAKL,KAAKC,SALA,EAML,KAAKC,IANA,EAOL,KAAKC,WAPA,EAQL,KAAKC,KARA,EASL,KAAKC,aATA,CAAP;AAWD;AAED;AACF;AACA;AACA;AACA;;;AACEM,EAAAA,OAAO,CAACP,KAAD,EAAQ;AACb,SAAKI,KAAL,CAAWI,IAAX,CAAgBR,KAAhB;AACD;AAED;AACF;AACA;;;AACES,EAAAA,OAAO,GAAG;AACR,SAAKT,KAAL,GAAa,IAAb;AACA,SAAKI,KAAL,GAAa,IAAb;AACD;;AA9F+B","sourcesContent":["export default class GraphicsData {\n  constructor(\n    lineWidth,\n    lineColor,\n    lineAlpha,\n    fillColor,\n    fillAlpha,\n    fill,\n    nativeLines,\n    shape,\n    lineAlignment\n  ) {\n    this.lineWidth = lineWidth;\n    this.lineAlignment = lineAlignment;\n    this.nativeLines = nativeLines;\n    this.lineColor = lineColor;\n\n    this.lineAlpha = lineAlpha;\n    this._lineTint = lineColor;\n\n    /**\n     * the color of the fill\n     * @member {number}\n     */\n    this.fillColor = fillColor;\n\n    /**\n     * the alpha of the fill\n     * @member {number}\n     */\n    this.fillAlpha = fillAlpha;\n\n    /**\n     * cached tint of the fill\n     * @member {number}\n     * @private\n     */\n    this._fillTint = fillColor;\n\n    /**\n     * whether or not the shape is filled with a colour\n     * @member {boolean}\n     */\n    this.fill = fill;\n\n    this.holes = [];\n\n    /**\n     * The shape object to draw.\n     * @member {InkPaint.Circle|InkPaint.Ellipse|InkPaint.Polygon|InkPaint.Rectangle|InkPaint.RoundedRectangle}\n     */\n    this.shape = shape;\n\n    /**\n     * The type of the shape, see the Const.Shapes file for all the existing types,\n     * @member {number}\n     */\n    this.type = shape.type;\n  }\n\n  /**\n   * Creates a new GraphicsData object with the same values as this one.\n   *\n   * @return {InkPaint.GraphicsData} Cloned GraphicsData object\n   */\n  clone() {\n    return new GraphicsData(\n      this.lineWidth,\n      this.lineColor,\n      this.lineAlpha,\n      this.fillColor,\n      this.fillAlpha,\n      this.fill,\n      this.nativeLines,\n      this.shape,\n      this.lineAlignment\n    );\n  }\n\n  /**\n   * Adds a hole to the shape.\n   *\n   * @param {InkPaint.Rectangle|InkPaint.Circle} shape - The shape of the hole.\n   */\n  addHole(shape) {\n    this.holes.push(shape);\n  }\n\n  /**\n   * Destroys the Graphics data.\n   */\n  destroy() {\n    this.shape = null;\n    this.holes = null;\n  }\n}\n"],"file":"GraphicsData.js"}