{"version":3,"sources":["../../../src/graphics/canvas/CanvasGraphicsRenderer.js"],"names":["CanvasGraphicsRenderer","constructor","renderer","render","graphics","context","worldAlpha","transform","worldTransform","resolution","setTransform","a","b","c","d","tx","ty","canvasTintDirty","dirty","_prevTint","tint","updateGraphicsTint","setBlendMode","blendMode","i","graphicsData","length","data","shape","fillColor","_fillTint","lineColor","_lineTint","lineWidth","type","SHAPES","POLY","beginPath","points","holes","outerArea","innerArea","px","py","moveTo","j","lineTo","closed","closePath","k","close","fill","globalAlpha","fillAlpha","fillStyle","toString","substr","lineAlpha","strokeStyle","stroke","RECT","fillRect","x","y","width","height","strokeRect","CIRC","arc","radius","Math","PI","ELIP","w","h","kappa","ox","oy","xe","ye","xm","ym","bezierCurveTo","RREC","rx","ry","maxRadius","min","quadraticCurveTo","tintR","tintG","tintB","renderPolygon","destroy","CanvasRenderer","registerPlugin"],"mappings":"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","sourcesContent":["import CanvasRenderer from \"../../renderers/canvas/CanvasRenderer\";\nimport { SHAPES } from \"../../const\";\n\nexport default class CanvasGraphicsRenderer {\n  constructor(renderer) {\n    this.renderer = renderer;\n  }\n\n  render(graphics) {\n    const renderer = this.renderer;\n    const context = renderer.context;\n    const worldAlpha = graphics.worldAlpha;\n    const transform = graphics.transform.worldTransform;\n    const resolution = renderer.resolution;\n\n    context.setTransform(\n      transform.a * resolution,\n      transform.b * resolution,\n      transform.c * resolution,\n      transform.d * resolution,\n      transform.tx * resolution,\n      transform.ty * resolution\n    );\n\n    // update tint if graphics was dirty\n    if (\n      graphics.canvasTintDirty !== graphics.dirty ||\n      graphics._prevTint !== graphics.tint\n    ) {\n      this.updateGraphicsTint(graphics);\n    }\n\n    renderer.setBlendMode(graphics.blendMode);\n\n    for (let i = 0; i < graphics.graphicsData.length; i++) {\n      const data = graphics.graphicsData[i];\n      const shape = data.shape;\n\n      const fillColor = data._fillTint;\n      const lineColor = data._lineTint;\n\n      context.lineWidth = data.lineWidth;\n\n      if (data.type === SHAPES.POLY) {\n        context.beginPath();\n\n        let points = shape.points;\n        const holes = data.holes;\n        let outerArea;\n        let innerArea;\n        let px;\n        let py;\n\n        context.moveTo(points[0], points[1]);\n\n        for (let j = 2; j < points.length; j += 2) {\n          context.lineTo(points[j], points[j + 1]);\n        }\n\n        // if the first and last point are the same close the path - much neater :)\n        if (shape.closed) {\n          context.closePath();\n        }\n\n        if (holes.length > 0) {\n          outerArea = 0;\n          px = points[0];\n          py = points[1];\n          for (let j = 2; j + 2 < points.length; j += 2) {\n            outerArea +=\n              (points[j] - px) * (points[j + 3] - py) -\n              (points[j + 2] - px) * (points[j + 1] - py);\n          }\n\n          for (let k = 0; k < holes.length; k++) {\n            points = holes[k].points;\n\n            if (!points) {\n              continue;\n            }\n\n            innerArea = 0;\n            px = points[0];\n            py = points[1];\n            for (let j = 2; j + 2 < points.length; j += 2) {\n              innerArea +=\n                (points[j] - px) * (points[j + 3] - py) -\n                (points[j + 2] - px) * (points[j + 1] - py);\n            }\n\n            if (innerArea * outerArea < 0) {\n              context.moveTo(points[0], points[1]);\n\n              for (let j = 2; j < points.length; j += 2) {\n                context.lineTo(points[j], points[j + 1]);\n              }\n            } else {\n              context.moveTo(\n                points[points.length - 2],\n                points[points.length - 1]\n              );\n\n              for (let j = points.length - 4; j >= 0; j -= 2) {\n                context.lineTo(points[j], points[j + 1]);\n              }\n            }\n\n            if (holes[k].close) {\n              context.closePath();\n            }\n          }\n        }\n\n        if (data.fill) {\n          context.globalAlpha = data.fillAlpha * worldAlpha;\n          context.fillStyle = `#${`00000${(fillColor | 0).toString(16)}`.substr(\n            -6\n          )}`;\n          context.fill();\n        }\n        if (data.lineWidth) {\n          context.globalAlpha = data.lineAlpha * worldAlpha;\n          context.strokeStyle = `#${`00000${(lineColor | 0).toString(\n            16\n          )}`.substr(-6)}`;\n          context.stroke();\n        }\n      } else if (data.type === SHAPES.RECT) {\n        if (data.fillColor || data.fillColor === 0) {\n          context.globalAlpha = data.fillAlpha * worldAlpha;\n          context.fillStyle = `#${`00000${(fillColor | 0).toString(16)}`.substr(\n            -6\n          )}`;\n          context.fillRect(shape.x, shape.y, shape.width, shape.height);\n        }\n        if (data.lineWidth) {\n          context.globalAlpha = data.lineAlpha * worldAlpha;\n          context.strokeStyle = `#${`00000${(lineColor | 0).toString(\n            16\n          )}`.substr(-6)}`;\n          context.strokeRect(shape.x, shape.y, shape.width, shape.height);\n        }\n      } else if (data.type === SHAPES.CIRC) {\n        // TODO - need to be Undefined!\n        context.beginPath();\n        context.arc(shape.x, shape.y, shape.radius, 0, 2 * Math.PI);\n        context.closePath();\n\n        if (data.fill) {\n          context.globalAlpha = data.fillAlpha * worldAlpha;\n          context.fillStyle = `#${`00000${(fillColor | 0).toString(16)}`.substr(\n            -6\n          )}`;\n          context.fill();\n        }\n        if (data.lineWidth) {\n          context.globalAlpha = data.lineAlpha * worldAlpha;\n          context.strokeStyle = `#${`00000${(lineColor | 0).toString(\n            16\n          )}`.substr(-6)}`;\n          context.stroke();\n        }\n      } else if (data.type === SHAPES.ELIP) {\n        // ellipse code taken from: http://stackoverflow.com/questions/2172798/how-to-draw-an-oval-in-html5-canvas\n\n        const w = shape.width * 2;\n        const h = shape.height * 2;\n\n        const x = shape.x - w / 2;\n        const y = shape.y - h / 2;\n\n        context.beginPath();\n\n        const kappa = 0.5522848;\n        const ox = (w / 2) * kappa; // control point offset horizontal\n        const oy = (h / 2) * kappa; // control point offset vertical\n        const xe = x + w; // x-end\n        const ye = y + h; // y-end\n        const xm = x + w / 2; // x-middle\n        const ym = y + h / 2; // y-middle\n\n        context.moveTo(x, ym);\n        context.bezierCurveTo(x, ym - oy, xm - ox, y, xm, y);\n        context.bezierCurveTo(xm + ox, y, xe, ym - oy, xe, ym);\n        context.bezierCurveTo(xe, ym + oy, xm + ox, ye, xm, ye);\n        context.bezierCurveTo(xm - ox, ye, x, ym + oy, x, ym);\n\n        context.closePath();\n\n        if (data.fill) {\n          context.globalAlpha = data.fillAlpha * worldAlpha;\n          context.fillStyle = `#${`00000${(fillColor | 0).toString(16)}`.substr(\n            -6\n          )}`;\n          context.fill();\n        }\n        if (data.lineWidth) {\n          context.globalAlpha = data.lineAlpha * worldAlpha;\n          context.strokeStyle = `#${`00000${(lineColor | 0).toString(\n            16\n          )}`.substr(-6)}`;\n          context.stroke();\n        }\n      } else if (data.type === SHAPES.RREC) {\n        const rx = shape.x;\n        const ry = shape.y;\n        const width = shape.width;\n        const height = shape.height;\n        let radius = shape.radius;\n\n        const maxRadius = (Math.min(width, height) / 2) | 0;\n\n        radius = radius > maxRadius ? maxRadius : radius;\n\n        context.beginPath();\n        context.moveTo(rx, ry + radius);\n        context.lineTo(rx, ry + height - radius);\n        context.quadraticCurveTo(rx, ry + height, rx + radius, ry + height);\n        context.lineTo(rx + width - radius, ry + height);\n        context.quadraticCurveTo(\n          rx + width,\n          ry + height,\n          rx + width,\n          ry + height - radius\n        );\n        context.lineTo(rx + width, ry + radius);\n        context.quadraticCurveTo(rx + width, ry, rx + width - radius, ry);\n        context.lineTo(rx + radius, ry);\n        context.quadraticCurveTo(rx, ry, rx, ry + radius);\n        context.closePath();\n\n        if (data.fillColor || data.fillColor === 0) {\n          context.globalAlpha = data.fillAlpha * worldAlpha;\n          context.fillStyle = `#${`00000${(fillColor | 0).toString(16)}`.substr(\n            -6\n          )}`;\n          context.fill();\n        }\n\n        if (data.lineWidth) {\n          context.globalAlpha = data.lineAlpha * worldAlpha;\n          context.strokeStyle = `#${`00000${(lineColor | 0).toString(\n            16\n          )}`.substr(-6)}`;\n          context.stroke();\n        }\n      }\n    }\n  }\n\n  /**\n   * Updates the tint of a graphics object\n   *\n   * @private\n   * @param {InkPaint.Graphics} graphics - the graphics that will have its tint updated\n   */\n  updateGraphicsTint(graphics) {\n    graphics._prevTint = graphics.tint;\n    graphics.canvasTintDirty = graphics.dirty;\n\n    const tintR = ((graphics.tint >> 16) & 0xff) / 255;\n    const tintG = ((graphics.tint >> 8) & 0xff) / 255;\n    const tintB = (graphics.tint & 0xff) / 255;\n\n    for (let i = 0; i < graphics.graphicsData.length; ++i) {\n      const data = graphics.graphicsData[i];\n\n      const fillColor = data.fillColor | 0;\n      const lineColor = data.lineColor | 0;\n\n      // super inline, cos optimization :)\n      data._fillTint =\n        (((((fillColor >> 16) & 0xff) / 255) * tintR * 255) << 16) +\n        (((((fillColor >> 8) & 0xff) / 255) * tintG * 255) << 8) +\n        ((fillColor & 0xff) / 255) * tintB * 255;\n\n      data._lineTint =\n        (((((lineColor >> 16) & 0xff) / 255) * tintR * 255) << 16) +\n        (((((lineColor >> 8) & 0xff) / 255) * tintG * 255) << 8) +\n        ((lineColor & 0xff) / 255) * tintB * 255;\n    }\n  }\n\n  renderPolygon(points, close, context) {\n    context.moveTo(points[0], points[1]);\n\n    for (let j = 1; j < points.length / 2; ++j) {\n      context.lineTo(points[j * 2], points[j * 2 + 1]);\n    }\n\n    if (close) {\n      context.closePath();\n    }\n  }\n\n  /**\n   * destroy graphics object\n   *\n   */\n  destroy() {\n    this.renderer = null;\n  }\n}\n\nCanvasRenderer.registerPlugin(\"graphics\", CanvasGraphicsRenderer);\n"],"file":"CanvasGraphicsRenderer.js"}