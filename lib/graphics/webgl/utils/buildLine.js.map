{"version":3,"sources":["../../../../src/graphics/webgl/utils/buildLine.js"],"names":["graphicsData","webGLData","webGLDataNativeLines","nativeLines","buildNativeLine","buildLine","points","length","firstPoint","Point","lastPoint","x","y","slice","pop","midPointX","midPointY","unshift","push","verts","indices","indexCount","indexStart","width","lineWidth","color","lineColor","alpha","lineAlpha","r","g","b","p1x","p1y","p2x","p2y","p3x","p3y","perpx","perpy","perp2x","perp2y","perp3x","perp3y","dist","Math","sqrt","ratio","lineAlignment","r1","r2","i","a1","b1","c1","a2","b2","c2","denom","abs","px","py","pdist"],"mappings":"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","sourcesContent":["import { Point } from '../../../math';\nimport { hex2rgb } from '../../../utils';\n\n/**\n * Builds a line to draw\n *\n * Ignored from docs since it is not directly exposed.\n *\n * @ignore\n * @private\n * @param {InkPaint.WebGLGraphicsData} graphicsData - The graphics object containing all the necessary properties\n * @param {object} webGLData - an object containing all the webGL-specific information to create this shape\n * @param {object} webGLDataNativeLines - an object containing all the webGL-specific information to create nativeLines\n */\nexport default function (graphicsData, webGLData, webGLDataNativeLines)\n{\n    if (graphicsData.nativeLines)\n    {\n        buildNativeLine(graphicsData, webGLDataNativeLines);\n    }\n    else\n    {\n        buildLine(graphicsData, webGLData);\n    }\n}\n\n/**\n * Builds a line to draw using the poligon method.\n *\n * Ignored from docs since it is not directly exposed.\n *\n * @ignore\n * @private\n * @param {InkPaint.WebGLGraphicsData} graphicsData - The graphics object containing all the necessary properties\n * @param {object} webGLData - an object containing all the webGL-specific information to create this shape\n */\nfunction buildLine(graphicsData, webGLData)\n{\n    // TODO OPTIMISE!\n    let points = graphicsData.points;\n\n    if (points.length === 0)\n    {\n        return;\n    }\n    // if the line width is an odd number add 0.5 to align to a whole pixel\n    // commenting this out fixes #711 and #1620\n    // if (graphicsData.lineWidth%2)\n    // {\n    //     for (i = 0; i < points.length; i++)\n    //     {\n    //         points[i] += 0.5;\n    //     }\n    // }\n\n    // get first and last point.. figure out the middle!\n    const firstPoint = new Point(points[0], points[1]);\n    let lastPoint = new Point(points[points.length - 2], points[points.length - 1]);\n\n    // if the first point is the last point - gonna have issues :)\n    if (firstPoint.x === lastPoint.x && firstPoint.y === lastPoint.y)\n    {\n        // need to clone as we are going to slightly modify the shape..\n        points = points.slice();\n\n        points.pop();\n        points.pop();\n\n        lastPoint = new Point(points[points.length - 2], points[points.length - 1]);\n\n        const midPointX = lastPoint.x + ((firstPoint.x - lastPoint.x) * 0.5);\n        const midPointY = lastPoint.y + ((firstPoint.y - lastPoint.y) * 0.5);\n\n        points.unshift(midPointX, midPointY);\n        points.push(midPointX, midPointY);\n    }\n\n    const verts = webGLData.points;\n    const indices = webGLData.indices;\n    const length = points.length / 2;\n    let indexCount = points.length;\n    let indexStart = verts.length / 6;\n\n    // DRAW the Line\n    const width = graphicsData.lineWidth / 2;\n\n    // sort color\n    const color = hex2rgb(graphicsData.lineColor);\n    const alpha = graphicsData.lineAlpha;\n    const r = color[0] * alpha;\n    const g = color[1] * alpha;\n    const b = color[2] * alpha;\n\n    let p1x = points[0];\n    let p1y = points[1];\n    let p2x = points[2];\n    let p2y = points[3];\n    let p3x = 0;\n    let p3y = 0;\n\n    let perpx = -(p1y - p2y);\n    let perpy = p1x - p2x;\n    let perp2x = 0;\n    let perp2y = 0;\n    let perp3x = 0;\n    let perp3y = 0;\n\n    let dist = Math.sqrt((perpx * perpx) + (perpy * perpy));\n\n    perpx /= dist;\n    perpy /= dist;\n    perpx *= width;\n    perpy *= width;\n\n    const ratio = graphicsData.lineAlignment;// 0.5;\n    const r1 = (1 - ratio) * 2;\n    const r2 = ratio * 2;\n\n    // start\n    verts.push(\n        p1x - (perpx * r1),\n        p1y - (perpy * r1),\n        r, g, b, alpha\n    );\n\n    verts.push(\n        p1x + (perpx * r2),\n        p1y + (perpy * r2),\n        r, g, b, alpha\n    );\n\n    for (let i = 1; i < length - 1; ++i)\n    {\n        p1x = points[(i - 1) * 2];\n        p1y = points[((i - 1) * 2) + 1];\n\n        p2x = points[i * 2];\n        p2y = points[(i * 2) + 1];\n\n        p3x = points[(i + 1) * 2];\n        p3y = points[((i + 1) * 2) + 1];\n\n        perpx = -(p1y - p2y);\n        perpy = p1x - p2x;\n\n        dist = Math.sqrt((perpx * perpx) + (perpy * perpy));\n        perpx /= dist;\n        perpy /= dist;\n        perpx *= width;\n        perpy *= width;\n\n        perp2x = -(p2y - p3y);\n        perp2y = p2x - p3x;\n\n        dist = Math.sqrt((perp2x * perp2x) + (perp2y * perp2y));\n        perp2x /= dist;\n        perp2y /= dist;\n        perp2x *= width;\n        perp2y *= width;\n\n        const a1 = (-perpy + p1y) - (-perpy + p2y);\n        const b1 = (-perpx + p2x) - (-perpx + p1x);\n        const c1 = ((-perpx + p1x) * (-perpy + p2y)) - ((-perpx + p2x) * (-perpy + p1y));\n        const a2 = (-perp2y + p3y) - (-perp2y + p2y);\n        const b2 = (-perp2x + p2x) - (-perp2x + p3x);\n        const c2 = ((-perp2x + p3x) * (-perp2y + p2y)) - ((-perp2x + p2x) * (-perp2y + p3y));\n\n        let denom = (a1 * b2) - (a2 * b1);\n\n        if (Math.abs(denom) < 0.1)\n        {\n            denom += 10.1;\n            verts.push(\n                p2x - (perpx * r1),\n                p2y - (perpy * r1),\n                r, g, b, alpha\n            );\n\n            verts.push(\n                p2x + (perpx * r2),\n                p2y + (perpy * r2),\n                r, g, b, alpha\n            );\n\n            continue;\n        }\n\n        const px = ((b1 * c2) - (b2 * c1)) / denom;\n        const py = ((a2 * c1) - (a1 * c2)) / denom;\n        const pdist = ((px - p2x) * (px - p2x)) + ((py - p2y) * (py - p2y));\n\n        if (pdist > (196 * width * width))\n        {\n            perp3x = perpx - perp2x;\n            perp3y = perpy - perp2y;\n\n            dist = Math.sqrt((perp3x * perp3x) + (perp3y * perp3y));\n            perp3x /= dist;\n            perp3y /= dist;\n            perp3x *= width;\n            perp3y *= width;\n\n            verts.push(p2x - (perp3x * r1), p2y - (perp3y * r1));\n            verts.push(r, g, b, alpha);\n\n            verts.push(p2x + (perp3x * r2), p2y + (perp3y * r2));\n            verts.push(r, g, b, alpha);\n\n            verts.push(p2x - (perp3x * r2 * r1), p2y - (perp3y * r1));\n            verts.push(r, g, b, alpha);\n\n            indexCount++;\n        }\n        else\n        {\n            verts.push(p2x + ((px - p2x) * r1), p2y + ((py - p2y) * r1));\n            verts.push(r, g, b, alpha);\n\n            verts.push(p2x - ((px - p2x) * r2), p2y - ((py - p2y) * r2));\n            verts.push(r, g, b, alpha);\n        }\n    }\n\n    p1x = points[(length - 2) * 2];\n    p1y = points[((length - 2) * 2) + 1];\n\n    p2x = points[(length - 1) * 2];\n    p2y = points[((length - 1) * 2) + 1];\n\n    perpx = -(p1y - p2y);\n    perpy = p1x - p2x;\n\n    dist = Math.sqrt((perpx * perpx) + (perpy * perpy));\n    perpx /= dist;\n    perpy /= dist;\n    perpx *= width;\n    perpy *= width;\n\n    verts.push(p2x - (perpx * r1), p2y - (perpy * r1));\n    verts.push(r, g, b, alpha);\n\n    verts.push(p2x + (perpx * r2), p2y + (perpy * r2));\n    verts.push(r, g, b, alpha);\n\n    indices.push(indexStart);\n\n    for (let i = 0; i < indexCount; ++i)\n    {\n        indices.push(indexStart++);\n    }\n\n    indices.push(indexStart - 1);\n}\n\n/**\n * Builds a line to draw using the gl.drawArrays(gl.LINES) method\n *\n * Ignored from docs since it is not directly exposed.\n *\n * @ignore\n * @private\n * @param {InkPaint.WebGLGraphicsData} graphicsData - The graphics object containing all the necessary properties\n * @param {object} webGLData - an object containing all the webGL-specific information to create this shape\n */\nfunction buildNativeLine(graphicsData, webGLData)\n{\n    let i = 0;\n    const points = graphicsData.points;\n\n    if (points.length === 0) return;\n\n    const verts = webGLData.points;\n    const length = points.length / 2;\n\n    // sort color\n    const color = hex2rgb(graphicsData.lineColor);\n    const alpha = graphicsData.lineAlpha;\n    const r = color[0] * alpha;\n    const g = color[1] * alpha;\n    const b = color[2] * alpha;\n\n    for (i = 1; i < length; i++)\n    {\n        const p1x = points[(i - 1) * 2];\n        const p1y = points[((i - 1) * 2) + 1];\n\n        const p2x = points[i * 2];\n        const p2y = points[(i * 2) + 1];\n\n        verts.push(p1x, p1y);\n        verts.push(r, g, b, alpha);\n\n        verts.push(p2x, p2y);\n        verts.push(r, g, b, alpha);\n    }\n}\n"],"file":"buildLine.js"}