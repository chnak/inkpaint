{"version":3,"sources":["../../../../src/renderers/webgl/managers/StencilManager.js"],"names":["StencilManager","WebGLManager","constructor","renderer","stencilMaskStack","setMaskStack","gl","length","disable","STENCIL_TEST","enable","pushStencil","graphics","setObjectRenderer","plugins","_activeRenderTarget","attachStencilBuffer","prevMaskCount","push","colorMask","stencilFunc","EQUAL","_getBitwiseMask","stencilOp","KEEP","INCR","render","_useCurrent","popStencil","pop","clear","STENCIL_BUFFER_BIT","clearStencil","DECR","destroy","prototype","call","stencilStack"],"mappings":"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","sourcesContent":["import WebGLManager from \"./WebGLManager\";\n\nexport default class StencilManager extends WebGLManager {\n  constructor(renderer) {\n    super(renderer);\n    this.stencilMaskStack = null;\n  }\n\n  setMaskStack(stencilMaskStack) {\n    this.stencilMaskStack = stencilMaskStack;\n\n    const gl = this.renderer.gl;\n\n    if (stencilMaskStack.length === 0) {\n      gl.disable(gl.STENCIL_TEST);\n    } else {\n      gl.enable(gl.STENCIL_TEST);\n    }\n  }\n\n  pushStencil(graphics) {\n    this.renderer.setObjectRenderer(this.renderer.plugins.graphics);\n\n    this.renderer._activeRenderTarget.attachStencilBuffer();\n\n    const gl = this.renderer.gl;\n    const prevMaskCount = this.stencilMaskStack.length;\n\n    if (prevMaskCount === 0) {\n      gl.enable(gl.STENCIL_TEST);\n    }\n\n    this.stencilMaskStack.push(graphics);\n\n    // Increment the reference stencil value where the new mask overlaps with the old ones.\n    gl.colorMask(false, false, false, false);\n    gl.stencilFunc(gl.EQUAL, prevMaskCount, this._getBitwiseMask());\n    gl.stencilOp(gl.KEEP, gl.KEEP, gl.INCR);\n    this.renderer.plugins.graphics.render(graphics);\n\n    this._useCurrent();\n  }\n\n  popStencil() {\n    this.renderer.setObjectRenderer(this.renderer.plugins.graphics);\n\n    const gl = this.renderer.gl;\n    const graphics = this.stencilMaskStack.pop();\n\n    if (this.stencilMaskStack.length === 0) {\n      // the stack is empty!\n      gl.disable(gl.STENCIL_TEST);\n      gl.clear(gl.STENCIL_BUFFER_BIT);\n      gl.clearStencil(0);\n    } else {\n      // Decrement the reference stencil value where the popped mask overlaps with the other ones\n      gl.colorMask(false, false, false, false);\n      gl.stencilOp(gl.KEEP, gl.KEEP, gl.DECR);\n      this.renderer.plugins.graphics.render(graphics);\n\n      this._useCurrent();\n    }\n  }\n\n  _useCurrent() {\n    const gl = this.renderer.gl;\n\n    gl.colorMask(true, true, true, true);\n    gl.stencilFunc(\n      gl.EQUAL,\n      this.stencilMaskStack.length,\n      this._getBitwiseMask()\n    );\n    gl.stencilOp(gl.KEEP, gl.KEEP, gl.KEEP);\n  }\n\n  _getBitwiseMask() {\n    return (1 << this.stencilMaskStack.length) - 1;\n  }\n\n  destroy() {\n    WebGLManager.prototype.destroy.call(this);\n    this.stencilMaskStack.stencilStack = null;\n  }\n}\n"],"file":"StencilManager.js"}