{"version":3,"sources":["../../../../src/renderers/webgl/managers/FilterManager.js"],"names":["FilterState","constructor","renderTarget","target","resolution","sourceFrame","Rectangle","destinationFrame","filters","clear","screenKey","FilterManager","WebGLManager","renderer","gl","quad","Quad","state","attribState","shaderCache","pool","filterData","managedFilters","on","onPrerender","_screenWidth","view","width","_screenHeight","height","pushFilter","_activeRenderTarget","filterStack","filterState","size","index","stack","currentState","renderTargetFrame","fullScreen","filterArea","x","y","screen","padding","targetBounds","getBounds","transform","autoFit","fit","pad","getPotRenderTarget","setFrame","bindRenderTarget","popFilter","lastState","map","upload","length","apply","freePotRenderTarget","flip","flop","i","t","applyFilter","filter","input","output","shader","glShaders","CONTEXT_UID","glShaderKey","Shader","vertexSrc","fragmentSrc","push","bindVao","initVao","vao","disable","SCISSOR_TEST","enable","maskManager","scissorRenderTarget","pushScissorMask","scissorData","bindShader","tex","emptyTextures","boundTextures","syncUniforms","setBlendMode","blendMode","activeTexture","TEXTURE0","bindTexture","TEXTURE_2D","texture","draw","TRIANGLES","_glTextures","uniformData","uniforms","textureCount","filterClamp","data","type","baseTexture","bind","a","undefined","toArray","val","Float32Array","value","getRenderTarget","returnRenderTarget","calculateScreenSpaceMatrix","outputMatrix","filterTransforms","calculateNormalizedScreenSpaceMatrix","calculateSpriteMatrix","sprite","destroy","contextLost","off","emptyPool","minWidth","minHeight","key","bitTwiddle","nextPow2","pop","RenderTarget","defaultFrame","filterPoolKey","textures","j"],"mappings":"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","sourcesContent":["import WebGLManager from \"./WebGLManager\";\nimport RenderTarget from \"../utils/RenderTarget\";\nimport Quad from \"../utils/Quad\";\nimport { Rectangle } from \"../../../math\";\nimport Shader from \"../../../Shader\";\nimport * as filterTransforms from \"../filters/filterTransforms\";\nimport bitTwiddle from \"bit-twiddle\";\n\nclass FilterState {\n  constructor() {\n    this.renderTarget = null;\n    this.target = null;\n    this.resolution = 1;\n    this.sourceFrame = new Rectangle();\n    this.destinationFrame = new Rectangle();\n    this.filters = [];\n  }\n\n  clear() {\n    this.filters = null;\n    this.target = null;\n    this.renderTarget = null;\n  }\n}\n\nconst screenKey = \"screen\";\n\nexport default class FilterManager extends WebGLManager {\n  constructor(renderer) {\n    super(renderer);\n\n    this.gl = this.renderer.gl;\n    // know about sprites!\n    this.quad = new Quad(this.gl, renderer.state.attribState);\n\n    this.shaderCache = {};\n    // todo add default!\n    this.pool = {};\n    this.filterData = null;\n    this.managedFilters = [];\n    this.renderer.on(\"prerender\", this.onPrerender, this);\n\n    this._screenWidth = renderer.view.width;\n    this._screenHeight = renderer.view.height;\n  }\n\n  pushFilter(target, filters) {\n    const renderer = this.renderer;\n    let filterData = this.filterData;\n\n    if (!filterData) {\n      filterData = this.renderer._activeRenderTarget.filterStack;\n\n      // add new stack\n      const filterState = new FilterState();\n\n      filterState.sourceFrame = filterState.destinationFrame = this.renderer._activeRenderTarget.size;\n      filterState.renderTarget = renderer._activeRenderTarget;\n\n      this.renderer._activeRenderTarget.filterData = filterData = {\n        index: 0,\n        stack: [filterState]\n      };\n\n      this.filterData = filterData;\n    }\n\n    // get the current filter state..\n    let currentState = filterData.stack[++filterData.index];\n    const renderTargetFrame = filterData.stack[0].destinationFrame;\n\n    if (!currentState) {\n      currentState = filterData.stack[filterData.index] = new FilterState();\n    }\n\n    const fullScreen =\n      target.filterArea &&\n      target.filterArea.x === 0 &&\n      target.filterArea.y === 0 &&\n      target.filterArea.width === renderer.screen.width &&\n      target.filterArea.height === renderer.screen.height;\n\n    // for now we go off the filter of the first resolution..\n    const resolution = filters[0].resolution;\n    const padding = filters[0].padding | 0;\n    const targetBounds = fullScreen\n      ? renderer.screen\n      : target.filterArea || target.getBounds(true);\n    const sourceFrame = currentState.sourceFrame;\n    const destinationFrame = currentState.destinationFrame;\n\n    sourceFrame.x = ((targetBounds.x * resolution) | 0) / resolution;\n    sourceFrame.y = ((targetBounds.y * resolution) | 0) / resolution;\n    sourceFrame.width = ((targetBounds.width * resolution) | 0) / resolution;\n    sourceFrame.height = ((targetBounds.height * resolution) | 0) / resolution;\n\n    if (!fullScreen) {\n      if (filterData.stack[0].renderTarget.transform) {\n      } else if (filters[0].autoFit) {\n        sourceFrame.fit(renderTargetFrame);\n      }\n\n      sourceFrame.pad(padding);\n    }\n\n    destinationFrame.width = sourceFrame.width;\n    destinationFrame.height = sourceFrame.height;\n    const renderTarget = this.getPotRenderTarget(\n      renderer.gl,\n      sourceFrame.width,\n      sourceFrame.height,\n      resolution\n    );\n\n    currentState.target = target;\n    currentState.filters = filters;\n    currentState.resolution = resolution;\n    currentState.renderTarget = renderTarget;\n\n    renderTarget.setFrame(destinationFrame, sourceFrame);\n    renderer.bindRenderTarget(renderTarget);\n    renderTarget.clear();\n  }\n\n  popFilter() {\n    const filterData = this.filterData;\n    const lastState = filterData.stack[filterData.index - 1];\n    const currentState = filterData.stack[filterData.index];\n\n    this.quad\n      .map(currentState.renderTarget.size, currentState.sourceFrame)\n      .upload();\n\n    const filters = currentState.filters;\n\n    if (filters.length === 1) {\n      filters[0].apply(\n        this,\n        currentState.renderTarget,\n        lastState.renderTarget,\n        false,\n        currentState\n      );\n      this.freePotRenderTarget(currentState.renderTarget);\n    } else {\n      let flip = currentState.renderTarget;\n      let flop = this.getPotRenderTarget(\n        this.renderer.gl,\n        currentState.sourceFrame.width,\n        currentState.sourceFrame.height,\n        currentState.resolution\n      );\n\n      flop.setFrame(currentState.destinationFrame, currentState.sourceFrame);\n\n      // finally lets clear the render target before drawing to it..\n      flop.clear();\n\n      let i = 0;\n\n      for (i = 0; i < filters.length - 1; ++i) {\n        filters[i].apply(this, flip, flop, true, currentState);\n\n        const t = flip;\n\n        flip = flop;\n        flop = t;\n      }\n\n      filters[i].apply(this, flip, lastState.renderTarget, false, currentState);\n\n      this.freePotRenderTarget(flip);\n      this.freePotRenderTarget(flop);\n    }\n\n    currentState.clear();\n    filterData.index--;\n\n    if (filterData.index === 0) {\n      this.filterData = null;\n    }\n  }\n\n  applyFilter(filter, input, output, clear) {\n    const renderer = this.renderer;\n    const gl = renderer.gl;\n\n    let shader = filter.glShaders[renderer.CONTEXT_UID];\n\n    // caching..\n    if (!shader) {\n      if (filter.glShaderKey) {\n        shader = this.shaderCache[filter.glShaderKey];\n\n        if (!shader) {\n          shader = new Shader(this.gl, filter.vertexSrc, filter.fragmentSrc);\n\n          filter.glShaders[renderer.CONTEXT_UID] = this.shaderCache[\n            filter.glShaderKey\n          ] = shader;\n          this.managedFilters.push(filter);\n        }\n      } else {\n        shader = filter.glShaders[renderer.CONTEXT_UID] = new Shader(\n          this.gl,\n          filter.vertexSrc,\n          filter.fragmentSrc\n        );\n        this.managedFilters.push(filter);\n      }\n\n      // TODO - this only needs to be done once?\n      renderer.bindVao(null);\n\n      this.quad.initVao(shader);\n    }\n\n    renderer.bindVao(this.quad.vao);\n\n    renderer.bindRenderTarget(output);\n\n    if (clear) {\n      gl.disable(gl.SCISSOR_TEST);\n      renderer.clear(); // [1, 1, 1, 1]);\n      gl.enable(gl.SCISSOR_TEST);\n    }\n\n    // in case the render target is being masked using a scissor rect\n    if (output === renderer.maskManager.scissorRenderTarget) {\n      renderer.maskManager.pushScissorMask(\n        null,\n        renderer.maskManager.scissorData\n      );\n    }\n\n    renderer.bindShader(shader);\n\n    // free unit 0 for us, doesn't matter what was there\n    // don't try to restore it, because syncUniforms can upload it to another slot\n    // and it'll be a problem\n    const tex = this.renderer.emptyTextures[0];\n\n    this.renderer.boundTextures[0] = tex;\n    // this syncs the PixiJS filters  uniforms with glsl uniforms\n    this.syncUniforms(shader, filter);\n\n    renderer.state.setBlendMode(filter.blendMode);\n\n    gl.activeTexture(gl.TEXTURE0);\n    gl.bindTexture(gl.TEXTURE_2D, input.texture.texture);\n\n    this.quad.vao.draw(this.renderer.gl.TRIANGLES, 6, 0);\n\n    gl.bindTexture(\n      gl.TEXTURE_2D,\n      tex._glTextures[this.renderer.CONTEXT_UID].texture\n    );\n  }\n\n  syncUniforms(shader, filter) {\n    const uniformData = filter.uniformData;\n    const uniforms = filter.uniforms;\n\n    // 0 is reserved for the PixiJS texture so we start at 1!\n    let textureCount = 1;\n    let currentState;\n\n    // filterArea and filterClamp that are handled by FilterManager directly\n    // they must not appear in uniformData\n\n    if (shader.uniforms.filterArea) {\n      currentState = this.filterData.stack[this.filterData.index];\n\n      const filterArea = shader.uniforms.filterArea;\n\n      filterArea[0] = currentState.renderTarget.size.width;\n      filterArea[1] = currentState.renderTarget.size.height;\n      filterArea[2] = currentState.sourceFrame.x;\n      filterArea[3] = currentState.sourceFrame.y;\n\n      shader.uniforms.filterArea = filterArea;\n    }\n\n    // use this to clamp displaced texture coords so they belong to filterArea\n    // see displacementFilter fragment shader for an example\n    if (shader.uniforms.filterClamp) {\n      currentState =\n        currentState || this.filterData.stack[this.filterData.index];\n\n      const filterClamp = shader.uniforms.filterClamp;\n\n      filterClamp[0] = 0;\n      filterClamp[1] = 0;\n      filterClamp[2] =\n        (currentState.sourceFrame.width - 1) /\n        currentState.renderTarget.size.width;\n      filterClamp[3] =\n        (currentState.sourceFrame.height - 1) /\n        currentState.renderTarget.size.height;\n\n      shader.uniforms.filterClamp = filterClamp;\n    }\n\n    // TODO Caching layer..\n    for (const i in uniformData) {\n      if (!shader.uniforms.data[i]) {\n        continue;\n      }\n\n      const type = uniformData[i].type;\n\n      if (type === \"sampler2d\" && uniforms[i] !== 0) {\n        if (uniforms[i].baseTexture) {\n          shader.uniforms[i] = this.renderer.bindTexture(\n            uniforms[i].baseTexture,\n            textureCount\n          );\n        } else {\n          shader.uniforms[i] = textureCount;\n\n          // TODO\n          // this is helpful as renderTargets can also be set.\n          // Although thinking about it, we could probably\n          // make the filter texture cache return a RenderTexture\n          // rather than a renderTarget\n          const gl = this.renderer.gl;\n\n          this.renderer.boundTextures[\n            textureCount\n          ] = this.renderer.emptyTextures[textureCount];\n          gl.activeTexture(gl.TEXTURE0 + textureCount);\n\n          uniforms[i].texture.bind();\n        }\n\n        textureCount++;\n      } else if (type === \"mat3\") {\n        // check if its PixiJS matrix..\n        if (uniforms[i].a !== undefined) {\n          shader.uniforms[i] = uniforms[i].toArray(true);\n        } else {\n          shader.uniforms[i] = uniforms[i];\n        }\n      } else if (type === \"vec2\") {\n        // check if its a point..\n        if (uniforms[i].x !== undefined) {\n          const val = shader.uniforms[i] || new Float32Array(2);\n\n          val[0] = uniforms[i].x;\n          val[1] = uniforms[i].y;\n          shader.uniforms[i] = val;\n        } else {\n          shader.uniforms[i] = uniforms[i];\n        }\n      } else if (type === \"float\") {\n        if (shader.uniforms.data[i].value !== uniformData[i]) {\n          shader.uniforms[i] = uniforms[i];\n        }\n      } else {\n        shader.uniforms[i] = uniforms[i];\n      }\n    }\n  }\n\n  getRenderTarget(clear, resolution) {\n    const currentState = this.filterData.stack[this.filterData.index];\n    const renderTarget = this.getPotRenderTarget(\n      this.renderer.gl,\n      currentState.sourceFrame.width,\n      currentState.sourceFrame.height,\n      resolution || currentState.resolution\n    );\n\n    renderTarget.setFrame(\n      currentState.destinationFrame,\n      currentState.sourceFrame\n    );\n\n    return renderTarget;\n  }\n\n  returnRenderTarget(renderTarget) {\n    this.freePotRenderTarget(renderTarget);\n  }\n\n  calculateScreenSpaceMatrix(outputMatrix) {\n    const currentState = this.filterData.stack[this.filterData.index];\n\n    return filterTransforms.calculateScreenSpaceMatrix(\n      outputMatrix,\n      currentState.sourceFrame,\n      currentState.renderTarget.size\n    );\n  }\n\n  calculateNormalizedScreenSpaceMatrix(outputMatrix) {\n    const currentState = this.filterData.stack[this.filterData.index];\n\n    return filterTransforms.calculateNormalizedScreenSpaceMatrix(\n      outputMatrix,\n      currentState.sourceFrame,\n      currentState.renderTarget.size,\n      currentState.destinationFrame\n    );\n  }\n\n  calculateSpriteMatrix(outputMatrix, sprite) {\n    const currentState = this.filterData.stack[this.filterData.index];\n\n    return filterTransforms.calculateSpriteMatrix(\n      outputMatrix,\n      currentState.sourceFrame,\n      currentState.renderTarget.size,\n      sprite\n    );\n  }\n\n  destroy(contextLost = false) {\n    const renderer = this.renderer;\n    const filters = this.managedFilters;\n\n    renderer.off(\"prerender\", this.onPrerender, this);\n\n    for (let i = 0; i < filters.length; i++) {\n      if (!contextLost) {\n        filters[i].glShaders[renderer.CONTEXT_UID].destroy();\n      }\n      delete filters[i].glShaders[renderer.CONTEXT_UID];\n    }\n\n    this.shaderCache = {};\n    if (!contextLost) {\n      this.emptyPool();\n    } else {\n      this.pool = {};\n    }\n  }\n\n  getPotRenderTarget(gl, minWidth, minHeight, resolution) {\n    let key = screenKey;\n\n    minWidth *= resolution;\n    minHeight *= resolution;\n\n    if (minWidth !== this._screenWidth || minHeight !== this._screenHeight) {\n      // TODO you could return a bigger texture if there is not one in the pool?\n      minWidth = bitTwiddle.nextPow2(minWidth);\n      minHeight = bitTwiddle.nextPow2(minHeight);\n      key = ((minWidth & 0xffff) << 16) | (minHeight & 0xffff);\n    }\n\n    if (!this.pool[key]) {\n      this.pool[key] = [];\n    }\n\n    let renderTarget = this.pool[key].pop();\n\n    // creating render target will cause texture to be bound!\n    if (!renderTarget) {\n      // temporary bypass cache..\n      const tex = this.renderer.boundTextures[0];\n\n      gl.activeTexture(gl.TEXTURE0);\n\n      // internally - this will cause a texture to be bound..\n      renderTarget = new RenderTarget(gl, minWidth, minHeight, null, 1);\n\n      // set the current one back\n      gl.bindTexture(\n        gl.TEXTURE_2D,\n        tex._glTextures[this.renderer.CONTEXT_UID].texture\n      );\n    }\n\n    // manually tweak the resolution...\n    // this will not modify the size of the frame buffer, just its resolution.\n    renderTarget.resolution = resolution;\n    renderTarget.defaultFrame.width = renderTarget.size.width =\n      minWidth / resolution;\n    renderTarget.defaultFrame.height = renderTarget.size.height =\n      minHeight / resolution;\n    renderTarget.filterPoolKey = key;\n\n    return renderTarget;\n  }\n\n  emptyPool() {\n    for (const i in this.pool) {\n      const textures = this.pool[i];\n\n      if (textures) {\n        for (let j = 0; j < textures.length; j++) {\n          textures[j].destroy(true);\n        }\n      }\n    }\n\n    this.pool = {};\n  }\n\n  freePotRenderTarget(renderTarget) {\n    this.pool[renderTarget.filterPoolKey].push(renderTarget);\n  }\n\n  onPrerender() {\n    if (\n      this._screenWidth !== this.renderer.view.width ||\n      this._screenHeight !== this.renderer.view.height\n    ) {\n      this._screenWidth = this.renderer.view.width;\n      this._screenHeight = this.renderer.view.height;\n\n      const textures = this.pool[screenKey];\n\n      if (textures) {\n        for (let j = 0; j < textures.length; j++) {\n          textures[j].destroy(true);\n        }\n      }\n      this.pool[screenKey] = [];\n    }\n  }\n}\n"],"file":"FilterManager.js"}