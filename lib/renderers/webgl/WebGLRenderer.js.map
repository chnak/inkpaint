{"version":3,"sources":["../../../src/renderers/webgl/WebGLRenderer.js"],"names":["CONTEXT_UID","WebGLRenderer","SystemRenderer","constructor","options","arg2","arg3","legacy","glCore","VertexArrayObject","FORCE_NATIVE","type","RENDERER_TYPE","WEBGL","handleContextLost","bind","handleContextRestored","view","addEventListener","_contextOptions","alpha","transparent","antialias","premultipliedAlpha","stencil","preserveDrawingBuffer","powerPreference","_backgroundColorRgba","maskManager","MaskManager","stencilManager","StencilManager","emptyRenderer","ObjectRenderer","currentRenderer","textureManager","filterManager","initPlugins","context","gl","createContext","state","WebGLState","renderingToScreen","boundTextures","_activeShader","_activeVao","_activeRenderTarget","_initContext","drawModes","_nextTextureLocation","setBlendMode","isContextLost","getExtension","restoreContext","maxTextures","getParameter","MAX_TEXTURE_IMAGE_UNITS","Array","emptyTextures","_unknownBoundTextures","TextureManager","FilterManager","textureGC","TextureGarbageCollector","resetToDefault","rootRenderTarget","RenderTarget","width","height","resolution","clearColor","bindRenderTarget","emptyGLTexture","GLTexture","fromData","tempObj","_glTextures","i","empty","BaseTexture","bindTexture","emit","resize","screen","render","displayObject","renderTexture","clear","transform","skipUpdateTransform","_lastObjectRendered","cacheParent","parent","_tempDisplayObjectParent","updateTransform","bindRenderTexture","start","undefined","clearBeforeRender","renderWebGL","flush","update","setObjectRenderer","objectRenderer","stop","screenWidth","screenHeight","prototype","call","activate","uniforms","projectionMatrix","toArray","blendMode","deleteTexture","texture","setTransform","matrix","clearRenderTexture","baseTexture","renderTarget","_glRenderTargets","updateTexture","unbindTexture","setFrame","frame","setMaskStack","stencilMaskStack","bindShader","shader","autoProject","location","forceLocation","touched","count","length","glTexture","activeTexture","TEXTURE0","TEXTURE_2D","createVao","attribState","bindVao","vao","unbind","reset","event","preventDefault","removeAll","destroy","removeView","destroyPlugins","removeEventListener","uid","useProgram","loseContext","pluginTarget","mixin"],"mappings":"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","sourcesContent":["import SystemRenderer from \"../SystemRenderer\";\nimport MaskManager from \"./managers/MaskManager\";\nimport StencilManager from \"./managers/StencilManager\";\nimport FilterManager from \"./managers/FilterManager\";\nimport RenderTarget from \"./utils/RenderTarget\";\nimport ObjectRenderer from \"./utils/ObjectRenderer\";\nimport TextureManager from \"./TextureManager\";\nimport BaseTexture from \"../../textures/BaseTexture\";\nimport TextureGarbageCollector from \"./TextureGarbageCollector\";\nimport WebGLState from \"./WebGLState\";\nimport mapWebGLDrawModesToPixi from \"./utils/mapWebGLDrawModesToPixi\";\nimport validateContext from \"./utils/validateContext\";\nimport { pluginTarget } from \"../../utils\";\nimport glCore from \"pixi-gl-core\";\nimport { RENDERER_TYPE } from \"../../const\";\n\nlet CONTEXT_UID = 0;\n\nexport default class WebGLRenderer extends SystemRenderer {\n  constructor(options, arg2, arg3) {\n    super(\"WebGL\", options, arg2, arg3);\n\n    this.legacy = this.options.legacy;\n    if (this.legacy) {\n      glCore.VertexArrayObject.FORCE_NATIVE = true;\n    }\n\n    this.type = RENDERER_TYPE.WEBGL;\n    this.handleContextLost = this.handleContextLost.bind(this);\n    this.handleContextRestored = this.handleContextRestored.bind(this);\n    this.view.addEventListener(\n      \"webglcontextlost\",\n      this.handleContextLost,\n      false\n    );\n    this.view.addEventListener(\n      \"webglcontextrestored\",\n      this.handleContextRestored,\n      false\n    );\n\n    this._contextOptions = {\n      alpha: this.transparent,\n      antialias: this.options.antialias,\n      premultipliedAlpha:\n        this.transparent && this.transparent !== \"notMultiplied\",\n      stencil: true,\n      preserveDrawingBuffer: this.options.preserveDrawingBuffer,\n      powerPreference: this.options.powerPreference\n    };\n\n    this._backgroundColorRgba[3] = this.transparent ? 0 : 1;\n    this.maskManager = new MaskManager(this);\n    this.stencilManager = new StencilManager(this);\n    this.emptyRenderer = new ObjectRenderer(this);\n    this.currentRenderer = this.emptyRenderer;\n    this.textureManager = null;\n    this.filterManager = null;\n\n    this.initPlugins();\n    if (this.options.context) {\n      validateContext(this.options.context);\n    }\n\n    this.gl =\n      this.options.context ||\n      glCore.createContext(this.view, this._contextOptions);\n    this.CONTEXT_UID = CONTEXT_UID++;\n    this.state = new WebGLState(this.gl);\n    this.renderingToScreen = true;\n\n    this.boundTextures = null;\n    this._activeShader = null;\n    this._activeVao = null;\n    this._activeRenderTarget = null;\n    this._initContext();\n\n    this.drawModes = mapWebGLDrawModesToPixi(this.gl);\n    this._nextTextureLocation = 0;\n    this.setBlendMode(0);\n  }\n\n  _initContext() {\n    const gl = this.gl;\n    if (gl.isContextLost() && gl.getExtension(\"WEBGL_lose_context\")) {\n      gl.getExtension(\"WEBGL_lose_context\").restoreContext();\n    }\n\n    const maxTextures = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);\n    this._activeShader = null;\n    this._activeVao = null;\n    this.boundTextures = new Array(maxTextures);\n    this.emptyTextures = new Array(maxTextures);\n    this._unknownBoundTextures = false;\n\n    // create a texture manager...\n    this.textureManager = new TextureManager(this);\n    this.filterManager = new FilterManager(this);\n    this.textureGC = new TextureGarbageCollector(this);\n    this.state.resetToDefault();\n\n    this.rootRenderTarget = new RenderTarget(\n      gl,\n      this.width,\n      this.height,\n      null,\n      this.resolution,\n      true\n    );\n    this.rootRenderTarget.clearColor = this._backgroundColorRgba;\n\n    this.bindRenderTarget(this.rootRenderTarget);\n    const emptyGLTexture = new glCore.GLTexture.fromData(gl, null, 1, 1);\n    const tempObj = { _glTextures: {} };\n    tempObj._glTextures[this.CONTEXT_UID] = {};\n\n    for (let i = 0; i < maxTextures; i++) {\n      const empty = new BaseTexture();\n      empty._glTextures[this.CONTEXT_UID] = emptyGLTexture;\n      this.boundTextures[i] = tempObj;\n      this.emptyTextures[i] = empty;\n      this.bindTexture(null, i);\n    }\n\n    this.emit(\"context\", gl);\n    this.resize(this.screen.width, this.screen.height);\n  }\n\n  render(displayObject, renderTexture, clear, transform, skipUpdateTransform) {\n    this.renderingToScreen = !renderTexture;\n    this.emit(\"prerender\");\n\n    if (!this.gl || this.gl.isContextLost()) return;\n    this._nextTextureLocation = 0;\n\n    if (!renderTexture) {\n      this._lastObjectRendered = displayObject;\n    }\n\n    if (!skipUpdateTransform) {\n      const cacheParent = displayObject.parent;\n      displayObject.parent = this._tempDisplayObjectParent;\n      displayObject.updateTransform();\n      displayObject.parent = cacheParent;\n    }\n\n    this.bindRenderTexture(renderTexture, transform);\n    this.currentRenderer.start();\n\n    if (clear !== undefined ? clear : this.clearBeforeRender) {\n      this._activeRenderTarget.clear();\n    }\n\n    displayObject.renderWebGL(this);\n    this.currentRenderer.flush();\n    this.textureGC.update();\n\n    this.emit(\"postrender\");\n  }\n\n  setObjectRenderer(objectRenderer) {\n    if (this.currentRenderer === objectRenderer) {\n      return;\n    }\n\n    this.currentRenderer.stop();\n    this.currentRenderer = objectRenderer;\n    this.currentRenderer.start();\n  }\n\n  flush() {\n    this.setObjectRenderer(this.emptyRenderer);\n  }\n\n  resize(screenWidth, screenHeight) {\n    SystemRenderer.prototype.resize.call(this, screenWidth, screenHeight);\n    this.rootRenderTarget.resize(screenWidth, screenHeight);\n\n    if (this._activeRenderTarget === this.rootRenderTarget) {\n      this.rootRenderTarget.activate();\n\n      if (this._activeShader) {\n        this._activeShader.uniforms.projectionMatrix = this.rootRenderTarget.projectionMatrix.toArray(\n          true\n        );\n      }\n    }\n  }\n\n  setBlendMode(blendMode) {\n    this.state.setBlendMode(blendMode);\n  }\n\n  deleteTexture(texture) {\n    this.gl.deleteTexture(texture);\n  }\n\n  clear(clearColor) {\n    this._activeRenderTarget.clear(clearColor);\n  }\n\n  setTransform(matrix) {\n    this._activeRenderTarget.transform = matrix;\n  }\n\n  clearRenderTexture(renderTexture, clearColor) {\n    const baseTexture = renderTexture.baseTexture;\n    const renderTarget = baseTexture._glRenderTargets[this.CONTEXT_UID];\n\n    if (renderTarget) {\n      renderTarget.clear(clearColor);\n    }\n\n    return this;\n  }\n\n  bindRenderTexture(renderTexture, transform) {\n    let renderTarget;\n\n    if (renderTexture) {\n      const baseTexture = renderTexture.baseTexture;\n\n      if (!baseTexture._glRenderTargets[this.CONTEXT_UID]) {\n        this.textureManager.updateTexture(baseTexture, 0);\n      }\n\n      this.unbindTexture(baseTexture);\n\n      renderTarget = baseTexture._glRenderTargets[this.CONTEXT_UID];\n      renderTarget.setFrame(renderTexture.frame);\n    } else {\n      renderTarget = this.rootRenderTarget;\n    }\n\n    renderTarget.transform = transform;\n    this.bindRenderTarget(renderTarget);\n\n    return this;\n  }\n\n  bindRenderTarget(renderTarget) {\n    if (renderTarget !== this._activeRenderTarget) {\n      this._activeRenderTarget = renderTarget;\n      renderTarget.activate();\n\n      if (this._activeShader) {\n        this._activeShader.uniforms.projectionMatrix = renderTarget.projectionMatrix.toArray(\n          true\n        );\n      }\n\n      this.stencilManager.setMaskStack(renderTarget.stencilMaskStack);\n    }\n\n    return this;\n  }\n\n  bindShader(shader, autoProject) {\n    // TODO cache\n    if (this._activeShader !== shader) {\n      this._activeShader = shader;\n      shader.bind();\n\n      // `autoProject` normally would be a default parameter set to true\n      // but because of how Babel transpiles default parameters\n      // it hinders the performance of this method.\n      if (autoProject !== false) {\n        // automatically set the projection matrix\n        shader.uniforms.projectionMatrix = this._activeRenderTarget.projectionMatrix.toArray(\n          true\n        );\n      }\n    }\n\n    return this;\n  }\n\n  bindTexture(texture, location, forceLocation) {\n    texture = texture || this.emptyTextures[location];\n    texture = texture.baseTexture || texture;\n    texture.touched = this.textureGC.count;\n\n    if (!forceLocation) {\n      // TODO - maybe look into adding boundIds.. save us the loop?\n      for (let i = 0; i < this.boundTextures.length; i++) {\n        if (this.boundTextures[i] === texture) {\n          return i;\n        }\n      }\n\n      if (location === undefined) {\n        this._nextTextureLocation++;\n        this._nextTextureLocation %= this.boundTextures.length;\n        location = this.boundTextures.length - this._nextTextureLocation - 1;\n      }\n    } else {\n      location = location || 0;\n    }\n\n    const gl = this.gl;\n    const glTexture = texture._glTextures[this.CONTEXT_UID];\n\n    if (!glTexture) {\n      // this will also bind the texture..\n      this.textureManager.updateTexture(texture, location);\n    } else {\n      // bind the current texture\n      this.boundTextures[location] = texture;\n      gl.activeTexture(gl.TEXTURE0 + location);\n      gl.bindTexture(gl.TEXTURE_2D, glTexture.texture);\n    }\n\n    return location;\n  }\n\n  unbindTexture(texture) {\n    const gl = this.gl;\n\n    texture = texture.baseTexture || texture;\n\n    if (this._unknownBoundTextures) {\n      this._unknownBoundTextures = false;\n      // someone changed webGL state,\n      // we have to be sure that our texture does not appear in multitexture renderer samplers\n\n      for (let i = 0; i < this.boundTextures.length; i++) {\n        if (this.boundTextures[i] === this.emptyTextures[i]) {\n          gl.activeTexture(gl.TEXTURE0 + i);\n          gl.bindTexture(\n            gl.TEXTURE_2D,\n            this.emptyTextures[i]._glTextures[this.CONTEXT_UID].texture\n          );\n        }\n      }\n    }\n\n    for (let i = 0; i < this.boundTextures.length; i++) {\n      if (this.boundTextures[i] === texture) {\n        this.boundTextures[i] = this.emptyTextures[i];\n\n        gl.activeTexture(gl.TEXTURE0 + i);\n        gl.bindTexture(\n          gl.TEXTURE_2D,\n          this.emptyTextures[i]._glTextures[this.CONTEXT_UID].texture\n        );\n      }\n    }\n\n    return this;\n  }\n\n  createVao() {\n    return new glCore.VertexArrayObject(this.gl, this.state.attribState);\n  }\n\n  bindVao(vao) {\n    if (this._activeVao === vao) {\n      return this;\n    }\n\n    if (vao) {\n      vao.bind();\n    } else if (this._activeVao) {\n      // TODO this should always be true i think?\n      this._activeVao.unbind();\n    }\n\n    this._activeVao = vao;\n\n    return this;\n  }\n\n  reset() {\n    this.setObjectRenderer(this.emptyRenderer);\n\n    this.bindVao(null);\n    this._activeShader = null;\n    this._activeRenderTarget = this.rootRenderTarget;\n\n    this._unknownBoundTextures = true;\n\n    for (let i = 0; i < this.boundTextures.length; i++) {\n      this.boundTextures[i] = this.emptyTextures[i];\n    }\n\n    // bind the main frame buffer (the screen);\n    this.rootRenderTarget.activate();\n    this.state.resetToDefault();\n    return this;\n  }\n\n  handleContextLost(event) {\n    event.preventDefault();\n  }\n\n  handleContextRestored() {\n    this.textureManager.removeAll();\n    this.filterManager.destroy(true);\n    this._initContext();\n  }\n\n  destroy(removeView) {\n    this.destroyPlugins();\n\n    // remove listeners\n    this.view.removeEventListener(\"webglcontextlost\", this.handleContextLost);\n    this.view.removeEventListener(\n      \"webglcontextrestored\",\n      this.handleContextRestored\n    );\n\n    this.textureManager.destroy();\n    super.destroy(removeView);\n    this.uid = 0;\n\n    // destroy the managers\n    this.maskManager.destroy();\n    this.stencilManager.destroy();\n    this.filterManager.destroy();\n\n    this.maskManager = null;\n    this.filterManager = null;\n    this.textureManager = null;\n    this.currentRenderer = null;\n\n    this.handleContextLost = null;\n    this.handleContextRestored = null;\n\n    this._contextOptions = null;\n    this.gl.useProgram(null);\n\n    if (this.gl.getExtension(\"WEBGL_lose_context\")) {\n      this.gl.getExtension(\"WEBGL_lose_context\").loseContext();\n    }\n\n    this.gl = null;\n  }\n}\n\npluginTarget.mixin(WebGLRenderer);\n"],"file":"WebGLRenderer.js"}