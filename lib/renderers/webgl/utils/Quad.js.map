{"version":3,"sources":["../../../../src/renderers/webgl/utils/Quad.js"],"names":["Quad","constructor","gl","state","vertices","Float32Array","uvs","interleaved","i","indices","vertexBuffer","glCore","GLBuffer","createVertexBuffer","STATIC_DRAW","indexBuffer","createIndexBuffer","vao","VertexArrayObject","initVao","shader","clear","addIndex","addAttribute","attributes","aVertexPosition","FLOAT","aTextureCoord","map","targetTextureFrame","destinationFrame","x","y","width","height","upload","destroy","deleteBuffer"],"mappings":"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","sourcesContent":["import glCore from \"pixi-gl-core\";\nimport createIndicesForQuads from \"../../../utils/createIndicesForQuads\";\n\nexport default class Quad {\n  constructor(gl, state) {\n    this.gl = gl;\n    this.vertices = new Float32Array([-1, -1, 1, -1, 1, 1, -1, 1]);\n    this.uvs = new Float32Array([0, 0, 1, 0, 1, 1, 0, 1]);\n    this.interleaved = new Float32Array(8 * 2);\n\n    for (let i = 0; i < 4; i++) {\n      this.interleaved[i * 4] = this.vertices[i * 2];\n      this.interleaved[i * 4 + 1] = this.vertices[i * 2 + 1];\n      this.interleaved[i * 4 + 2] = this.uvs[i * 2];\n      this.interleaved[i * 4 + 3] = this.uvs[i * 2 + 1];\n    }\n\n    this.indices = createIndicesForQuads(1);\n    this.vertexBuffer = glCore.GLBuffer.createVertexBuffer(\n      gl,\n      this.interleaved,\n      gl.STATIC_DRAW\n    );\n    this.indexBuffer = glCore.GLBuffer.createIndexBuffer(\n      gl,\n      this.indices,\n      gl.STATIC_DRAW\n    );\n\n    this.vao = new glCore.VertexArrayObject(gl, state);\n  }\n\n  initVao(shader) {\n    this.vao\n      .clear()\n      .addIndex(this.indexBuffer)\n      .addAttribute(\n        this.vertexBuffer,\n        shader.attributes.aVertexPosition,\n        this.gl.FLOAT,\n        false,\n        4 * 4,\n        0\n      )\n      .addAttribute(\n        this.vertexBuffer,\n        shader.attributes.aTextureCoord,\n        this.gl.FLOAT,\n        false,\n        4 * 4,\n        2 * 4\n      );\n  }\n\n  map(targetTextureFrame, destinationFrame) {\n    let x = 0; // destinationFrame.x / targetTextureFrame.width;\n    let y = 0; // destinationFrame.y / targetTextureFrame.height;\n\n    this.uvs[0] = x;\n    this.uvs[1] = y;\n\n    this.uvs[2] = x + destinationFrame.width / targetTextureFrame.width;\n    this.uvs[3] = y;\n\n    this.uvs[4] = x + destinationFrame.width / targetTextureFrame.width;\n    this.uvs[5] = y + destinationFrame.height / targetTextureFrame.height;\n\n    this.uvs[6] = x;\n    this.uvs[7] = y + destinationFrame.height / targetTextureFrame.height;\n\n    x = destinationFrame.x;\n    y = destinationFrame.y;\n\n    this.vertices[0] = x;\n    this.vertices[1] = y;\n\n    this.vertices[2] = x + destinationFrame.width;\n    this.vertices[3] = y;\n\n    this.vertices[4] = x + destinationFrame.width;\n    this.vertices[5] = y + destinationFrame.height;\n\n    this.vertices[6] = x;\n    this.vertices[7] = y + destinationFrame.height;\n\n    return this;\n  }\n\n  upload() {\n    for (let i = 0; i < 4; i++) {\n      this.interleaved[i * 4] = this.vertices[i * 2];\n      this.interleaved[i * 4 + 1] = this.vertices[i * 2 + 1];\n      this.interleaved[i * 4 + 2] = this.uvs[i * 2];\n      this.interleaved[i * 4 + 3] = this.uvs[i * 2 + 1];\n    }\n\n    this.vertexBuffer.upload(this.interleaved);\n    return this;\n  }\n\n  destroy() {\n    const gl = this.gl;\n    gl.deleteBuffer(this.vertexBuffer);\n    gl.deleteBuffer(this.indexBuffer);\n  }\n}\n"],"file":"Quad.js"}