{"version":3,"sources":["../../../src/renderers/canvas/CanvasRenderer.js"],"names":["CanvasRenderer","SystemRenderer","constructor","options","arg2","arg3","type","RENDERER_TYPE","CANVAS","rootContext","view","getContext","alpha","transparent","context","refresh","maskManager","CanvasMaskManager","smoothProperty","imageSmoothingEnabled","webkitImageSmoothingEnabled","mozImageSmoothingEnabled","oImageSmoothingEnabled","msImageSmoothingEnabled","initPlugins","blendModes","_activeBlendMode","renderingToScreen","width","height","quality","anti","resize","antialias","render","displayObject","renderTexture","clear","transform","skipUpdateTransform","emit","rootResolution","resolution","_lastObjectRendered","cacheParent","parent","tempWt","_tempDisplayObjectParent","worldTransform","copy","_worldID","identity","updateTransform","save","setTransform","globalAlpha","BLEND_MODES","NORMAL","globalCompositeOperation","undefined","clearBeforeRender","clearRect","fillStyle","_backgroundColorString","fillRect","tempContext","renderCanvas","restore","clearColor","setBlendMode","blendMode","destroy","removeView","destroyPlugins","screenWidth","screenHeight","settings","SCALE_MODE","SCALE_MODES","LINEAR","invalidateBlendMode","indexOf","pluginTarget","mixin"],"mappings":"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","sourcesContent":["import SystemRenderer from \"../SystemRenderer\";\nimport CanvasMaskManager from \"./utils/CanvasMaskManager\";\nimport mapCanvasBlendModesToPixi from \"./utils/mapCanvasBlendModesToPixi\";\nimport { pluginTarget } from \"../../utils\";\nimport { RENDERER_TYPE, SCALE_MODES, BLEND_MODES } from \"../../const\";\nimport settings from \"../../settings\";\n\nexport default class CanvasRenderer extends SystemRenderer {\n  constructor(options, arg2, arg3) {\n    super(\"Canvas\", options, arg2, arg3);\n\n    this.type = RENDERER_TYPE.CANVAS;\n    this.rootContext = this.view.getContext(\"2d\", {\n      alpha: this.transparent\n    });\n    this.context = this.rootContext;\n    this.refresh = true;\n    this.maskManager = new CanvasMaskManager(this);\n    this.smoothProperty = \"imageSmoothingEnabled\";\n\n    if (!this.rootContext.imageSmoothingEnabled) {\n      if (this.rootContext.webkitImageSmoothingEnabled) {\n        this.smoothProperty = \"webkitImageSmoothingEnabled\";\n      } else if (this.rootContext.mozImageSmoothingEnabled) {\n        this.smoothProperty = \"mozImageSmoothingEnabled\";\n      } else if (this.rootContext.oImageSmoothingEnabled) {\n        this.smoothProperty = \"oImageSmoothingEnabled\";\n      } else if (this.rootContext.msImageSmoothingEnabled) {\n        this.smoothProperty = \"msImageSmoothingEnabled\";\n      }\n    }\n\n    this.initPlugins();\n    this.blendModes = mapCanvasBlendModesToPixi();\n    this._activeBlendMode = null;\n    this.renderingToScreen = false;\n\n    const { width, height, quality, anti } = this.options;\n    this.resize(width, height);\n\n    if (quality) {\n      this.context.quality = quality;\n    }\n\n    if (anti) {\n      this.context.antialias = anti;\n    }\n  }\n\n  render(displayObject, renderTexture, clear, transform, skipUpdateTransform) {\n    if (!this.view) return;\n\n    this.renderingToScreen = !renderTexture;\n    this.emit(\"prerender\");\n    const rootResolution = this.resolution;\n\n    this.context = this.rootContext;\n    const context = this.context;\n\n    if (!renderTexture) {\n      this._lastObjectRendered = displayObject;\n    }\n\n    if (!skipUpdateTransform) {\n      const cacheParent = displayObject.parent;\n      const tempWt = this._tempDisplayObjectParent.transform.worldTransform;\n\n      if (transform) {\n        transform.copy(tempWt);\n        this._tempDisplayObjectParent.transform._worldID = -1;\n      } else {\n        tempWt.identity();\n      }\n\n      displayObject.parent = this._tempDisplayObjectParent;\n      displayObject.updateTransform();\n      displayObject.parent = cacheParent;\n    }\n\n    context.save();\n    context.setTransform(1, 0, 0, 1, 0, 0);\n    context.globalAlpha = 1;\n    this._activeBlendMode = BLEND_MODES.NORMAL;\n    context.globalCompositeOperation = this.blendModes[BLEND_MODES.NORMAL];\n\n    if (clear !== undefined ? clear : this.clearBeforeRender) {\n      if (this.renderingToScreen) {\n        if (this.transparent) {\n          context.clearRect(0, 0, this.width, this.height);\n        } else {\n          context.fillStyle = this._backgroundColorString;\n          context.fillRect(0, 0, this.width, this.height);\n        }\n      }\n    }\n\n    // TODO RENDER TARGET STUFF HERE..\n    const tempContext = this.context;\n    this.context = context;\n    displayObject.renderCanvas(this);\n    this.context = tempContext;\n\n    context.restore();\n    this.resolution = rootResolution;\n    this.emit(\"postrender\");\n  }\n\n  clear(clearColor) {\n    const context = this.context;\n\n    clearColor = clearColor || this._backgroundColorString;\n\n    if (!this.transparent && clearColor) {\n      context.fillStyle = clearColor;\n      context.fillRect(0, 0, this.width, this.height);\n    } else {\n      context.clearRect(0, 0, this.width, this.height);\n    }\n  }\n\n  setBlendMode(blendMode) {\n    if (this._activeBlendMode === blendMode) {\n      return;\n    }\n\n    this._activeBlendMode = blendMode;\n    this.context.globalCompositeOperation = this.blendModes[blendMode];\n  }\n\n  destroy(removeView) {\n    this.destroyPlugins();\n    super.destroy(removeView);\n\n    this.context = null;\n    this.refresh = true;\n    this.maskManager.destroy();\n    this.maskManager = null;\n    this.smoothProperty = null;\n  }\n\n  resize(screenWidth, screenHeight) {\n    super.resize(screenWidth, screenHeight);\n    if (this.smoothProperty) {\n      this.rootContext[this.smoothProperty] =\n        settings.SCALE_MODE === SCALE_MODES.LINEAR;\n    }\n  }\n\n  invalidateBlendMode() {\n    this._activeBlendMode = this.blendModes.indexOf(\n      this.context.globalCompositeOperation\n    );\n  }\n}\n\npluginTarget.mixin(CanvasRenderer);\n"],"file":"CanvasRenderer.js"}