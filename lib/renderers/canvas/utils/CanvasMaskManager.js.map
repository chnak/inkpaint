{"version":3,"sources":["../../../../src/renderers/canvas/utils/CanvasMaskManager.js"],"names":["CanvasMaskManager","constructor","renderer","pushMask","maskData","context","save","cacheAlpha","alpha","transform","worldTransform","resolution","setTransform","a","b","c","d","tx","ty","_texture","renderGraphicsShape","clip","worldAlpha","graphics","len","graphicsData","length","beginPath","i","data","shape","type","SHAPES","POLY","points","holes","outerArea","innerArea","moveTo","j","lineTo","closePath","k","RECT","rect","x","y","width","height","CIRC","arc","radius","Math","PI","ELIP","w","h","kappa","ox","oy","xe","ye","xm","ym","bezierCurveTo","RREC","rx","ry","maxRadius","min","quadraticCurveTo","popMask","restore","invalidateBlendMode","destroy"],"mappings":"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","sourcesContent":["import { SHAPES } from \"../../../const\";\n\nexport default class CanvasMaskManager {\n  constructor(renderer) {\n    this.renderer = renderer;\n  }\n\n  pushMask(maskData) {\n    const renderer = this.renderer;\n\n    renderer.context.save();\n    const cacheAlpha = maskData.alpha;\n    const transform = maskData.transform.worldTransform;\n    const resolution = renderer.resolution;\n\n    renderer.context.setTransform(\n      transform.a * resolution,\n      transform.b * resolution,\n      transform.c * resolution,\n      transform.d * resolution,\n      transform.tx * resolution,\n      transform.ty * resolution\n    );\n\n    if (!maskData._texture) {\n      this.renderGraphicsShape(maskData);\n      renderer.context.clip();\n    }\n\n    maskData.worldAlpha = cacheAlpha;\n  }\n\n  renderGraphicsShape(graphics) {\n    const context = this.renderer.context;\n    const len = graphics.graphicsData.length;\n\n    if (len === 0) {\n      return;\n    }\n\n    context.beginPath();\n    for (let i = 0; i < len; i++) {\n      const data = graphics.graphicsData[i];\n      const shape = data.shape;\n\n      if (data.type === SHAPES.POLY) {\n        let points = shape.points;\n        const holes = data.holes;\n        let outerArea;\n        let innerArea;\n\n        context.moveTo(points[0], points[1]);\n\n        for (let j = 2; j < points.length; j += 2) {\n          context.lineTo(points[j], points[j + 1]);\n        }\n\n        // if the first and last point are the same close the path - much neater :)\n        if (\n          points[0] === points[points.length - 2] &&\n          points[1] === points[points.length - 1]\n        ) {\n          context.closePath();\n        }\n\n        if (holes.length > 0) {\n          outerArea = 0;\n          for (let j = 0; j < points.length; j += 2) {\n            outerArea +=\n              points[j] * points[j + 3] - points[j + 1] * points[j + 2];\n          }\n\n          for (let k = 0; k < holes.length; k++) {\n            points = holes[k].points;\n\n            innerArea = 0;\n            for (let j = 0; j < points.length; j += 2) {\n              innerArea +=\n                points[j] * points[j + 3] - points[j + 1] * points[j + 2];\n            }\n\n            context.moveTo(points[0], points[1]);\n\n            if (innerArea * outerArea < 0) {\n              for (let j = 2; j < points.length; j += 2) {\n                context.lineTo(points[j], points[j + 1]);\n              }\n            } else {\n              for (let j = points.length - 2; j >= 2; j -= 2) {\n                context.lineTo(points[j], points[j + 1]);\n              }\n            }\n          }\n        }\n      } else if (data.type === SHAPES.RECT) {\n        context.rect(shape.x, shape.y, shape.width, shape.height);\n        context.closePath();\n      } else if (data.type === SHAPES.CIRC) {\n        // TODO - need to be Undefined!\n        context.arc(shape.x, shape.y, shape.radius, 0, 2 * Math.PI);\n        context.closePath();\n      } else if (data.type === SHAPES.ELIP) {\n        // ellipse code taken from: http://stackoverflow.com/questions/2172798/how-to-draw-an-oval-in-html5-canvas\n\n        const w = shape.width * 2;\n        const h = shape.height * 2;\n\n        const x = shape.x - w / 2;\n        const y = shape.y - h / 2;\n\n        const kappa = 0.5522848;\n        const ox = (w / 2) * kappa; // control point offset horizontal\n        const oy = (h / 2) * kappa; // control point offset vertical\n        const xe = x + w; // x-end\n        const ye = y + h; // y-end\n        const xm = x + w / 2; // x-middle\n        const ym = y + h / 2; // y-middle\n\n        context.moveTo(x, ym);\n        context.bezierCurveTo(x, ym - oy, xm - ox, y, xm, y);\n        context.bezierCurveTo(xm + ox, y, xe, ym - oy, xe, ym);\n        context.bezierCurveTo(xe, ym + oy, xm + ox, ye, xm, ye);\n        context.bezierCurveTo(xm - ox, ye, x, ym + oy, x, ym);\n        context.closePath();\n      } else if (data.type === SHAPES.RREC) {\n        const rx = shape.x;\n        const ry = shape.y;\n        const width = shape.width;\n        const height = shape.height;\n        let radius = shape.radius;\n\n        const maxRadius = (Math.min(width, height) / 2) | 0;\n\n        radius = radius > maxRadius ? maxRadius : radius;\n\n        context.moveTo(rx, ry + radius);\n        context.lineTo(rx, ry + height - radius);\n        context.quadraticCurveTo(rx, ry + height, rx + radius, ry + height);\n        context.lineTo(rx + width - radius, ry + height);\n        context.quadraticCurveTo(\n          rx + width,\n          ry + height,\n          rx + width,\n          ry + height - radius\n        );\n        context.lineTo(rx + width, ry + radius);\n        context.quadraticCurveTo(rx + width, ry, rx + width - radius, ry);\n        context.lineTo(rx + radius, ry);\n        context.quadraticCurveTo(rx, ry, rx, ry + radius);\n        context.closePath();\n      }\n    }\n  }\n\n  /**\n   * Restores the current drawing context to the state it was before the mask was applied.\n   *\n   * @param {InkPaint.CanvasRenderer} renderer - The renderer context to use.\n   */\n  popMask(renderer) {\n    renderer.context.restore();\n    renderer.invalidateBlendMode();\n  }\n\n  /**\n   * Destroys this canvas mask manager.\n   *\n   */\n  destroy() {\n    /* empty */\n  }\n}\n"],"file":"CanvasMaskManager.js"}