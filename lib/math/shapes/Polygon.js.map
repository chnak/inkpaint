{"version":3,"sources":["../../../src/math/shapes/Polygon.js"],"names":["Polygon","constructor","points","Array","isArray","Point","p","i","il","length","push","x","y","closed","type","SHAPES","POLY","clone","slice","close","contains","inside","j","xi","yi","xj","yj","intersect"],"mappings":"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","sourcesContent":["import Point from \"../Point\";\nimport { SHAPES } from \"../../const\";\n\n/**\n * @class\n * @memberof InkPaint\n */\nexport default class Polygon {\n  constructor(...points) {\n    if (Array.isArray(points[0])) {\n      points = points[0];\n    }\n\n    // if this is an array of points, convert it to a flat array of numbers\n    if (points[0] instanceof Point) {\n      const p = [];\n\n      for (let i = 0, il = points.length; i < il; i++) {\n        p.push(points[i].x, points[i].y);\n      }\n\n      points = p;\n    }\n\n    this.closed = true;\n\n    /**\n     * An array of the points of this polygon\n     *\n     * @member {number[]}\n     */\n    this.points = points;\n\n    /**\n     * The type of the object, mainly used to avoid `instanceof` checks\n     *\n     * @member {number}\n     * @readOnly\n     * @default InkPaint.SHAPES.POLY\n     * @see InkPaint.SHAPES\n     */\n    this.type = SHAPES.POLY;\n  }\n\n  /**\n   * Creates a clone of this polygon\n   *\n   * @return {InkPaint.Polygon} a copy of the polygon\n   */\n  clone() {\n    return new Polygon(this.points.slice());\n  }\n\n  /**\n   * Closes the polygon, adding points if necessary.\n   *\n   */\n  close() {\n    const points = this.points;\n\n    // close the poly if the value is true!\n    if (\n      points[0] !== points[points.length - 2] ||\n      points[1] !== points[points.length - 1]\n    ) {\n      points.push(points[0], points[1]);\n    }\n  }\n\n  /**\n   * Checks whether the x and y coordinates passed to this function are contained within this polygon\n   *\n   * @param {number} x - The X coordinate of the point to test\n   * @param {number} y - The Y coordinate of the point to test\n   * @return {boolean} Whether the x/y coordinates are within this polygon\n   */\n  contains(x, y) {\n    let inside = false;\n\n    // use some raycasting to test hits\n    // https://github.com/substack/point-in-polygon/blob/master/index.js\n    const length = this.points.length / 2;\n\n    for (let i = 0, j = length - 1; i < length; j = i++) {\n      const xi = this.points[i * 2];\n      const yi = this.points[i * 2 + 1];\n      const xj = this.points[j * 2];\n      const yj = this.points[j * 2 + 1];\n      const intersect =\n        yi > y !== yj > y && x < (xj - xi) * ((y - yi) / (yj - yi)) + xi;\n\n      if (intersect) {\n        inside = !inside;\n      }\n    }\n\n    return inside;\n  }\n}\n"],"file":"Polygon.js"}