{"version":3,"sources":["../../../src/math/shapes/RoundedRectangle.js"],"names":["RoundedRectangle","constructor","x","y","width","height","radius","type","SHAPES","RREC","clone","contains","dx","dy","radius2"],"mappings":"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","sourcesContent":["import { SHAPES } from \"../../const\";\n\n/**\n * The Rounded Rectangle object is an area that has nice rounded corners, as indicated by its\n * top-left corner point (x, y) and by its width and its height and its radius.\n *\n * @class\n * @memberof InkPaint\n */\nexport default class RoundedRectangle {\n  /**\n   * @param {number} [x=0] - The X coordinate of the upper-left corner of the rounded rectangle\n   * @param {number} [y=0] - The Y coordinate of the upper-left corner of the rounded rectangle\n   * @param {number} [width=0] - The overall width of this rounded rectangle\n   * @param {number} [height=0] - The overall height of this rounded rectangle\n   * @param {number} [radius=20] - Controls the radius of the rounded corners\n   */\n  constructor(x = 0, y = 0, width = 0, height = 0, radius = 20) {\n    /**\n     * @member {number}\n     * @default 0\n     */\n    this.x = x;\n\n    /**\n     * @member {number}\n     * @default 0\n     */\n    this.y = y;\n\n    /**\n     * @member {number}\n     * @default 0\n     */\n    this.width = width;\n\n    /**\n     * @member {number}\n     * @default 0\n     */\n    this.height = height;\n\n    /**\n     * @member {number}\n     * @default 20\n     */\n    this.radius = radius;\n\n    /**\n     * The type of the object, mainly used to avoid `instanceof` checks\n     *\n     * @member {number}\n     * @readonly\n     * @default InkPaint.SHAPES.RREC\n     * @see InkPaint.SHAPES\n     */\n    this.type = SHAPES.RREC;\n  }\n\n  /**\n   * Creates a clone of this Rounded Rectangle\n   *\n   * @return {InkPaint.RoundedRectangle} a copy of the rounded rectangle\n   */\n  clone() {\n    return new RoundedRectangle(\n      this.x,\n      this.y,\n      this.width,\n      this.height,\n      this.radius\n    );\n  }\n\n  /**\n   * Checks whether the x and y coordinates given are contained within this Rounded Rectangle\n   *\n   * @param {number} x - The X coordinate of the point to test\n   * @param {number} y - The Y coordinate of the point to test\n   * @return {boolean} Whether the x/y coordinates are within this Rounded Rectangle\n   */\n  contains(x, y) {\n    if (this.width <= 0 || this.height <= 0) {\n      return false;\n    }\n    if (x >= this.x && x <= this.x + this.width) {\n      if (y >= this.y && y <= this.y + this.height) {\n        if (\n          (y >= this.y + this.radius &&\n            y <= this.y + this.height - this.radius) ||\n          (x >= this.x + this.radius && x <= this.x + this.width - this.radius)\n        ) {\n          return true;\n        }\n        let dx = x - (this.x + this.radius);\n        let dy = y - (this.y + this.radius);\n        const radius2 = this.radius * this.radius;\n\n        if (dx * dx + dy * dy <= radius2) {\n          return true;\n        }\n        dx = x - (this.x + this.width - this.radius);\n        if (dx * dx + dy * dy <= radius2) {\n          return true;\n        }\n        dy = y - (this.y + this.height - this.radius);\n        if (dx * dx + dy * dy <= radius2) {\n          return true;\n        }\n        dx = x - (this.x + this.radius);\n        if (dx * dx + dy * dy <= radius2) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n}\n"],"file":"RoundedRectangle.js"}