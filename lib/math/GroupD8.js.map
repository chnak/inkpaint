{"version":3,"sources":["../../src/math/GroupD8.js"],"names":["ux","uy","vx","vy","tempMatrices","mul","signum","x","init","i","row","push","j","_ux","_uy","_vx","_vy","k","mat","Matrix","set","GroupD8","E","SE","S","SW","W","NW","N","NE","MIRROR_VERTICAL","MIRROR_HORIZONTAL","uX","ind","uY","vX","vY","inv","rotation","add","rotationSecond","rotationFirst","sub","rotate180","isVertical","byDirection","dx","dy","Math","abs","matrixAppendRotationInv","matrix","tx","ty","append"],"mappings":"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","sourcesContent":["import Matrix from \"./Matrix\";\n\nconst ux = [1, 1, 0, -1, -1, -1, 0, 1, 1, 1, 0, -1, -1, -1, 0, 1];\nconst uy = [0, 1, 1, 1, 0, -1, -1, -1, 0, 1, 1, 1, 0, -1, -1, -1];\nconst vx = [0, -1, -1, -1, 0, 1, 1, 1, 0, 1, 1, 1, 0, -1, -1, -1];\nconst vy = [1, 1, 0, -1, -1, -1, 0, 1, -1, -1, 0, 1, 1, 1, 0, -1];\nconst tempMatrices = [];\n\nconst mul = [];\n\nfunction signum(x) {\n  if (x < 0) {\n    return -1;\n  }\n  if (x > 0) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction init() {\n  for (let i = 0; i < 16; i++) {\n    const row = [];\n\n    mul.push(row);\n\n    for (let j = 0; j < 16; j++) {\n      const _ux = signum(ux[i] * ux[j] + vx[i] * uy[j]);\n      const _uy = signum(uy[i] * ux[j] + vy[i] * uy[j]);\n      const _vx = signum(ux[i] * vx[j] + vx[i] * vy[j]);\n      const _vy = signum(uy[i] * vx[j] + vy[i] * vy[j]);\n\n      for (let k = 0; k < 16; k++) {\n        if (ux[k] === _ux && uy[k] === _uy && vx[k] === _vx && vy[k] === _vy) {\n          row.push(k);\n          break;\n        }\n      }\n    }\n  }\n\n  for (let i = 0; i < 16; i++) {\n    const mat = new Matrix();\n\n    mat.set(ux[i], uy[i], vx[i], vy[i], 0, 0);\n    tempMatrices.push(mat);\n  }\n}\n\ninit();\n\nconst GroupD8 = {\n  E: 0,\n  SE: 1,\n  S: 2,\n  SW: 3,\n  W: 4,\n  NW: 5,\n  N: 6,\n  NE: 7,\n  MIRROR_VERTICAL: 8,\n  MIRROR_HORIZONTAL: 12,\n  uX: ind => ux[ind],\n  uY: ind => uy[ind],\n  vX: ind => vx[ind],\n  vY: ind => vy[ind],\n  inv: rotation => {\n    if (rotation & 8) {\n      return rotation & 15;\n    }\n\n    return -rotation & 7;\n  },\n  add: (rotationSecond, rotationFirst) => mul[rotationSecond][rotationFirst],\n  sub: (rotationSecond, rotationFirst) =>\n    mul[rotationSecond][GroupD8.inv(rotationFirst)],\n\n  rotate180: rotation => rotation ^ 4,\n  isVertical: rotation => (rotation & 3) === 2,\n\n  byDirection: (dx, dy) => {\n    if (Math.abs(dx) * 2 <= Math.abs(dy)) {\n      if (dy >= 0) {\n        return GroupD8.S;\n      }\n\n      return GroupD8.N;\n    } else if (Math.abs(dy) * 2 <= Math.abs(dx)) {\n      if (dx > 0) {\n        return GroupD8.E;\n      }\n\n      return GroupD8.W;\n    } else if (dy > 0) {\n      if (dx > 0) {\n        return GroupD8.SE;\n      }\n\n      return GroupD8.SW;\n    } else if (dx > 0) {\n      return GroupD8.NE;\n    }\n\n    return GroupD8.NW;\n  },\n\n  matrixAppendRotationInv: (matrix, rotation, tx = 0, ty = 0) => {\n    // Packer used \"rotation\", we use \"inv(rotation)\"\n    const mat = tempMatrices[GroupD8.inv(rotation)];\n\n    mat.tx = tx;\n    mat.ty = ty;\n    matrix.append(mat);\n  }\n};\n\nexport default GroupD8;\n"],"file":"GroupD8.js"}