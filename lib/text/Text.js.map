{"version":3,"sources":["../../src/text/Text.js"],"names":["defaultDestroyOptions","texture","children","baseTexture","Text","Sprite","constructor","text","style","canvas","Doc","createElement","width","height","Texture","fromCanvas","settings","SCALE_MODE","orig","Rectangle","trim","_texture","textureCacheIds","context","getContext","resolution","RESOLUTION","_text","_style","_styleListener","_font","localStyleID","updateText","respectDirty","styleID","dirty","toFontString","measured","TextMetrics","measureText","wordWrap","lines","lineHeight","lineWidths","maxLineWidth","fontProperties","charWidth","fontSize","letterSpacing","Math","ceil","max","padding","scale","clearRect","drawBackground","drawSelection","font","strokeStyle","stroke","lineWidth","strokeThickness","textBaseline","lineJoin","miterLimit","linePositionX","linePositionY","fontOffset","dropShadow","fillStyle","dropShadowColor","globalAlpha","dropShadowAlpha","shadowBlur","dropShadowBlur","shadowColor","xShadowOffset","cos","dropShadowAngle","dropShadowDistance","yShadowOffset","sin","i","length","ascent","align","fill","drawLetterSpacing","_generateFillStyle","chars","lastLine","lastCharIdx","ci","push","updateTexture","background","backgroundColor","ftext","String","fillRect","selectionStart","selectionEnd","selection","start","end","lineIdx","charIdx","li","charStart","x","left","charEnd","right","selectionBgColor","y","isStroke","characters","Array","from","currentPosition","index","current","previousWidth","currentWidth","strokeText","fillText","slice","join","char","top","cx","updateStyle","key","newKey","camelCase","selectStart","point","indexOf","selectEnd","cursorPoint","selectMove","withShift","withCtrl","sel","prevLine","lastChar","textLine","line","nextLine","firstChar","min","pX","filter","floor","cursor","undefined","charOf","input","val","cursorIndex","delete","strs","splice","force","count","selectionText","name","SPECIAL_CHARS_REGEXP","MOZ_HACK_REGEXP","replace","_","separator","letter","offset","toUpperCase","trimmed","data","putImageData","hasLoaded","realWidth","realHeight","_frame","_onTextureUpdate","emit","adaptedNodeCanvas","renderWebGL","renderer","_renderCanvas","getLocalBounds","rect","call","_calculateBounds","calculateVertices","_bounds","addQuad","vertexData","_onStyleChange","fillImage","createPattern","isArray","gradient","totalIterations","currentIteration","stop","fillGradientStops","lengthPlus1","unshift","fillGradientType","TEXT_GRADIENT","LINEAR_VERTICAL","createLinearGradient","j","addColorStop","destroy","options","destroyed","Object","assign","abs","value","s","_width","_height","TextStyle"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,IAAMA,qBAAqB,GAAG;AAC5BC,EAAAA,OAAO,EAAE,IADmB;AAE5BC,EAAAA,QAAQ,EAAE,KAFkB;AAG5BC,EAAAA,WAAW,EAAE;AAHe,CAA9B;;AAMe,MAAMC,IAAN,SAAmBC,eAAnB,CAA0B;AACvCC,EAAAA,WAAW,CAACC,IAAD,EAAOC,KAAP,EAAcC,MAAd,EAAsB;AAC/BA,IAAAA,MAAM,GAAGA,MAAM,IAAIC,aAAIC,aAAJ,CAAkB,QAAlB,CAAnB;AACAF,IAAAA,MAAM,CAACG,KAAP,GAAe,CAAf;AACAH,IAAAA,MAAM,CAACI,MAAP,GAAgB,CAAhB;;AAEA,QAAMZ,OAAO,GAAGa,iBAAQC,UAAR,CAAmBN,MAAnB,EAA2BO,kBAASC,UAApC,EAAgD,MAAhD,CAAhB;;AACAhB,IAAAA,OAAO,CAACiB,IAAR,GAAe,IAAIC,eAAJ,EAAf;AACAlB,IAAAA,OAAO,CAACmB,IAAR,GAAe,IAAID,eAAJ,EAAf;AAEA,UAAMlB,OAAN;AACA,kCACE,KAAKoB,QADP,EAEE,KAAKA,QAAL,CAAclB,WAAd,CAA0BmB,eAA1B,CAA0C,CAA1C,CAFF;AAKA,SAAKb,MAAL,GAAcA,MAAd;AACA,SAAKc,OAAL,GAAe,KAAKd,MAAL,CAAYe,UAAZ,CAAuB,IAAvB,CAAf;AACA,SAAKC,UAAL,GAAkBT,kBAASU,UAA3B;AACA,SAAKC,KAAL,GAAa,IAAb;AACA,SAAKC,MAAL,GAAc,IAAd;AACA,SAAKC,cAAL,GAAsB,IAAtB;AACA,SAAKC,KAAL,GAAa,EAAb;AACA,SAAKvB,IAAL,GAAYA,IAAZ;AACA,SAAKC,KAAL,GAAaA,KAAb;AACA,SAAKuB,YAAL,GAAoB,CAAC,CAArB;AACD;;AAEDC,EAAAA,UAAU,CAACC,YAAD,EAAe;AACvB,QAAMzB,KAAK,GAAG,KAAKoB,MAAnB;;AAEA,QAAI,KAAKG,YAAL,KAAsBvB,KAAK,CAAC0B,OAAhC,EAAyC;AACvC,WAAKC,KAAL,GAAa,IAAb;AACA,WAAKJ,YAAL,GAAoBvB,KAAK,CAAC0B,OAA1B;AACD;;AAED,QAAI,CAAC,KAAKC,KAAN,IAAeF,YAAnB,EAAiC;AAC/B;AACD;;AAED,SAAKH,KAAL,GAAa,KAAKF,MAAL,CAAYQ,YAAZ,EAAb;AAEA,QAAMb,OAAO,GAAG,KAAKA,OAArB;;AACA,QAAMc,QAAQ,GAAGC,qBAAYC,WAAZ,CACf,KAAKZ,KADU,EAEf,KAAKC,MAFU,EAGf,KAAKA,MAAL,CAAYY,QAHG,EAIf,KAAK/B,MAJU,CAAjB;;AAMA,QAAMG,KAAK,GAAGyB,QAAQ,CAACzB,KAAvB;AACA,QAAMC,MAAM,GAAGwB,QAAQ,CAACxB,MAAxB;AACA,QAAM4B,KAAK,GAAGJ,QAAQ,CAACI,KAAvB;AACA,QAAMC,UAAU,GAAGL,QAAQ,CAACK,UAA5B;AACA,QAAMC,UAAU,GAAGN,QAAQ,CAACM,UAA5B;AACA,QAAMC,YAAY,GAAGP,QAAQ,CAACO,YAA9B;AACA,QAAMC,cAAc,GAAGR,QAAQ,CAACQ,cAAhC;AACA,SAAKH,UAAL,GAAkBL,QAAQ,CAACK,UAA3B;AACA,SAAKI,SAAL,GAAiBD,cAAc,CAACE,QAAf,GAA0B,KAAKnB,MAAL,CAAYoB,aAAvD;AAEA,SAAKvC,MAAL,CAAYG,KAAZ,GAAoBqC,IAAI,CAACC,IAAL,CAClB,CAACD,IAAI,CAACE,GAAL,CAAS,CAAT,EAAYvC,KAAZ,IAAqBJ,KAAK,CAAC4C,OAAN,GAAgB,CAAtC,IAA2C,KAAK3B,UAD9B,CAApB;AAGA,SAAKhB,MAAL,CAAYI,MAAZ,GAAqBoC,IAAI,CAACC,IAAL,CACnB,CAACD,IAAI,CAACE,GAAL,CAAS,CAAT,EAAYtC,MAAZ,IAAsBL,KAAK,CAAC4C,OAAN,GAAgB,CAAvC,IAA4C,KAAK3B,UAD9B,CAArB;AAIAF,IAAAA,OAAO,CAAC8B,KAAR,CAAc,KAAK5B,UAAnB,EAA+B,KAAKA,UAApC;AACAF,IAAAA,OAAO,CAAC+B,SAAR,CAAkB,CAAlB,EAAqB,CAArB,EAAwB,KAAK7C,MAAL,CAAYG,KAApC,EAA2C,KAAKH,MAAL,CAAYI,MAAvD;AACA,SAAK0C,cAAL,CAAoB/C,KAApB;AACA,SAAKgD,aAAL;AAEAjC,IAAAA,OAAO,CAACkC,IAAR,GAAe,KAAK3B,KAApB;AACAP,IAAAA,OAAO,CAACmC,WAAR,GAAsBlD,KAAK,CAACmD,MAA5B;AACApC,IAAAA,OAAO,CAACqC,SAAR,GAAoBpD,KAAK,CAACqD,eAA1B;AACAtC,IAAAA,OAAO,CAACuC,YAAR,GAAuBtD,KAAK,CAACsD,YAA7B;AACAvC,IAAAA,OAAO,CAACwC,QAAR,GAAmBvD,KAAK,CAACuD,QAAzB;AACAxC,IAAAA,OAAO,CAACyC,UAAR,GAAqBxD,KAAK,CAACwD,UAA3B;AAEA,QAAIC,aAAJ;AACA,QAAIC,aAAJ,CAnDuB,CAqDvB;;AACA,QAAIC,UAAU,GAAG,CAACzB,UAAU,GAAGG,cAAc,CAACE,QAA7B,IAAyC,CAA1D;;AAEA,QAAIvC,KAAK,CAAC4D,UAAV,EAAsB;AACpB7C,MAAAA,OAAO,CAAC8C,SAAR,GAAoB7D,KAAK,CAAC8D,eAA1B;AACA/C,MAAAA,OAAO,CAACgD,WAAR,GAAsB/D,KAAK,CAACgE,eAA5B;AACAjD,MAAAA,OAAO,CAACkD,UAAR,GAAqBjE,KAAK,CAACkE,cAA3B;;AAEA,UAAIlE,KAAK,CAACkE,cAAN,GAAuB,CAA3B,EAA8B;AAC5BnD,QAAAA,OAAO,CAACoD,WAAR,GAAsBnE,KAAK,CAAC8D,eAA5B;AACD;;AAED,UAAMM,aAAa,GACjB3B,IAAI,CAAC4B,GAAL,CAASrE,KAAK,CAACsE,eAAf,IAAkCtE,KAAK,CAACuE,kBAD1C;AAEA,UAAMC,aAAa,GACjB/B,IAAI,CAACgC,GAAL,CAASzE,KAAK,CAACsE,eAAf,IAAkCtE,KAAK,CAACuE,kBAD1C;;AAGA,WAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGzC,KAAK,CAAC0C,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrCjB,QAAAA,aAAa,GAAGzD,KAAK,CAACqD,eAAN,GAAwB,CAAxC;AACAK,QAAAA,aAAa,GAAGC,UAAU,GACxB3D,KAAK,CAACqD,eAAN,GAAwB,CADV,GACcqB,CAAC,GAAGxC,UADlB,GAC+BG,cAAc,CAACuC,MAD9D;;AAGA,YAAI5E,KAAK,CAAC6E,KAAN,KAAgB,OAApB,EAA6B;AAC3BpB,UAAAA,aAAa,IAAIrB,YAAY,GAAGD,UAAU,CAACuC,CAAD,CAA1C;AACD,SAFD,MAEO,IAAI1E,KAAK,CAAC6E,KAAN,KAAgB,QAApB,EAA8B;AACnCpB,UAAAA,aAAa,IAAI,CAACrB,YAAY,GAAGD,UAAU,CAACuC,CAAD,CAA1B,IAAiC,CAAlD;AACD;;AAED,YAAI1E,KAAK,CAAC8E,IAAV,EAAgB;AACd,eAAKC,iBAAL,CACE9C,KAAK,CAACyC,CAAD,CADP,EAEEjB,aAAa,GAAGW,aAAhB,GAAgCpE,KAAK,CAAC4C,OAFxC,EAGEc,aAAa,GAAGc,aAAhB,GAAgCxE,KAAK,CAAC4C,OAHxC;;AAMA,cAAI5C,KAAK,CAACmD,MAAN,IAAgBnD,KAAK,CAACqD,eAA1B,EAA2C;AACzCtC,YAAAA,OAAO,CAACmC,WAAR,GAAsBlD,KAAK,CAAC8D,eAA5B;AACA,iBAAKiB,iBAAL,CACE9C,KAAK,CAACyC,CAAD,CADP,EAEEjB,aAAa,GAAGW,aAAhB,GAAgCpE,KAAK,CAAC4C,OAFxC,EAGEc,aAAa,GAAGc,aAAhB,GAAgCxE,KAAK,CAAC4C,OAHxC,EAIE,IAJF;AAMA7B,YAAAA,OAAO,CAACmC,WAAR,GAAsBlD,KAAK,CAACmD,MAA5B;AACD;AACF;AACF;AACF;;AAEDpC,IAAAA,OAAO,CAACkD,UAAR,GAAqB,CAArB;AACAlD,IAAAA,OAAO,CAACgD,WAAR,GAAsB,CAAtB;AACAhD,IAAAA,OAAO,CAAC8C,SAAR,GAAoB,KAAKmB,kBAAL,CAAwBhF,KAAxB,EAA+BiC,KAA/B,CAApB;AAEA,QAAMgD,KAAK,GAAG,EAAd,CA1GuB,CA2GvB;;AACA,SAAK,IAAIP,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAGzC,KAAK,CAAC0C,MAA1B,EAAkCD,EAAC,EAAnC,EAAuC;AACrCjB,MAAAA,aAAa,GAAGzD,KAAK,CAACqD,eAAN,GAAwB,CAAxC;AACAK,MAAAA,aAAa,GAAGC,UAAU,GACxB3D,KAAK,CAACqD,eAAN,GAAwB,CADV,GACcqB,EAAC,GAAGxC,UADlB,GAC+BG,cAAc,CAACuC,MAD9D;;AAGA,UAAI5E,KAAK,CAAC6E,KAAN,KAAgB,OAApB,EAA6B;AAC3BpB,QAAAA,aAAa,IAAIrB,YAAY,GAAGD,UAAU,CAACuC,EAAD,CAA1C;AACD,OAFD,MAEO,IAAI1E,KAAK,CAAC6E,KAAN,KAAgB,QAApB,EAA8B;AACnCpB,QAAAA,aAAa,IAAI,CAACrB,YAAY,GAAGD,UAAU,CAACuC,EAAD,CAA1B,IAAiC,CAAlD;AACD;;AAED,UAAI1E,KAAK,CAACmD,MAAN,IAAgBnD,KAAK,CAACqD,eAA1B,EAA2C;AACzC,aAAK0B,iBAAL,CACE9C,KAAK,CAACyC,EAAD,CADP,EAEEjB,aAAa,GAAGzD,KAAK,CAAC4C,OAFxB,EAGEc,aAAa,GAAG1D,KAAK,CAAC4C,OAHxB,EAIE,IAJF;AAMD;;AAED,UAAI5C,KAAK,CAAC8E,IAAV,EAAgB;AACd,YAAMI,QAAQ,GAAGD,KAAK,CAACA,KAAK,CAACN,MAAN,GAAe,CAAhB,CAAtB;AACA,YAAMQ,WAAW,GAAGD,QAAQ,GAAGA,QAAQ,CAACA,QAAQ,CAACP,MAAT,GAAkB,CAAnB,CAAR,CAA8BS,EAAjC,GAAsC,CAAC,CAAnE;AACAH,QAAAA,KAAK,CAACI,IAAN,CAAW,KAAKN,iBAAL,CACT9C,KAAK,CAACyC,EAAD,CADI,EAETjB,aAAa,GAAGzD,KAAK,CAAC4C,OAFb,EAGTc,aAAa,GAAG1D,KAAK,CAAC4C,OAHb,EAIT,KAJS,EAKTuC,WAAW,GAAG,CALL,CAAX;AAOD;AACF;;AACD,SAAKF,KAAL,GAAaA,KAAb,CA5IuB,CA6IvB;;AAEA,SAAKK,aAAL;AACD;;AAEDvC,EAAAA,cAAc,CAAC/C,KAAD,EAAQ;AACpB,QAAMuF,UAAU,GAAGvF,KAAK,CAACuF,UAAN,IAAoBvF,KAAK,CAACwF,eAA7C;AACA,QAAI,CAACD,UAAL,EAAiB;AAEjB,QAAM;AAAExE,MAAAA,OAAF;AAAWd,MAAAA,MAAX;AAAmBF,MAAAA;AAAnB,QAA4B,IAAlC;AACA,QAAM0F,KAAK,GAAGC,MAAM,CAAC3F,IAAD,CAAN,CAAaa,IAAb,EAAd;;AACA,QAAI6E,KAAJ,EAAW;AACT1E,MAAAA,OAAO,CAAC8C,SAAR,GAAoB0B,UAApB;AACAxE,MAAAA,OAAO,CAAC4E,QAAR,CAAiB,CAAjB,EAAoB,CAApB,EAAuB1F,MAAM,CAACG,KAA9B,EAAqCH,MAAM,CAACI,MAA5C;AACD,KAHD,MAGO;AACLU,MAAAA,OAAO,CAAC+B,SAAR,CAAkB,CAAlB,EAAqB,CAArB,EAAwB7C,MAAM,CAACG,KAA/B,EAAsCH,MAAM,CAACI,MAA7C;AACD;AACF;;AAED2C,EAAAA,aAAa,GAAG;AACd,QAAI,CAAC,KAAK4C,cAAN,IAAwB,CAAC,KAAKC,YAAlC,EAAgD;AAC9C,WAAKC,SAAL,GAAiB,IAAjB;AACA;AACD;;AACD,QAAMzF,MAAM,GAAG,KAAK6B,UAApB,CALc,CAMd;;AACA,QAAM,CAAE6D,KAAF,EAASC,GAAT,IAAkB,KAAKJ,cAAL,CAAoBK,OAApB,GAA8B,KAAKJ,YAAL,CAAkBI,OAAhD,IACjB,KAAKL,cAAL,CAAoBK,OAApB,IAA+B,KAAKJ,YAAL,CAAkBI,OAAjD,IAA4D,KAAKL,cAAL,CAAoBM,OAApB,IAA+B,KAAKL,YAAL,CAAkBK,OAD7F,GAEjB,CAAC,KAAKN,cAAN,EAAsB,KAAKC,YAA3B,CAFiB,GAE0B,CAAC,KAAKA,YAAN,EAAoB,KAAKD,cAAzB,CAFjD;AAIA,SAAKE,SAAL,GAAiB;AAACC,MAAAA,KAAD;AAAQC,MAAAA;AAAR,KAAjB;;AACA,SAAK,IAAIG,EAAE,GAAGJ,KAAK,CAACE,OAApB,EAA6BE,EAAE,IAAIH,GAAG,CAACC,OAAvC,EAAgDE,EAAE,EAAlD,EAAsD;AAAA;;AACpD,UAAMC,SAAS,GAAGD,EAAE,KAAKJ,KAAK,CAACE,OAAb,GAAuBF,KAAK,CAACM,CAA7B,GACf,yBAAKpB,KAAL,CAAWkB,EAAX,EAAe,CAAf,sCAAmBG,IAAnB,KAA2B,CAD9B,CADoD,CAElB;;AAClC,UAAMC,OAAO,GAAGJ,EAAE,KAAKH,GAAG,CAACC,OAAX,GAAqBD,GAAG,CAACK,CAAzB,GACb,wBAAKpB,KAAL,CAAWkB,EAAX,EAAe,KAAKlB,KAAL,CAAWkB,EAAX,EAAexB,MAAf,GAAwB,CAAvC,qCAA2C6B,KAA3C,KAAoD,CADvD;AAEA,WAAKzF,OAAL,CAAa8C,SAAb,GAAyB,KAAKzC,MAAL,CAAYqF,gBAArC;AACA,WAAK1F,OAAL,CAAa4E,QAAb,CAAsBS,SAAtB,EAAiCD,EAAE,GAAG9F,MAAtC,EAA8CkG,OAAO,GAAGH,SAAxD,EAAmE/F,MAAnE;AACD;AACF;;AAED0E,EAAAA,iBAAiB,CAAChF,IAAD,EAAOsG,CAAP,EAAUK,CAAV,EAAaC,QAAb,EAA6BvB,EAA7B,EAAmC;AAAA,QAAtBuB,QAAsB;AAAtBA,MAAAA,QAAsB,GAAb,KAAa;AAAA;;AAAA,QAANvB,EAAM;AAANA,MAAAA,EAAM,GAAH,CAAG;AAAA;;AAClD,QAAMpF,KAAK,GAAG,KAAKoB,MAAnB,CADkD,CAGlD;;AACA,QAAMoB,aAAa,GAAGxC,KAAK,CAACwC,aAA5B,CAJkD,CAMlD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMoE,UAAU,GAAGC,KAAK,CAACC,IAAN,CAAW/G,IAAX,CAAnB;AACA,QAAIgH,eAAe,GAAGV,CAAtB;AACA,QAAIW,KAAK,GAAG,CAAZ;AACA,QAAIC,OAAO,GAAG,EAAd;AACA,QAAIC,aAAa,GAAG,KAAKnG,OAAL,CAAagB,WAAb,CAAyBhC,IAAzB,EAA+BK,KAAnD;AACA,QAAI+G,YAAY,GAAG,CAAnB;AAEA,QAAMlC,KAAK,GAAG,EAAd;;AACA,WAAO+B,KAAK,GAAGJ,UAAU,CAACjC,MAA1B,EAAkC;AAChCsC,MAAAA,OAAO,GAAGL,UAAU,CAACI,KAAK,EAAN,CAApB;AACAX,MAAAA,CAAC,GAAGU,eAAJ;;AACA,UAAIJ,QAAJ,EAAc;AACZ,aAAK5F,OAAL,CAAaqG,UAAb,CAAwBH,OAAxB,EAAiCZ,CAAjC,EAAoCK,CAApC;AACD,OAFD,MAEO;AACL,aAAK3F,OAAL,CAAasG,QAAb,CAAsBJ,OAAtB,EAA+BZ,CAA/B,EAAkCK,CAAlC;AACD;;AAEDS,MAAAA,YAAY,GAAG,KAAKpG,OAAL,CAAagB,WAAb,CAAyB6E,UAAU,CAACU,KAAX,CAAiBN,KAAjB,EAAwBO,IAAxB,CAA6B,EAA7B,CAAzB,EAA2DnH,KAA1E;AACA2G,MAAAA,eAAe,IAAIG,aAAa,GAAGC,YAAhB,GAA+B3E,aAAlD;AACA0E,MAAAA,aAAa,GAAGC,YAAhB;AACA,UAAMX,KAAK,GAAGO,eAAe,GAAIvE,aAAa,GAAG,GAAjD;AACAyC,MAAAA,KAAK,CAACI,IAAN,CAAW;AAAEmC,QAAAA,IAAI,EAAEP,OAAR;AAAiB7B,QAAAA,EAAjB;AAAqBqC,QAAAA,GAAG,EAAEf,CAA1B;AAA6BJ,QAAAA,IAAI,EAAED,CAAnC;AAAsCG,QAAAA,KAAtC;AAA6CkB,QAAAA,EAAE,EAAE,OAAOrB,CAAC,GAAGG,KAAX;AAAjD,OAAX;AACApB,MAAAA,EAAE;AACH;;AACD,WAAOH,KAAP;AACD;;AAED0C,EAAAA,WAAW,CAAC3H,KAAD,EAAQ;AACjB,SAAK,IAAI4H,GAAT,IAAgB5H,KAAhB,EAAuB;AACrB,UAAI6H,MAAM,GAAG,KAAKC,SAAL,CAAeF,GAAf,CAAb;AACA,UAAIC,MAAM,KAAK,OAAf,EAAwBA,MAAM,GAAG,MAAT;AAExB,WAAK7H,KAAL,CAAW6H,MAAX,IAAqB7H,KAAK,CAAC4H,GAAD,CAA1B;AACD;AACF;;AAEDG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,SAAKpC,cAAL,GAAsB,KAAKqC,OAAL,CAAaD,KAAb,CAAtB;AACA,SAAKnC,YAAL,GAAoB,IAApB;AACD;;AAEDqC,EAAAA,SAAS,CAACF,KAAD,EAAQ;AACf,SAAKnC,YAAL,GAAoB,KAAKoC,OAAL,CAAaD,KAAb,CAApB;AACA,SAAKG,WAAL,GAAmB;AAAE9B,MAAAA,CAAC,EAAE,KAAKR,YAAL,CAAkBQ,CAAvB;AAA0BK,MAAAA,CAAC,EAAE,KAAKb,YAAL,CAAkBa,CAAlB,GAAsB;AAAnD,KAAnB;AACA,SAAKlF,UAAL,CAAgB,KAAhB;AACD;;AAED4G,EAAAA,UAAU,CAAC/B,CAAD,EAAIK,CAAJ,EAAO2B,SAAP,EAAkBC,QAAlB,EAA4B;AACpC,QAAI,CAAC,KAAKzC,YAAV,EAAwB,OADY,CACJ;;AAChC,QAAIQ,CAAC,KAAK,CAAV,EAAa;AACX,UAAI2B,KAAJ;;AACA,UAAI,CAACK,SAAD,IAAc,KAAKvC,SAAnB,IAAgC,KAAKA,SAAL,CAAeC,KAAf,CAAqBX,EAArB,GAA0B,KAAKU,SAAL,CAAeE,GAAf,CAAmBZ,EAAjF,EAAqF;AACnF;AACA,YAAMmD,GAAG,GAAG,KAAKzC,SAAL,CAAeO,CAAC,GAAG,CAAJ,GAAQ,KAAR,GAAgB,OAA/B,CAAZ;AACA2B,QAAAA,KAAK,GAAG;AAAE3B,UAAAA,CAAC,EAAEkC,GAAG,CAAClC,CAAT;AAAYK,UAAAA,CAAC,EAAE6B,GAAG,CAAC7B,CAAJ,GAAQ;AAAvB,SAAR;AACD,OAJD,MAIO,IAAI,CAAC4B,QAAD,IAAajC,CAAC,GAAG,CAAjB,IAAsB,KAAKR,YAAL,CAAkBK,OAAlB,IAA6B,CAAvD,EAA0D;AAC/D;AACA,YAAI,KAAKL,YAAL,CAAkBI,OAAlB,GAA4B,CAAhC,EAAmC;AACjC,cAAMuC,QAAQ,GAAG,KAAKvD,KAAL,CAAW,KAAKY,YAAL,CAAkBI,OAAlB,GAA4B,CAAvC,CAAjB;AACA,cAAMwC,QAAQ,GAAGD,QAAQ,CAACA,QAAQ,CAAC7D,MAAT,GAAkB,CAAnB,CAAzB,CAFiC,CAGjC;;AACAqD,UAAAA,KAAK,GAAG;AAAE3B,YAAAA,CAAC,EAAEoC,QAAQ,CAACnC,IAAd;AAAoBI,YAAAA,CAAC,EAAE+B,QAAQ,CAAChB,GAAT,GAAe;AAAtC,WAAR,CAJiC,CAKjC;AACD;AACF,OATM,MASA,IAAI,CAACa,QAAD,IAAajC,CAAC,GAAG,CAAjB,IAAsB,KAAKR,YAAL,CAAkBK,OAAlB,IAA6B,KAAKwC,QAAL,CAAc,KAAK7C,YAAL,CAAkBI,OAAhC,EAAyCtB,MAAhG,EAAwG;AAC7G;AACA,YAAI,KAAKkB,YAAL,CAAkBI,OAAlB,GAA4B,CAA5B,GAAgC,KAAKhB,KAAL,CAAWN,MAA/C,EAAuD;AACrD,cAAMgE,IAAI,GAAG,KAAK1D,KAAL,CAAW,KAAKY,YAAL,CAAkBI,OAA7B,CAAb,CADqD,CAErD;;AACA,cAAM2B,GAAG,GAAIe,IAAI,CAACA,IAAI,CAAChE,MAAL,GAAc,CAAf,CAAJ,CAAsB6C,IAAtB,KAA+B,IAAhC,GAAwC,OAAxC,GAAkD,MAA9D;AACA,cAAMoB,QAAQ,GAAG,KAAK3D,KAAL,CAAW,KAAKY,YAAL,CAAkBI,OAAlB,GAA4B,CAAvC,CAAjB;AACA,cAAM4C,SAAS,GAAGD,QAAQ,CAAC,CAAD,CAA1B;AACAZ,UAAAA,KAAK,GAAG;AAAE3B,YAAAA,CAAC,EAAEwC,SAAS,CAACjB,GAAD,CAAd;AAAqBlB,YAAAA,CAAC,EAAEmC,SAAS,CAACpB,GAAV,GAAgB;AAAxC,WAAR;AACD;AACF,OAVM,MAUA;AACL,YAAIvB,OAAO,GAAG,KAAKL,YAAL,CAAkBK,OAAlB,IAA6BG,CAAC,GAAG,CAAJ,GAAQ,CAAR,GAAY,CAAC,CAA1C,CAAd;;AACA,YAAMsC,KAAI,GAAG,KAAKD,QAAL,CAAc,KAAK7C,YAAL,CAAkBI,OAAhC,CAAb,CAFK,CAGL;;;AACA,YAAIqC,QAAJ,EAAcpC,OAAO,GAAGG,CAAC,GAAG,CAAJ,GAAQsC,KAAI,CAAChE,MAAb,GAAsB,CAAhC,CAJT,CAKL;;AACA,YAAMiD,IAAG,GAAG1B,OAAO,IAAIyC,KAAI,CAAChE,MAAhB,GAAyB,OAAzB,GAAmC,MAA/C;;AACA,YAAM6C,IAAI,GAAGmB,KAAI,CAAClG,IAAI,CAACqG,GAAL,CAAS5C,OAAT,EAAkByC,KAAI,CAAChE,MAAL,GAAc,CAAhC,CAAD,CAAjB;;AACAqD,QAAAA,KAAK,GAAG;AAAE3B,UAAAA,CAAC,EAAEmB,IAAI,CAACI,IAAD,CAAT;AAAgBlB,UAAAA,CAAC,EAAEc,IAAI,CAACC,GAAL,GAAW;AAA9B,SAAR;AACD;;AAED,UAAIO,KAAJ,EAAW;AACT,aAAKG,WAAL,GAAmBH,KAAnB;AACA,aAAKnC,YAAL,GAAoB,KAAKoC,OAAL,CAAaD,KAAb,CAApB;AACD;AACF,KAxCD,MAwCO;AACL,UAAItD,CAAC,GAAG,KAAKmB,YAAL,CAAkBI,OAAlB,IAA6BS,CAAC,GAAG,CAAJ,GAAQ,CAAR,GAAY,CAAC,CAA1C,CAAR;AACA,UAAIqC,EAAE,GAAG,KAAKZ,WAAL,CAAiB9B,CAA1B;;AACA,UAAIiC,QAAJ,EAAc;AAAE;AACd5D,QAAAA,CAAC,GAAGgC,CAAC,GAAG,CAAJ,GAAQ,KAAKzB,KAAL,CAAWN,MAAnB,GAA4B,CAAhC;AACAoE,QAAAA,EAAE,GAAGrC,CAAC,GAAG,CAAJ,GAAQ,KAAKtG,KAAb,GAAqB,CAA1B;AACD;;AACD,WAAKyF,YAAL,GAAoB,KAAKoC,OAAL,CAAa;AAAE5B,QAAAA,CAAC,EAAE0C,EAAL;AAASrC,QAAAA,CAAC,EAAE,KAAKxE,UAAL,GAAkBwC,CAAlB,GAAsB;AAAlC,OAAb,CAApB;AACD,KAlDmC,CAoDpC;;;AACA,QAAI,CAAC2D,SAAL,EAAgB,KAAKzC,cAAL,GAAsB,KAAKC,YAA3B;AAEhB,SAAKrE,UAAL,CAAgB,KAAhB;AACD;;AAEDkH,EAAAA,QAAQ,CAACzC,OAAD,EAAU;AAChB,WAAO,KAAKhB,KAAL,CAAWgB,OAAX,EAAoB+C,MAApB,CAA2B3C,CAAC,IAAIA,CAAC,CAACmB,IAAF,IAAU,IAA1C,CAAP;AACD;;AAEDS,EAAAA,OAAO,CAACD,KAAD,EAAQ;AACb,QAAM/B,OAAO,GAAGxD,IAAI,CAACE,GAAL,CAAS,CAAT,EAAYF,IAAI,CAACqG,GAAL,CAAS,KAAK7D,KAAL,CAAWN,MAAX,GAAoB,CAA7B,EAAgClC,IAAI,CAACwG,KAAL,CAAWjB,KAAK,CAACtB,CAAN,GAAU,KAAKxE,UAA1B,CAAhC,CAAZ,CAAhB;AACA,QAAIgE,OAAO,GAAG,CAAd;AACA,QAAId,EAAE,GAAG,KAAKH,KAAL,CAAWgB,OAAX,EAAoB,CAApB,IAAyB,KAAKhB,KAAL,CAAWgB,OAAX,EAAoB,CAApB,EAAuBb,EAAhD,GAAqD,CAA9D;AACA,QAAIiB,CAAC,GAAG,KAAKpB,KAAL,CAAWgB,OAAX,EAAoB,CAApB,IAAyB,KAAKhB,KAAL,CAAWgB,OAAX,EAAoB,CAApB,EAAuBK,IAAhD,GAAuD,CAA/D;;AACA,SAAK,IAAMkB,IAAX,IAAmB,KAAKvC,KAAL,CAAWgB,OAAX,CAAnB,EAAwC;AACtC,UAAIuB,IAAI,CAACA,IAAL,KAAc,IAAlB,EAAwB;AACxB,UAAIQ,KAAK,CAAC3B,CAAN,GAAUmB,IAAI,CAACE,EAAnB,EAAuB;AACvBxB,MAAAA,OAAO;AACPG,MAAAA,CAAC,GAAGmB,IAAI,CAAChB,KAAT;AACApB,MAAAA,EAAE,GAAGoC,IAAI,CAACpC,EAAL,GAAU,CAAf;AACD;;AACD,QAAM/E,MAAM,GAAG,KAAK6B,UAApB;AACA,WAAO;AAAE+D,MAAAA,OAAF;AAAWC,MAAAA,OAAX;AAAoBd,MAAAA,EAApB;AAAwBiB,MAAAA,CAAxB;AAA2BK,MAAAA,CAAC,EAAET,OAAO,GAAG5F,MAAxC;AAAgDA,MAAAA;AAAhD,KAAP;AACD;;AAED6I,EAAAA,MAAM,CAAC9D,EAAD,EAAK;AACT,QAAI4B,KAAK,GAAG5B,EAAZ;AACA,QAAIA,EAAE,KAAK+D,SAAX,EAAsBnC,KAAK,GAAG,KAAKnB,YAAL,CAAkBT,EAA1B,CAFb,CAGT;;AACA,QAAIoC,IAAI,GAAG,KAAK4B,MAAL,CAAYpC,KAAZ,CAAX;AACA,QAAIY,GAAG,GAAG,MAAV;;AACA,QAAI,CAACJ,IAAL,EAAW;AACT,UAAMtC,QAAQ,GAAG,KAAKD,KAAL,CAAW,KAAKA,KAAL,CAAWN,MAAX,GAAoB,CAA/B,CAAjB;AACA6C,MAAAA,IAAI,GAAGtC,QAAQ,CAACA,QAAQ,CAACP,MAAT,GAAkB,CAAnB,CAAf;AACAiD,MAAAA,GAAG,GAAG,OAAN;AACD,KAVQ,CAYT;;;AACA,SAAK/B,YAAL,GAAoB,KAAKoC,OAAL,CAAa;AAAE5B,MAAAA,CAAC,EAAEmB,IAAI,CAACI,GAAD,CAAT;AAAgBlB,MAAAA,CAAC,EAAEc,IAAI,CAACC,GAAL,GAAW;AAA9B,KAAb,CAApB;AACA,QAAIrC,EAAE,KAAK+D,SAAX,EAAsB,OAAO,KAAKtD,YAAZ,CAdb,CAcuC;;AAChD,SAAKD,cAAL,GAAsB,KAAKC,YAA3B,CAfS,CAegC;AAC1C;;AAEDwD,EAAAA,KAAK,CAACC,GAAD,EAAM;AACT,QAAM;AAAEvJ,MAAAA,IAAF;AAAQwJ,MAAAA,WAAW,EAAEnE;AAArB,QAA4B,KAAKoE,MAAL,CAAY,KAAZ,CAAlC,CADS,CAC6C;;AACtD,QAAMC,IAAI,GAAG5C,KAAK,CAACC,IAAN,CAAW/G,IAAX,CAAb;AACA0J,IAAAA,IAAI,CAACC,MAAL,CAAYtE,EAAZ,EAAgB,CAAhB,EAAmBkE,GAAnB;AACA,WAAO;AAAEvJ,MAAAA,IAAI,EAAE0J,IAAI,CAAClC,IAAL,CAAU,EAAV,CAAR;AAAuBgC,MAAAA,WAAW,EAAEnE,EAAE,GAAGyB,KAAK,CAACC,IAAN,CAAWwC,GAAX,EAAgB3E;AAAzD,KAAP;AACD;;AAED6E,EAAAA,MAAM,CAACG,KAAD,EAAa;AAAA,QAAZA,KAAY;AAAZA,MAAAA,KAAY,GAAN,IAAM;AAAA;;AACjB,QAAMF,IAAI,GAAG5C,KAAK,CAACC,IAAN,CAAW,KAAK/G,IAAhB,CAAb;AACA,QAAIgG,KAAK,GAAG,KAAKD,SAAL,CAAeC,KAAf,CAAqBX,EAArB,GAA0B,CAAtC;AACA,QAAIwE,KAAK,GAAG,CAAZ;AACA,QAAIV,MAAM,GAAG,KAAKrD,YAAlB;;AACA,QAAI,KAAKC,SAAL,IAAkB,KAAKA,SAAL,CAAeC,KAAf,CAAqBX,EAArB,GAA0B,KAAKU,SAAL,CAAeE,GAAf,CAAmBZ,EAAnE,EAAuE;AACrEW,MAAAA,KAAK,GAAG,KAAKD,SAAL,CAAeC,KAAf,CAAqBX,EAA7B;AACAwE,MAAAA,KAAK,GAAG,KAAK9D,SAAL,CAAeE,GAAf,CAAmBZ,EAAnB,GAAwB,KAAKU,SAAL,CAAeC,KAAf,CAAqBX,EAArD;AACA8D,MAAAA,MAAM,GAAG,KAAKpD,SAAL,CAAeE,GAAxB,CAHqE,CAGxC;;AAC7B,WAAKJ,cAAL,GAAsB,KAAKC,YAAL,GAAoBqD,MAA1C,CAJqE,CAInB;AACnD,KALD,MAKO,IAAI,CAACS,KAAD,IAAU,CAACT,MAAX,IAAqBA,MAAM,CAAC9D,EAAP,GAAY,CAArC,EAAwC;AAC7C,aAAO;AAAErF,QAAAA,IAAI,EAAE,KAAKA,IAAb;AAAmBwJ,QAAAA,WAAW,EAAEL,MAAM,GAAGA,MAAM,CAAC9D,EAAV,GAAeqE,IAAI,CAAC9E,MAAL,GAAc;AAAnE,OAAP;AACD,KAZgB,CAajB;;;AACA8E,IAAAA,IAAI,CAACC,MAAL,CAAY3D,KAAZ,EAAmB6D,KAAnB,EAdiB,CAgBjB;;AACA,QAAIjB,IAAI,GAAG,KAAK1D,KAAL,CAAWiE,MAAM,CAACjD,OAAlB,CAAX;AACA,QAAI2B,GAAG,GAAGsB,MAAM,CAAChD,OAAP,GAAiByC,IAAI,CAAChE,MAAtB,GAA+B,MAA/B,GAAwC,OAAlD;AACA,QAAI6C,IAAI,GAAGmB,IAAI,CAAClG,IAAI,CAACqG,GAAL,CAASI,MAAM,CAAChD,OAAhB,EAAyByC,IAAI,CAAChE,MAAL,GAAc,CAAvC,CAAD,CAAf;;AACA,QAAIiD,GAAG,KAAK,OAAR,IAAmB,KAAK3C,KAAL,CAAWiE,MAAM,CAACjD,OAAP,GAAiB,CAA5B,CAAnB,IACE,KAAKhB,KAAL,CAAWiE,MAAM,CAACjD,OAAP,GAAiB,CAA5B,EAA+B,CAA/B,CADN,EACyC;AACvCuB,MAAAA,IAAI,GAAG,KAAKvC,KAAL,CAAWiE,MAAM,CAACjD,OAAP,GAAiB,CAA5B,EAA+B,CAA/B,CAAP;AACA2B,MAAAA,GAAG,GAAG,MAAN;AACD;;AAED,QAAM2B,WAAW,GAAG/B,IAAI,CAACpC,EAAL,IAAWwC,GAAG,KAAK,OAAR,GAAkB,CAAlB,GAAsB,CAAjC,IAAsCgC,KAA1D;AACA,WAAO;AAAE7J,MAAAA,IAAI,EAAE0J,IAAI,CAAClC,IAAL,CAAU,EAAV,CAAR;AAAuBgC,MAAAA;AAAvB,KAAP;AACD;;AAEDH,EAAAA,MAAM,CAAChE,EAAD,EAAK;AACT,SAAK,IAAMuD,IAAX,IAAmB,KAAK1D,KAAxB,EAA+B;AAC7B,WAAK,IAAMuC,IAAX,IAAmBmB,IAAnB,EAAyB;AACvB,YAAInB,IAAI,CAACpC,EAAL,KAAYA,EAAhB,EAAoB,OAAOoC,IAAP;AACrB;AACF;AACF;;AAEDqC,EAAAA,aAAa,GAAG;AACd,QAAI,KAAK/D,SAAL,IAAkB,KAAKA,SAAL,CAAeC,KAAf,CAAqBX,EAArB,GAA0B,KAAKU,SAAL,CAAeE,GAAf,CAAmBZ,EAAnE,EAAuE;AACrE,UAAMqE,IAAI,GAAG5C,KAAK,CAACC,IAAN,CAAW,KAAK/G,IAAhB,CAAb;AACA,aAAO0J,IAAI,CAACnC,KAAL,CAAW,KAAKxB,SAAL,CAAeC,KAAf,CAAqBX,EAAhC,EAAoC,KAAKU,SAAL,CAAeE,GAAf,CAAmBZ,EAAvD,EAA2DmC,IAA3D,CAAgE,EAAhE,CAAP;AACD;;AACD,WAAO,EAAP;AACD;;AAEDO,EAAAA,SAAS,CAACgC,IAAD,EAAO;AACd,QAAMC,oBAAoB,GAAG,iBAA7B;AACA,QAAMC,eAAe,GAAG,aAAxB;AAEA,WAAOF,IAAI,CACRG,OADI,CACIF,oBADJ,EAC0B,UAASG,CAAT,EAAYC,SAAZ,EAAuBC,MAAvB,EAA+BC,MAA/B,EAAuC;AACpE,aAAOA,MAAM,GAAGD,MAAM,CAACE,WAAP,EAAH,GAA0BF,MAAvC;AACD,KAHI,EAIJH,OAJI,CAIID,eAJJ,EAIqB,OAJrB,CAAP;AAKD;;AAED1E,EAAAA,aAAa,GAAG;AACd,QAAMrF,MAAM,GAAG,KAAKA,MAApB;;AAEA,QAAI,KAAKmB,MAAL,CAAYR,IAAhB,EAAsB;AACpB,UAAM2J,OAAO,GAAG,yBAAWtK,MAAX,CAAhB;;AAEA,UAAIsK,OAAO,CAACC,IAAZ,EAAkB;AAChBvK,QAAAA,MAAM,CAACG,KAAP,GAAemK,OAAO,CAACnK,KAAvB;AACAH,QAAAA,MAAM,CAACI,MAAP,GAAgBkK,OAAO,CAAClK,MAAxB;AACA,aAAKU,OAAL,CAAa0J,YAAb,CAA0BF,OAAO,CAACC,IAAlC,EAAwC,CAAxC,EAA2C,CAA3C;AACD;AACF;;AAED,QAAM/K,OAAO,GAAG,KAAKoB,QAArB;AACA,QAAMb,KAAK,GAAG,KAAKoB,MAAnB;AACA,QAAMwB,OAAO,GAAG5C,KAAK,CAACY,IAAN,GAAa,CAAb,GAAiBZ,KAAK,CAAC4C,OAAvC;AACA,QAAMjD,WAAW,GAAGF,OAAO,CAACE,WAA5B;AAEAA,IAAAA,WAAW,CAAC+K,SAAZ,GAAwB,IAAxB;AACA/K,IAAAA,WAAW,CAACsB,UAAZ,GAAyB,KAAKA,UAA9B;AAEAtB,IAAAA,WAAW,CAACgL,SAAZ,GAAwB1K,MAAM,CAACG,KAA/B;AACAT,IAAAA,WAAW,CAACiL,UAAZ,GAAyB3K,MAAM,CAACI,MAAhC;AACAV,IAAAA,WAAW,CAACS,KAAZ,GAAoBH,MAAM,CAACG,KAAP,GAAe,KAAKa,UAAxC;AACAtB,IAAAA,WAAW,CAACU,MAAZ,GAAqBJ,MAAM,CAACI,MAAP,GAAgB,KAAKY,UAA1C;AAEAxB,IAAAA,OAAO,CAACmB,IAAR,CAAaR,KAAb,GAAqBX,OAAO,CAACoL,MAAR,CAAezK,KAAf,GAAuBH,MAAM,CAACG,KAAP,GAAe,KAAKa,UAAhE;AACAxB,IAAAA,OAAO,CAACmB,IAAR,CAAaP,MAAb,GAAsBZ,OAAO,CAACoL,MAAR,CAAexK,MAAf,GACpBJ,MAAM,CAACI,MAAP,GAAgB,KAAKY,UADvB;AAEAxB,IAAAA,OAAO,CAACmB,IAAR,CAAayF,CAAb,GAAiB,CAACzD,OAAlB;AACAnD,IAAAA,OAAO,CAACmB,IAAR,CAAa8F,CAAb,GAAiB,CAAC9D,OAAlB;AAEAnD,IAAAA,OAAO,CAACiB,IAAR,CAAaN,KAAb,GAAqBX,OAAO,CAACoL,MAAR,CAAezK,KAAf,GAAuBwC,OAAO,GAAG,CAAtD;AACAnD,IAAAA,OAAO,CAACiB,IAAR,CAAaL,MAAb,GAAsBZ,OAAO,CAACoL,MAAR,CAAexK,MAAf,GAAwBuC,OAAO,GAAG,CAAxD,CAjCc,CAmCd;;AACA,SAAKkI,gBAAL;;AACAnL,IAAAA,WAAW,CAACoL,IAAZ,CAAiB,QAAjB,EAA2BpL,WAA3B;AACAA,IAAAA,WAAW,CAACqL,iBAAZ;AACA,SAAKrJ,KAAL,GAAa,KAAb;AACD;;AAEDsJ,EAAAA,WAAW,CAACC,QAAD,EAAW;AACpB,QAAI,KAAKjK,UAAL,KAAoBiK,QAAQ,CAACjK,UAAjC,EAA6C;AAC3C,WAAKA,UAAL,GAAkBiK,QAAQ,CAACjK,UAA3B;AACA,WAAKU,KAAL,GAAa,IAAb;AACD;;AAED,SAAKH,UAAL,CAAgB,IAAhB;AACA,UAAMyJ,WAAN,CAAkBC,QAAlB;AACD;;AAEDC,EAAAA,aAAa,CAACD,QAAD,EAAW;AACtB,QAAI,KAAKjK,UAAL,KAAoBiK,QAAQ,CAACjK,UAAjC,EAA6C;AAC3C,WAAKA,UAAL,GAAkBiK,QAAQ,CAACjK,UAA3B;AACA,WAAKU,KAAL,GAAa,IAAb;AACD;;AAED,SAAKH,UAAL,CAAgB,IAAhB;;AACA,UAAM2J,aAAN,CAAoBD,QAApB;AACD;;AAEDE,EAAAA,cAAc,CAACC,IAAD,EAAO;AACnB,SAAK7J,UAAL,CAAgB,IAAhB;AACA,WAAO,MAAM4J,cAAN,CAAqBE,IAArB,CAA0B,IAA1B,EAAgCD,IAAhC,CAAP;AACD;;AAEDE,EAAAA,gBAAgB,GAAG;AACjB,SAAK/J,UAAL,CAAgB,IAAhB;AACA,SAAKgK,iBAAL,GAFiB,CAGjB;;AACA,SAAKC,OAAL,CAAaC,OAAb,CAAqB,KAAKC,UAA1B;AACD;;AAEDC,EAAAA,cAAc,GAAG;AACf,SAAKjK,KAAL,GAAa,IAAb;AACD;;AAEDqD,EAAAA,kBAAkB,CAAChF,KAAD,EAAQiC,KAAR,EAAe;AAC/B,QAAIjC,KAAK,CAAC6L,SAAV,EAAqB;AACnB,aAAO,KAAK9K,OAAL,CAAa+K,aAAb,CAA2B9L,KAAK,CAAC6L,SAAjC,EAA4C,QAA5C,CAAP;AACD;;AAED,QAAI,CAAChF,KAAK,CAACkF,OAAN,CAAc/L,KAAK,CAAC8E,IAApB,CAAL,EAAgC;AAC9B,aAAO9E,KAAK,CAAC8E,IAAb;AACD;;AAED,QAAIkH,QAAJ;AACA,QAAIC,eAAJ;AACA,QAAIC,gBAAJ;AACA,QAAIC,IAAJ;AAEA,QAAM/L,KAAK,GAAG,KAAKH,MAAL,CAAYG,KAAZ,GAAoB,KAAKa,UAAvC;AACA,QAAMZ,MAAM,GAAG,KAAKJ,MAAL,CAAYI,MAAZ,GAAqB,KAAKY,UAAzC;AACA,QAAM6D,IAAI,GAAG9E,KAAK,CAAC8E,IAAN,CAAWwC,KAAX,EAAb;AACA,QAAM8E,iBAAiB,GAAGpM,KAAK,CAACoM,iBAAN,CAAwB9E,KAAxB,EAA1B;;AAEA,QAAI,CAAC8E,iBAAiB,CAACzH,MAAvB,EAA+B;AAC7B,UAAM0H,WAAW,GAAGvH,IAAI,CAACH,MAAL,GAAc,CAAlC;;AAEA,WAAK,IAAID,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG2H,WAApB,EAAiC,EAAE3H,CAAnC,EAAsC;AACpC0H,QAAAA,iBAAiB,CAAC/G,IAAlB,CAAuBX,CAAC,GAAG2H,WAA3B;AACD;AACF;;AAEDvH,IAAAA,IAAI,CAACwH,OAAL,CAAatM,KAAK,CAAC8E,IAAN,CAAW,CAAX,CAAb;AACAsH,IAAAA,iBAAiB,CAACE,OAAlB,CAA0B,CAA1B;AAEAxH,IAAAA,IAAI,CAACO,IAAL,CAAUrF,KAAK,CAAC8E,IAAN,CAAW9E,KAAK,CAAC8E,IAAN,CAAWH,MAAX,GAAoB,CAA/B,CAAV;AACAyH,IAAAA,iBAAiB,CAAC/G,IAAlB,CAAuB,CAAvB;;AAEA,QAAIrF,KAAK,CAACuM,gBAAN,KAA2BC,qBAAcC,eAA7C,EAA8D;AAC5DT,MAAAA,QAAQ,GAAG,KAAKjL,OAAL,CAAa2L,oBAAb,CACTtM,KAAK,GAAG,CADC,EAET,CAFS,EAGTA,KAAK,GAAG,CAHC,EAITC,MAJS,CAAX;AAOA4L,MAAAA,eAAe,GAAG,CAACnH,IAAI,CAACH,MAAL,GAAc,CAAf,IAAoB1C,KAAK,CAAC0C,MAA5C;AACAuH,MAAAA,gBAAgB,GAAG,CAAnB;;AACA,WAAK,IAAIxH,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAGzC,KAAK,CAAC0C,MAA1B,EAAkCD,GAAC,EAAnC,EAAuC;AACrCwH,QAAAA,gBAAgB,IAAI,CAApB;;AACA,aAAK,IAAIS,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG7H,IAAI,CAACH,MAAzB,EAAiCgI,CAAC,EAAlC,EAAsC;AACpC,cAAI,OAAOP,iBAAiB,CAACO,CAAD,CAAxB,KAAgC,QAApC,EAA8C;AAC5CR,YAAAA,IAAI,GAAGC,iBAAiB,CAACO,CAAD,CAAjB,GAAuB1K,KAAK,CAAC0C,MAA7B,GAAsCD,GAAC,GAAGzC,KAAK,CAAC0C,MAAvD;AACD,WAFD,MAEO;AACLwH,YAAAA,IAAI,GAAGD,gBAAgB,GAAGD,eAA1B;AACD;;AACDD,UAAAA,QAAQ,CAACY,YAAT,CAAsBT,IAAtB,EAA4BrH,IAAI,CAAC6H,CAAD,CAAhC;AACAT,UAAAA,gBAAgB;AACjB;AACF;AACF,KAtBD,MAsBO;AACLF,MAAAA,QAAQ,GAAG,KAAKjL,OAAL,CAAa2L,oBAAb,CACT,CADS,EAETrM,MAAM,GAAG,CAFA,EAGTD,KAHS,EAITC,MAAM,GAAG,CAJA,CAAX;AAOA4L,MAAAA,eAAe,GAAGnH,IAAI,CAACH,MAAL,GAAc,CAAhC;AACAuH,MAAAA,gBAAgB,GAAG,CAAnB;;AAEA,WAAK,IAAIxH,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAGI,IAAI,CAACH,MAAzB,EAAiCD,GAAC,EAAlC,EAAsC;AACpC,YAAI,OAAO0H,iBAAiB,CAAC1H,GAAD,CAAxB,KAAgC,QAApC,EAA8C;AAC5CyH,UAAAA,IAAI,GAAGC,iBAAiB,CAAC1H,GAAD,CAAxB;AACD,SAFD,MAEO;AACLyH,UAAAA,IAAI,GAAGD,gBAAgB,GAAGD,eAA1B;AACD;;AACDD,QAAAA,QAAQ,CAACY,YAAT,CAAsBT,IAAtB,EAA4BrH,IAAI,CAACJ,GAAD,CAAhC;AACAwH,QAAAA,gBAAgB;AACjB;AACF;;AAED,WAAOF,QAAP;AACD;;AAEDa,EAAAA,OAAO,CAACC,OAAD,EAAU;AACf,QAAI,KAAKC,SAAT,EAAoB;;AAEpB,QAAI,OAAOD,OAAP,KAAmB,SAAvB,EAAkC;AAChCA,MAAAA,OAAO,GAAG;AAAEpN,QAAAA,QAAQ,EAAEoN;AAAZ,OAAV;AACD;;AAEDA,IAAAA,OAAO,GAAGE,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBzN,qBAAlB,EAAyCsN,OAAzC,CAAV;AACA,UAAMD,OAAN,CAAcC,OAAd;AACA,SAAK/L,OAAL,GAAe,IAAf;AACA,SAAKd,MAAL,GAAc,IAAd;AACA,SAAKmB,MAAL,GAAc,IAAd;AACD;;AAEQ,MAALhB,KAAK,GAAG;AACV,SAAKoB,UAAL,CAAgB,IAAhB;AACA,WAAOiB,IAAI,CAACyK,GAAL,CAAS,KAAKrK,KAAL,CAAWwD,CAApB,IAAyB,KAAKxF,QAAL,CAAcH,IAAd,CAAmBN,KAAnD;AACD;;AAEQ,MAALA,KAAK,CAAC+M,KAAD,EAAQ;AACf,SAAK3L,UAAL,CAAgB,IAAhB;AACA,QAAM4L,CAAC,GAAG,iBAAK,KAAKvK,KAAL,CAAWwD,CAAhB,KAAsB,CAAhC;AACA,SAAKxD,KAAL,CAAWwD,CAAX,GAAgB+G,CAAC,GAAGD,KAAL,GAAc,KAAKtM,QAAL,CAAcH,IAAd,CAAmBN,KAAhD;AACA,SAAKiN,MAAL,GAAcF,KAAd;AACD;;AAES,MAAN9M,MAAM,GAAG;AACX,SAAKmB,UAAL,CAAgB,IAAhB;AACA,WAAOiB,IAAI,CAACyK,GAAL,CAAS,KAAKrK,KAAL,CAAW6D,CAApB,IAAyB,KAAK7F,QAAL,CAAcH,IAAd,CAAmBL,MAAnD;AACD;;AAES,MAANA,MAAM,CAAC8M,KAAD,EAAQ;AAChB,SAAK3L,UAAL,CAAgB,IAAhB;AACA,QAAM4L,CAAC,GAAG,iBAAK,KAAKvK,KAAL,CAAW6D,CAAhB,KAAsB,CAAhC;AACA,SAAK7D,KAAL,CAAW6D,CAAX,GAAgB0G,CAAC,GAAGD,KAAL,GAAc,KAAKtM,QAAL,CAAcH,IAAd,CAAmBL,MAAhD;AACA,SAAKiN,OAAL,GAAeH,KAAf;AACD;;AAEO,MAAJlK,IAAI,GAAG;AACT,WAAO,KAAK3B,KAAZ;AACD;;AAEQ,MAALtB,KAAK,GAAG;AACV,WAAO,KAAKoB,MAAZ;AACD;;AAEQ,MAALpB,KAAK,CAACA,KAAD,EAAQ;AACfA,IAAAA,KAAK,GAAGA,KAAK,IAAI,EAAjB;;AAEA,QAAIA,KAAK,YAAYuN,kBAArB,EAAgC;AAC9B,WAAKnM,MAAL,GAAcpB,KAAd;AACD,KAFD,MAEO;AACL,WAAKoB,MAAL,GAAc,IAAImM,kBAAJ,CAAcvN,KAAd,CAAd;AACD;;AAED,SAAKuB,YAAL,GAAoB,CAAC,CAArB;AACA,SAAKI,KAAL,GAAa,IAAb;AACD;;AAEO,MAAJ5B,IAAI,GAAG;AACT,WAAO,KAAKoB,KAAZ;AACD;;AAEO,MAAJpB,IAAI,CAACA,IAAD,EAAO;AACbA,IAAAA,IAAI,GAAG2F,MAAM,CACX3F,IAAI,KAAK,EAAT,IAAeA,IAAI,KAAK,IAAxB,IAAgCA,IAAI,KAAKoJ,SAAzC,GAAqD,GAArD,GAA2DpJ,IADhD,CAAb;AAIA,QAAI,KAAKoB,KAAL,KAAepB,IAAnB,EAAyB;AACzB,SAAKoB,KAAL,GAAapB,IAAb;AACA,SAAK4B,KAAL,GAAa,IAAb;AACD;;AAtpBsC","sourcesContent":["import Sprite from \"../sprites/Sprite\";\nimport Texture from \"../textures/Texture\";\nimport { sign } from \"../utils\";\nimport { Rectangle } from \"../math\";\nimport { TEXT_GRADIENT } from \"../const\";\nimport settings from \"../settings\";\nimport TextStyle from \"./TextStyle\";\nimport TextMetrics from \"./TextMetrics\";\nimport trimCanvas from \"../utils/trimCanvas\";\nimport Doc from \"../polyfill/Doc\";\nimport { addToTextureCache } from \"../utils/cache\";\nimport _ from \"lodash\";\n\nconst defaultDestroyOptions = {\n  texture: true,\n  children: false,\n  baseTexture: true\n};\n\nexport default class Text extends Sprite {\n  constructor(text, style, canvas) {\n    canvas = canvas || Doc.createElement(\"canvas\");\n    canvas.width = 3;\n    canvas.height = 3;\n\n    const texture = Texture.fromCanvas(canvas, settings.SCALE_MODE, \"text\");\n    texture.orig = new Rectangle();\n    texture.trim = new Rectangle();\n\n    super(texture);\n    addToTextureCache(\n      this._texture,\n      this._texture.baseTexture.textureCacheIds[0]\n    );\n\n    this.canvas = canvas;\n    this.context = this.canvas.getContext(\"2d\");\n    this.resolution = settings.RESOLUTION;\n    this._text = null;\n    this._style = null;\n    this._styleListener = null;\n    this._font = \"\";\n    this.text = text;\n    this.style = style;\n    this.localStyleID = -1;\n  }\n\n  updateText(respectDirty) {\n    const style = this._style;\n\n    if (this.localStyleID !== style.styleID) {\n      this.dirty = true;\n      this.localStyleID = style.styleID;\n    }\n\n    if (!this.dirty && respectDirty) {\n      return;\n    }\n\n    this._font = this._style.toFontString();\n\n    const context = this.context;\n    const measured = TextMetrics.measureText(\n      this._text,\n      this._style,\n      this._style.wordWrap,\n      this.canvas\n    );\n    const width = measured.width;\n    const height = measured.height;\n    const lines = measured.lines;\n    const lineHeight = measured.lineHeight;\n    const lineWidths = measured.lineWidths;\n    const maxLineWidth = measured.maxLineWidth;\n    const fontProperties = measured.fontProperties;\n    this.lineHeight = measured.lineHeight;\n    this.charWidth = fontProperties.fontSize + this._style.letterSpacing;\n\n    this.canvas.width = Math.ceil(\n      (Math.max(1, width) + style.padding * 2) * this.resolution\n    );\n    this.canvas.height = Math.ceil(\n      (Math.max(1, height) + style.padding * 2) * this.resolution\n    );\n\n    context.scale(this.resolution, this.resolution);\n    context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    this.drawBackground(style);\n    this.drawSelection();\n\n    context.font = this._font;\n    context.strokeStyle = style.stroke;\n    context.lineWidth = style.strokeThickness;\n    context.textBaseline = style.textBaseline;\n    context.lineJoin = style.lineJoin;\n    context.miterLimit = style.miterLimit;\n\n    let linePositionX;\n    let linePositionY;\n\n    // vertical center in lineHeight\n    let fontOffset = (lineHeight - fontProperties.fontSize) / 2;\n\n    if (style.dropShadow) {\n      context.fillStyle = style.dropShadowColor;\n      context.globalAlpha = style.dropShadowAlpha;\n      context.shadowBlur = style.dropShadowBlur;\n\n      if (style.dropShadowBlur > 0) {\n        context.shadowColor = style.dropShadowColor;\n      }\n\n      const xShadowOffset =\n        Math.cos(style.dropShadowAngle) * style.dropShadowDistance;\n      const yShadowOffset =\n        Math.sin(style.dropShadowAngle) * style.dropShadowDistance;\n\n      for (let i = 0; i < lines.length; i++) {\n        linePositionX = style.strokeThickness / 2;\n        linePositionY = fontOffset + \n          style.strokeThickness / 2 + i * lineHeight + fontProperties.ascent;\n\n        if (style.align === \"right\") {\n          linePositionX += maxLineWidth - lineWidths[i];\n        } else if (style.align === \"center\") {\n          linePositionX += (maxLineWidth - lineWidths[i]) / 2;\n        }\n\n        if (style.fill) {\n          this.drawLetterSpacing(\n            lines[i],\n            linePositionX + xShadowOffset + style.padding,\n            linePositionY + yShadowOffset + style.padding\n          );\n\n          if (style.stroke && style.strokeThickness) {\n            context.strokeStyle = style.dropShadowColor;\n            this.drawLetterSpacing(\n              lines[i],\n              linePositionX + xShadowOffset + style.padding,\n              linePositionY + yShadowOffset + style.padding,\n              true\n            );\n            context.strokeStyle = style.stroke;\n          }\n        }\n      }\n    }\n\n    context.shadowBlur = 0;\n    context.globalAlpha = 1;\n    context.fillStyle = this._generateFillStyle(style, lines);\n\n    const chars = [];\n    // draw lines line by line\n    for (let i = 0; i < lines.length; i++) {\n      linePositionX = style.strokeThickness / 2;\n      linePositionY = fontOffset + \n        style.strokeThickness / 2 + i * lineHeight + fontProperties.ascent;\n\n      if (style.align === \"right\") {\n        linePositionX += maxLineWidth - lineWidths[i];\n      } else if (style.align === \"center\") {\n        linePositionX += (maxLineWidth - lineWidths[i]) / 2;\n      }\n\n      if (style.stroke && style.strokeThickness) {\n        this.drawLetterSpacing(\n          lines[i],\n          linePositionX + style.padding,\n          linePositionY + style.padding,\n          true\n        );\n      }\n\n      if (style.fill) {\n        const lastLine = chars[chars.length - 1];\n        const lastCharIdx = lastLine ? lastLine[lastLine.length - 1].ci : -1;\n        chars.push(this.drawLetterSpacing(\n          lines[i],\n          linePositionX + style.padding,\n          linePositionY + style.padding,\n          false, \n          lastCharIdx + 1\n        ));\n      }\n    }\n    this.chars = chars;\n    // console.log('chars', chars);\n\n    this.updateTexture();\n  }\n\n  drawBackground(style) {\n    const background = style.background || style.backgroundColor;\n    if (!background) return;\n\n    const { context, canvas, text } = this;\n    const ftext = String(text).trim();\n    if (ftext) {\n      context.fillStyle = background;\n      context.fillRect(0, 0, canvas.width, canvas.height);\n    } else {\n      context.clearRect(0, 0, canvas.width, canvas.height);\n    }\n  }\n\n  drawSelection() {\n    if (!this.selectionStart || !this.selectionEnd) {\n      this.selection = null;\n      return;\n    }\n    const height = this.lineHeight;\n    // make sure start < end;\n    const [ start, end ] = (this.selectionStart.lineIdx < this.selectionEnd.lineIdx\n       || (this.selectionStart.lineIdx == this.selectionEnd.lineIdx && this.selectionStart.charIdx <= this.selectionEnd.charIdx))\n        ? [this.selectionStart, this.selectionEnd] : [this.selectionEnd, this.selectionStart];\n\n    this.selection = {start, end};\n    for (let li = start.lineIdx; li <= end.lineIdx; li++) {\n      const charStart = li === start.lineIdx ? start.x : \n        (this.chars[li][0]?.left || 0); // todo: align center / right\n      const charEnd = li === end.lineIdx ? end.x : \n        (this.chars[li][this.chars[li].length - 1]?.right || 0);\n      this.context.fillStyle = this._style.selectionBgColor;\n      this.context.fillRect(charStart, li * height, charEnd - charStart, height);\n    }\n  }\n\n  drawLetterSpacing(text, x, y, isStroke=false, ci=0) {\n    const style = this._style;\n\n    // letterSpacing of 0 means normal\n    const letterSpacing = style.letterSpacing;\n\n    // 需要计算单个字符的selection，暂时不用快捷的渲染，统一\n    // if (letterSpacing === 0) {\n    //   if (isStroke) {\n    //     this.context.strokeText(text, x, y);\n    //   } else {\n    //     this.context.fillText(text, x, y);\n    //   }\n    //   return;\n    // }\n\n    const characters = Array.from(text);\n    let currentPosition = x;\n    let index = 0;\n    let current = \"\";\n    let previousWidth = this.context.measureText(text).width;\n    let currentWidth = 0;\n\n    const chars = [];\n    while (index < characters.length) {\n      current = characters[index++];\n      x = currentPosition;\n      if (isStroke) {\n        this.context.strokeText(current, x, y);\n      } else {\n        this.context.fillText(current, x, y);\n      }\n\n      currentWidth = this.context.measureText(characters.slice(index).join('')).width;\n      currentPosition += previousWidth - currentWidth + letterSpacing;\n      previousWidth = currentWidth;\n      const right = currentPosition - (letterSpacing * 0.5);\n      chars.push({ char: current, ci, top: y, left: x, right, cx: 0.5 * (x + right) });\n      ci++;\n    }\n    return chars;\n  }\n\n  updateStyle(style) {\n    for (let key in style) {\n      let newKey = this.camelCase(key);\n      if (newKey === \"color\") newKey = \"fill\";\n\n      this.style[newKey] = style[key];\n    }\n  }\n\n  selectStart(point) {\n    this.selectionStart = this.indexOf(point);\n    this.selectionEnd = null;\n  }\n\n  selectEnd(point) {\n    this.selectionEnd = this.indexOf(point);\n    this.cursorPoint = { x: this.selectionEnd.x, y: this.selectionEnd.y + 1};\n    this.updateText(false);\n  }\n\n  selectMove(x, y, withShift, withCtrl) {\n    if (!this.selectionEnd) return; // todo: select 0 as default\n    if (x !== 0) {\n      let point;\n      if (!withShift && this.selection && this.selection.start.ci < this.selection.end.ci) {\n        // 有选中的时候，纯移动先移到开头/末尾\n        const sel = this.selection[x > 0 ? 'end' : 'start'];\n        point = { x: sel.x, y: sel.y + 1 };\n      } else if (!withCtrl && x < 0 && this.selectionEnd.charIdx <= 0) {\n        // prev line\n        if (this.selectionEnd.lineIdx > 0) {\n          const prevLine = this.chars[this.selectionEnd.lineIdx - 1];\n          const lastChar = prevLine[prevLine.length - 1];\n          // 上一行的lastChar可能是\\n，也可能是强制换行的字符，都需要到【左边】\n          point = { x: lastChar.left, y: lastChar.top + 1 };\n          // console.log('selectMove', lastChar, point);\n        }\n      } else if (!withCtrl && x > 0 && this.selectionEnd.charIdx >= this.textLine(this.selectionEnd.lineIdx).length) {\n        // next line\n        if (this.selectionEnd.lineIdx + 1 < this.chars.length) {\n          const line = this.chars[this.selectionEnd.lineIdx];\n          // 判断是否有强制换行\n          const key = (line[line.length - 1].char !== '\\n') ? 'right' : 'left';\n          const nextLine = this.chars[this.selectionEnd.lineIdx + 1];\n          const firstChar = nextLine[0];\n          point = { x: firstChar[key], y: firstChar.top + 1 };\n        }\n      } else {\n        let charIdx = this.selectionEnd.charIdx + (x > 0 ? 1 : -1);\n        const line = this.textLine(this.selectionEnd.lineIdx);\n        // 跳到开头、末尾\n        if (withCtrl) charIdx = x > 0 ? line.length : 0;\n        // 最后一个字符\n        const key = charIdx >= line.length ? 'right' : 'left';\n        const char = line[Math.min(charIdx, line.length - 1)];\n        point = { x: char[key], y: char.top + 1 };\n      }\n\n      if (point) {\n        this.cursorPoint = point;\n        this.selectionEnd = this.indexOf(point);\n      }\n    } else {\n      let i = this.selectionEnd.lineIdx + (y > 0 ? 1 : -1);\n      let pX = this.cursorPoint.x;\n      if (withCtrl) { // leftTop / rightBottom\n        i = y > 0 ? this.chars.length : 0; \n        pX = y > 0 ? this.width : 0;\n      }\n      this.selectionEnd = this.indexOf({ x: pX, y: this.lineHeight * i + 1 });\n    }\n\n    // cursor move, without shift\n    if (!withShift) this.selectionStart = this.selectionEnd;\n\n    this.updateText(false);\n  }\n\n  textLine(lineIdx) {\n    return this.chars[lineIdx].filter(x => x.char != '\\n');\n  }\n\n  indexOf(point) {\n    const lineIdx = Math.max(0, Math.min(this.chars.length - 1, Math.floor(point.y / this.lineHeight)));\n    let charIdx = 0;\n    let ci = this.chars[lineIdx][0] ? this.chars[lineIdx][0].ci : 0;\n    let x = this.chars[lineIdx][0] ? this.chars[lineIdx][0].left : 0;\n    for (const char of this.chars[lineIdx]) {\n      if (char.char === '\\n') continue;\n      if (point.x < char.cx) break;\n      charIdx++;\n      x = char.right;\n      ci = char.ci + 1;\n    }\n    const height = this.lineHeight;\n    return { lineIdx, charIdx, ci, x, y: lineIdx * height, height };\n  }\n\n  cursor(ci) {\n    let index = ci;\n    if (ci === undefined) index = this.selectionEnd.ci;\n    // console.log('cursor', {index, ci}, Array.from(this.text).length);\n    let char = this.charOf(index);\n    let key = 'left';\n    if (!char) {\n      const lastLine = this.chars[this.chars.length - 1];\n      char = lastLine[lastLine.length - 1];\n      key = 'right';\n    }\n\n    // update\n    this.selectionEnd = this.indexOf({ x: char[key], y: char.top + 1 });\n    if (ci === undefined) return this.selectionEnd; // get\n    this.selectionStart = this.selectionEnd; // set\n  }\n\n  input(val) {\n    const { text, cursorIndex: ci } = this.delete(false); // remove selection\n    const strs = Array.from(text);\n    strs.splice(ci, 0, val);\n    return { text: strs.join(''), cursorIndex: ci + Array.from(val).length };\n  }\n\n  delete(force=true) {\n    const strs = Array.from(this.text);\n    let start = this.selection.start.ci - 1;\n    let count = 1;\n    let cursor = this.selectionEnd;\n    if (this.selection && this.selection.start.ci < this.selection.end.ci) {\n      start = this.selection.start.ci;\n      count = this.selection.end.ci - this.selection.start.ci;\n      cursor = this.selection.end; // 确保是后边那个\n      this.selectionStart = this.selectionEnd = cursor; // 去掉选中\n    } else if (!force || !cursor || cursor.ci < 1) {\n      return { text: this.text, cursorIndex: cursor ? cursor.ci : strs.length + 1 };\n    }\n    // 从数组中删除\n    strs.splice(start, count);\n\n    // 找到当前光标右边的char\n    let line = this.chars[cursor.lineIdx];\n    let key = cursor.charIdx < line.length ? 'left' : 'right';\n    let char = line[Math.min(cursor.charIdx, line.length - 1)];\n    if (key === 'right' && this.chars[cursor.lineIdx + 1]\n       && this.chars[cursor.lineIdx + 1][0]) {\n      char = this.chars[cursor.lineIdx + 1][0];\n      key = 'left';\n    }\n\n    const cursorIndex = char.ci + (key === 'right' ? 1 : 0) - count;\n    return { text: strs.join(''), cursorIndex };\n  }\n\n  charOf(ci) {\n    for (const line of this.chars) {\n      for (const char of line) {\n        if (char.ci === ci) return char;\n      }\n    }\n  }\n\n  selectionText() {\n    if (this.selection && this.selection.start.ci < this.selection.end.ci) {\n      const strs = Array.from(this.text);\n      return strs.slice(this.selection.start.ci, this.selection.end.ci).join('');\n    }\n    return '';\n  }\n\n  camelCase(name) {\n    const SPECIAL_CHARS_REGEXP = /([\\:\\-\\_]+(.))/g;\n    const MOZ_HACK_REGEXP = /^moz([A-Z])/;\n\n    return name\n      .replace(SPECIAL_CHARS_REGEXP, function(_, separator, letter, offset) {\n        return offset ? letter.toUpperCase() : letter;\n      })\n      .replace(MOZ_HACK_REGEXP, \"Moz$1\");\n  }\n\n  updateTexture() {\n    const canvas = this.canvas;\n\n    if (this._style.trim) {\n      const trimmed = trimCanvas(canvas);\n\n      if (trimmed.data) {\n        canvas.width = trimmed.width;\n        canvas.height = trimmed.height;\n        this.context.putImageData(trimmed.data, 0, 0);\n      }\n    }\n\n    const texture = this._texture;\n    const style = this._style;\n    const padding = style.trim ? 0 : style.padding;\n    const baseTexture = texture.baseTexture;\n\n    baseTexture.hasLoaded = true;\n    baseTexture.resolution = this.resolution;\n\n    baseTexture.realWidth = canvas.width;\n    baseTexture.realHeight = canvas.height;\n    baseTexture.width = canvas.width / this.resolution;\n    baseTexture.height = canvas.height / this.resolution;\n\n    texture.trim.width = texture._frame.width = canvas.width / this.resolution;\n    texture.trim.height = texture._frame.height =\n      canvas.height / this.resolution;\n    texture.trim.x = -padding;\n    texture.trim.y = -padding;\n\n    texture.orig.width = texture._frame.width - padding * 2;\n    texture.orig.height = texture._frame.height - padding * 2;\n\n    // call sprite onTextureUpdate to update scale if _width or _height were set\n    this._onTextureUpdate();\n    baseTexture.emit(\"update\", baseTexture);\n    baseTexture.adaptedNodeCanvas();\n    this.dirty = false;\n  }\n\n  renderWebGL(renderer) {\n    if (this.resolution !== renderer.resolution) {\n      this.resolution = renderer.resolution;\n      this.dirty = true;\n    }\n\n    this.updateText(true);\n    super.renderWebGL(renderer);\n  }\n\n  _renderCanvas(renderer) {\n    if (this.resolution !== renderer.resolution) {\n      this.resolution = renderer.resolution;\n      this.dirty = true;\n    }\n\n    this.updateText(true);\n    super._renderCanvas(renderer);\n  }\n\n  getLocalBounds(rect) {\n    this.updateText(true);\n    return super.getLocalBounds.call(this, rect);\n  }\n\n  _calculateBounds() {\n    this.updateText(true);\n    this.calculateVertices();\n    // if we have already done this on THIS frame.\n    this._bounds.addQuad(this.vertexData);\n  }\n\n  _onStyleChange() {\n    this.dirty = true;\n  }\n\n  _generateFillStyle(style, lines) {\n    if (style.fillImage) {\n      return this.context.createPattern(style.fillImage, 'repeat');\n    }\n\n    if (!Array.isArray(style.fill)) {\n      return style.fill;\n    }\n\n    let gradient;\n    let totalIterations;\n    let currentIteration;\n    let stop;\n\n    const width = this.canvas.width / this.resolution;\n    const height = this.canvas.height / this.resolution;\n    const fill = style.fill.slice();\n    const fillGradientStops = style.fillGradientStops.slice();\n\n    if (!fillGradientStops.length) {\n      const lengthPlus1 = fill.length + 1;\n\n      for (let i = 1; i < lengthPlus1; ++i) {\n        fillGradientStops.push(i / lengthPlus1);\n      }\n    }\n\n    fill.unshift(style.fill[0]);\n    fillGradientStops.unshift(0);\n\n    fill.push(style.fill[style.fill.length - 1]);\n    fillGradientStops.push(1);\n\n    if (style.fillGradientType === TEXT_GRADIENT.LINEAR_VERTICAL) {\n      gradient = this.context.createLinearGradient(\n        width / 2,\n        0,\n        width / 2,\n        height\n      );\n\n      totalIterations = (fill.length + 1) * lines.length;\n      currentIteration = 0;\n      for (let i = 0; i < lines.length; i++) {\n        currentIteration += 1;\n        for (let j = 0; j < fill.length; j++) {\n          if (typeof fillGradientStops[j] === \"number\") {\n            stop = fillGradientStops[j] / lines.length + i / lines.length;\n          } else {\n            stop = currentIteration / totalIterations;\n          }\n          gradient.addColorStop(stop, fill[j]);\n          currentIteration++;\n        }\n      }\n    } else {\n      gradient = this.context.createLinearGradient(\n        0,\n        height / 2,\n        width,\n        height / 2\n      );\n\n      totalIterations = fill.length + 1;\n      currentIteration = 1;\n\n      for (let i = 0; i < fill.length; i++) {\n        if (typeof fillGradientStops[i] === \"number\") {\n          stop = fillGradientStops[i];\n        } else {\n          stop = currentIteration / totalIterations;\n        }\n        gradient.addColorStop(stop, fill[i]);\n        currentIteration++;\n      }\n    }\n\n    return gradient;\n  }\n\n  destroy(options) {\n    if (this.destroyed) return;\n\n    if (typeof options === \"boolean\") {\n      options = { children: options };\n    }\n\n    options = Object.assign({}, defaultDestroyOptions, options);\n    super.destroy(options);\n    this.context = null;\n    this.canvas = null;\n    this._style = null;\n  }\n\n  get width() {\n    this.updateText(true);\n    return Math.abs(this.scale.x) * this._texture.orig.width;\n  }\n\n  set width(value) {\n    this.updateText(true);\n    const s = sign(this.scale.x) || 1;\n    this.scale.x = (s * value) / this._texture.orig.width;\n    this._width = value;\n  }\n\n  get height() {\n    this.updateText(true);\n    return Math.abs(this.scale.y) * this._texture.orig.height;\n  }\n\n  set height(value) {\n    this.updateText(true);\n    const s = sign(this.scale.y) || 1;\n    this.scale.y = (s * value) / this._texture.orig.height;\n    this._height = value;\n  }\n\n  get font() {\n    return this._font;\n  }\n\n  get style() {\n    return this._style;\n  }\n\n  set style(style) {\n    style = style || {};\n\n    if (style instanceof TextStyle) {\n      this._style = style;\n    } else {\n      this._style = new TextStyle(style);\n    }\n\n    this.localStyleID = -1;\n    this.dirty = true;\n  }\n\n  get text() {\n    return this._text;\n  }\n\n  set text(text) {\n    text = String(\n      text === \"\" || text === null || text === undefined ? \" \" : text\n    );\n\n    if (this._text === text) return;\n    this._text = text;\n    this.dirty = true;\n  }\n}\n"],"file":"Text.js"}