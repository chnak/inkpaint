{"version":3,"sources":["../../src/text/Text.js"],"names":["defaultDestroyOptions","texture","children","baseTexture","Text","Sprite","constructor","text","style","canvas","Doc","createElement","width","height","Texture","fromCanvas","settings","SCALE_MODE","orig","Rectangle","trim","_texture","textureCacheIds","context","getContext","resolution","RESOLUTION","_text","_style","_styleListener","_font","localStyleID","updateText","respectDirty","styleID","dirty","toFontString","measured","TextMetrics","measureText","wordWrap","lines","lineHeight","lineWidths","maxLineWidth","fontProperties","Math","ceil","max","padding","scale","clearRect","drawBackground","font","strokeStyle","stroke","lineWidth","strokeThickness","textBaseline","lineJoin","miterLimit","linePositionX","linePositionY","fontOffset","fontSize","dropShadow","fillStyle","dropShadowColor","globalAlpha","dropShadowAlpha","shadowBlur","dropShadowBlur","shadowColor","xShadowOffset","cos","dropShadowAngle","dropShadowDistance","yShadowOffset","sin","i","length","ascent","align","fill","drawLetterSpacing","_generateFillStyle","updateTexture","background","backgroundColor","ftext","String","fillRect","x","y","isStroke","letterSpacing","strokeText","fillText","characters","prototype","split","call","currentPosition","index","current","previousWidth","currentWidth","substring","updateStyle","key","newKey","camelCase","name","SPECIAL_CHARS_REGEXP","MOZ_HACK_REGEXP","replace","_","separator","letter","offset","toUpperCase","trimmed","data","putImageData","hasLoaded","realWidth","realHeight","_frame","_onTextureUpdate","emit","renderWebGL","renderer","_renderCanvas","getLocalBounds","rect","_calculateBounds","calculateVertices","_bounds","addQuad","vertexData","_onStyleChange","Array","isArray","gradient","totalIterations","currentIteration","stop","slice","fillGradientStops","lengthPlus1","push","unshift","fillGradientType","TEXT_GRADIENT","LINEAR_VERTICAL","createLinearGradient","j","addColorStop","destroy","options","destroyed","Object","assign","abs","value","s","_width","_height","TextStyle","undefined"],"mappings":"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","sourcesContent":["import Sprite from \"../sprites/Sprite\";\nimport Texture from \"../textures/Texture\";\nimport { sign } from \"../utils\";\nimport { Rectangle } from \"../math\";\nimport { TEXT_GRADIENT } from \"../const\";\nimport settings from \"../settings\";\nimport TextStyle from \"./TextStyle\";\nimport TextMetrics from \"./TextMetrics\";\nimport trimCanvas from \"../utils/trimCanvas\";\nimport Doc from \"../polyfill/Doc\";\nimport { addToTextureCache } from \"../utils/cache\";\n\nconst defaultDestroyOptions = {\n  texture: true,\n  children: false,\n  baseTexture: true\n};\n\nexport default class Text extends Sprite {\n  constructor(text, style, canvas) {\n    canvas = canvas || Doc.createElement(\"canvas\");\n    canvas.width = 3;\n    canvas.height = 3;\n\n    const texture = Texture.fromCanvas(canvas, settings.SCALE_MODE, \"text\");\n    texture.orig = new Rectangle();\n    texture.trim = new Rectangle();\n\n    super(texture);\n    addToTextureCache(\n      this._texture,\n      this._texture.baseTexture.textureCacheIds[0]\n    );\n\n    this.canvas = canvas;\n    this.context = this.canvas.getContext(\"2d\");\n    this.resolution = settings.RESOLUTION;\n    this._text = null;\n    this._style = null;\n    this._styleListener = null;\n    this._font = \"\";\n    this.text = text;\n    this.style = style;\n    this.localStyleID = -1;\n  }\n\n  updateText(respectDirty) {\n    const style = this._style;\n\n    if (this.localStyleID !== style.styleID) {\n      this.dirty = true;\n      this.localStyleID = style.styleID;\n    }\n\n    if (!this.dirty && respectDirty) {\n      return;\n    }\n\n    this._font = this._style.toFontString();\n\n    const context = this.context;\n    const measured = TextMetrics.measureText(\n      this._text,\n      this._style,\n      this._style.wordWrap,\n      this.canvas\n    );\n    const width = measured.width;\n    const height = measured.height;\n    const lines = measured.lines;\n    const lineHeight = measured.lineHeight;\n    const lineWidths = measured.lineWidths;\n    const maxLineWidth = measured.maxLineWidth;\n    const fontProperties = measured.fontProperties;\n\n    this.canvas.width = Math.ceil(\n      (Math.max(1, width) + style.padding * 2) * this.resolution\n    );\n    this.canvas.height = Math.ceil(\n      (Math.max(1, height) + style.padding * 2) * this.resolution\n    );\n\n    context.scale(this.resolution, this.resolution);\n    context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    this.drawBackground(style);\n\n    context.font = this._font;\n    context.strokeStyle = style.stroke;\n    context.lineWidth = style.strokeThickness;\n    context.textBaseline = style.textBaseline;\n    context.lineJoin = style.lineJoin;\n    context.miterLimit = style.miterLimit;\n\n    let linePositionX;\n    let linePositionY;\n\n    // vertical center in lineHeight\n    let fontOffset = (lineHeight - fontProperties.fontSize) / 2;\n\n    if (style.dropShadow) {\n      context.fillStyle = style.dropShadowColor;\n      context.globalAlpha = style.dropShadowAlpha;\n      context.shadowBlur = style.dropShadowBlur;\n\n      if (style.dropShadowBlur > 0) {\n        context.shadowColor = style.dropShadowColor;\n      }\n\n      const xShadowOffset =\n        Math.cos(style.dropShadowAngle) * style.dropShadowDistance;\n      const yShadowOffset =\n        Math.sin(style.dropShadowAngle) * style.dropShadowDistance;\n\n      for (let i = 0; i < lines.length; i++) {\n        linePositionX = style.strokeThickness / 2;\n        linePositionY = fontOffset + \n          style.strokeThickness / 2 + i * lineHeight + fontProperties.ascent;\n\n        if (style.align === \"right\") {\n          linePositionX += maxLineWidth - lineWidths[i];\n        } else if (style.align === \"center\") {\n          linePositionX += (maxLineWidth - lineWidths[i]) / 2;\n        }\n\n        if (style.fill) {\n          this.drawLetterSpacing(\n            lines[i],\n            linePositionX + xShadowOffset + style.padding,\n            linePositionY + yShadowOffset + style.padding\n          );\n\n          if (style.stroke && style.strokeThickness) {\n            context.strokeStyle = style.dropShadowColor;\n            this.drawLetterSpacing(\n              lines[i],\n              linePositionX + xShadowOffset + style.padding,\n              linePositionY + yShadowOffset + style.padding,\n              true\n            );\n            context.strokeStyle = style.stroke;\n          }\n        }\n      }\n    }\n\n    context.shadowBlur = 0;\n    context.globalAlpha = 1;\n    context.fillStyle = this._generateFillStyle(style, lines);\n\n    // draw lines line by line\n    for (let i = 0; i < lines.length; i++) {\n      linePositionX = style.strokeThickness / 2;\n      linePositionY = fontOffset + \n        style.strokeThickness / 2 + i * lineHeight + fontProperties.ascent;\n\n      if (style.align === \"right\") {\n        linePositionX += maxLineWidth - lineWidths[i];\n      } else if (style.align === \"center\") {\n        linePositionX += (maxLineWidth - lineWidths[i]) / 2;\n      }\n\n      if (style.stroke && style.strokeThickness) {\n        this.drawLetterSpacing(\n          lines[i],\n          linePositionX + style.padding,\n          linePositionY + style.padding,\n          true\n        );\n      }\n\n      if (style.fill) {\n        this.drawLetterSpacing(\n          lines[i],\n          linePositionX + style.padding,\n          linePositionY + style.padding\n        );\n      }\n    }\n\n    this.updateTexture();\n  }\n\n  drawBackground(style) {\n    const background = style.background || style.backgroundColor;\n    if (!background) return;\n\n    const { context, canvas, text } = this;\n    const ftext = String(text).trim();\n    if (ftext) {\n      context.fillStyle = background;\n      context.fillRect(0, 0, canvas.width, canvas.height);\n    } else {\n      context.clearRect(0, 0, canvas.width, canvas.height);\n    }\n  }\n\n  drawLetterSpacing(text, x, y, isStroke = false) {\n    const style = this._style;\n\n    // letterSpacing of 0 means normal\n    const letterSpacing = style.letterSpacing;\n\n    if (letterSpacing === 0) {\n      if (isStroke) {\n        this.context.strokeText(text, x, y);\n      } else {\n        this.context.fillText(text, x, y);\n      }\n\n      return;\n    }\n\n    const characters = String.prototype.split.call(text, \"\");\n    let currentPosition = x;\n    let index = 0;\n    let current = \"\";\n    let previousWidth = this.context.measureText(text).width;\n    let currentWidth = 0;\n\n    while (index < text.length) {\n      current = characters[index++];\n      if (isStroke) {\n        this.context.strokeText(current, currentPosition, y);\n      } else {\n        this.context.fillText(current, currentPosition, y);\n      }\n\n      currentWidth = this.context.measureText(text.substring(index)).width;\n      currentPosition += previousWidth - currentWidth + letterSpacing;\n      previousWidth = currentWidth;\n    }\n  }\n\n  updateStyle(style) {\n    for (let key in style) {\n      let newKey = this.camelCase(key);\n      if (newKey === \"color\") newKey = \"fill\";\n\n      this.style[newKey] = style[key];\n    }\n  }\n\n  camelCase(name) {\n    const SPECIAL_CHARS_REGEXP = /([\\:\\-\\_]+(.))/g;\n    const MOZ_HACK_REGEXP = /^moz([A-Z])/;\n\n    return name\n      .replace(SPECIAL_CHARS_REGEXP, function(_, separator, letter, offset) {\n        return offset ? letter.toUpperCase() : letter;\n      })\n      .replace(MOZ_HACK_REGEXP, \"Moz$1\");\n  }\n\n  updateTexture() {\n    const canvas = this.canvas;\n\n    if (this._style.trim) {\n      const trimmed = trimCanvas(canvas);\n\n      if (trimmed.data) {\n        canvas.width = trimmed.width;\n        canvas.height = trimmed.height;\n        this.context.putImageData(trimmed.data, 0, 0);\n      }\n    }\n\n    const texture = this._texture;\n    const style = this._style;\n    const padding = style.trim ? 0 : style.padding;\n    const baseTexture = texture.baseTexture;\n\n    baseTexture.hasLoaded = true;\n    baseTexture.resolution = this.resolution;\n\n    baseTexture.realWidth = canvas.width;\n    baseTexture.realHeight = canvas.height;\n    baseTexture.width = canvas.width / this.resolution;\n    baseTexture.height = canvas.height / this.resolution;\n\n    texture.trim.width = texture._frame.width = canvas.width / this.resolution;\n    texture.trim.height = texture._frame.height =\n      canvas.height / this.resolution;\n    texture.trim.x = -padding;\n    texture.trim.y = -padding;\n\n    texture.orig.width = texture._frame.width - padding * 2;\n    texture.orig.height = texture._frame.height - padding * 2;\n\n    // call sprite onTextureUpdate to update scale if _width or _height were set\n    this._onTextureUpdate();\n    baseTexture.emit(\"update\", baseTexture);\n    this.dirty = false;\n  }\n\n  renderWebGL(renderer) {\n    if (this.resolution !== renderer.resolution) {\n      this.resolution = renderer.resolution;\n      this.dirty = true;\n    }\n\n    this.updateText(true);\n    super.renderWebGL(renderer);\n  }\n\n  _renderCanvas(renderer) {\n    if (this.resolution !== renderer.resolution) {\n      this.resolution = renderer.resolution;\n      this.dirty = true;\n    }\n\n    this.updateText(true);\n    super._renderCanvas(renderer);\n  }\n\n  getLocalBounds(rect) {\n    this.updateText(true);\n    return super.getLocalBounds.call(this, rect);\n  }\n\n  _calculateBounds() {\n    this.updateText(true);\n    this.calculateVertices();\n    // if we have already done this on THIS frame.\n    this._bounds.addQuad(this.vertexData);\n  }\n\n  _onStyleChange() {\n    this.dirty = true;\n  }\n\n  _generateFillStyle(style, lines) {\n    if (!Array.isArray(style.fill)) {\n      return style.fill;\n    }\n\n    let gradient;\n    let totalIterations;\n    let currentIteration;\n    let stop;\n\n    const width = this.canvas.width / this.resolution;\n    const height = this.canvas.height / this.resolution;\n    const fill = style.fill.slice();\n    const fillGradientStops = style.fillGradientStops.slice();\n\n    if (!fillGradientStops.length) {\n      const lengthPlus1 = fill.length + 1;\n\n      for (let i = 1; i < lengthPlus1; ++i) {\n        fillGradientStops.push(i / lengthPlus1);\n      }\n    }\n\n    fill.unshift(style.fill[0]);\n    fillGradientStops.unshift(0);\n\n    fill.push(style.fill[style.fill.length - 1]);\n    fillGradientStops.push(1);\n\n    if (style.fillGradientType === TEXT_GRADIENT.LINEAR_VERTICAL) {\n      gradient = this.context.createLinearGradient(\n        width / 2,\n        0,\n        width / 2,\n        height\n      );\n\n      totalIterations = (fill.length + 1) * lines.length;\n      currentIteration = 0;\n      for (let i = 0; i < lines.length; i++) {\n        currentIteration += 1;\n        for (let j = 0; j < fill.length; j++) {\n          if (typeof fillGradientStops[j] === \"number\") {\n            stop = fillGradientStops[j] / lines.length + i / lines.length;\n          } else {\n            stop = currentIteration / totalIterations;\n          }\n          gradient.addColorStop(stop, fill[j]);\n          currentIteration++;\n        }\n      }\n    } else {\n      gradient = this.context.createLinearGradient(\n        0,\n        height / 2,\n        width,\n        height / 2\n      );\n\n      totalIterations = fill.length + 1;\n      currentIteration = 1;\n\n      for (let i = 0; i < fill.length; i++) {\n        if (typeof fillGradientStops[i] === \"number\") {\n          stop = fillGradientStops[i];\n        } else {\n          stop = currentIteration / totalIterations;\n        }\n        gradient.addColorStop(stop, fill[i]);\n        currentIteration++;\n      }\n    }\n\n    return gradient;\n  }\n\n  destroy(options) {\n    if (this.destroyed) return;\n\n    if (typeof options === \"boolean\") {\n      options = { children: options };\n    }\n\n    options = Object.assign({}, defaultDestroyOptions, options);\n    super.destroy(options);\n    this.context = null;\n    this.canvas = null;\n    this._style = null;\n  }\n\n  get width() {\n    this.updateText(true);\n    return Math.abs(this.scale.x) * this._texture.orig.width;\n  }\n\n  set width(value) {\n    this.updateText(true);\n    const s = sign(this.scale.x) || 1;\n    this.scale.x = (s * value) / this._texture.orig.width;\n    this._width = value;\n  }\n\n  get height() {\n    this.updateText(true);\n    return Math.abs(this.scale.y) * this._texture.orig.height;\n  }\n\n  set height(value) {\n    this.updateText(true);\n    const s = sign(this.scale.y) || 1;\n    this.scale.y = (s * value) / this._texture.orig.height;\n    this._height = value;\n  }\n\n  get font() {\n    return this._font;\n  }\n\n  get style() {\n    return this._style;\n  }\n\n  set style(style) {\n    style = style || {};\n\n    if (style instanceof TextStyle) {\n      this._style = style;\n    } else {\n      this._style = new TextStyle(style);\n    }\n\n    this.localStyleID = -1;\n    this.dirty = true;\n  }\n\n  get text() {\n    return this._text;\n  }\n\n  set text(text) {\n    text = String(\n      text === \"\" || text === null || text === undefined ? \" \" : text\n    );\n\n    if (this._text === text) return;\n    this._text = text;\n    this.dirty = true;\n  }\n}\n"],"file":"Text.js"}