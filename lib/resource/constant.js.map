{"version":3,"sources":["../../src/resource/constant.js"],"names":["STATUS_FLAGS","NONE","DATA_URL","COMPLETE","LOADING","LOAD_TYPE","XHR","IMAGE","AUDIO","VIDEO","XHR_RESPONSE_TYPE","DEFAULT","BUFFER","BLOB","DOCUMENT","JSON","TEXT","XHR_TYPE_MAP","xhtml","html","htm","xml","tmx","svg","tsx","fnt","gif","png","bmp","jpg","jpeg","tif","tiff","webp","tga","json","text","txt","ttf","otf","LOAD_TYPE_MAP","mp3","ogg","wav","mp4","webm"],"mappings":"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","sourcesContent":["const STATUS_FLAGS = {\n  NONE: 0,\n  DATA_URL: 1 << 0,\n  COMPLETE: 1 << 1,\n  LOADING: 1 << 2\n};\n\nconst LOAD_TYPE = {\n  XHR: 1,\n  IMAGE: 2,\n  AUDIO: 3,\n  VIDEO: 4\n};\n\nconst XHR_RESPONSE_TYPE = {\n  DEFAULT: \"text\",\n  BUFFER: \"arraybuffer\",\n  BLOB: \"blob\",\n  DOCUMENT: \"document\",\n  JSON: \"json\",\n  TEXT: \"text\"\n};\n\nconst XHR_TYPE_MAP = {\n  // xml\n  xhtml: XHR_RESPONSE_TYPE.DOCUMENT,\n  html: XHR_RESPONSE_TYPE.DOCUMENT,\n  htm: XHR_RESPONSE_TYPE.DOCUMENT,\n  xml: XHR_RESPONSE_TYPE.DOCUMENT,\n  tmx: XHR_RESPONSE_TYPE.DOCUMENT,\n  svg: XHR_RESPONSE_TYPE.DOCUMENT,\n  tsx: XHR_RESPONSE_TYPE.DOCUMENT,\n  fnt: XHR_RESPONSE_TYPE.DOCUMENT,\n\n  // images\n  gif: XHR_RESPONSE_TYPE.BLOB,\n  png: XHR_RESPONSE_TYPE.BLOB,\n  bmp: XHR_RESPONSE_TYPE.BLOB,\n  jpg: XHR_RESPONSE_TYPE.BLOB,\n  jpeg: XHR_RESPONSE_TYPE.BLOB,\n  tif: XHR_RESPONSE_TYPE.BLOB,\n  tiff: XHR_RESPONSE_TYPE.BLOB,\n  webp: XHR_RESPONSE_TYPE.BLOB,\n  tga: XHR_RESPONSE_TYPE.BLOB,\n\n  // json\n  json: XHR_RESPONSE_TYPE.JSON,\n\n  // text\n  text: XHR_RESPONSE_TYPE.TEXT,\n  txt: XHR_RESPONSE_TYPE.TEXT,\n\n  // fonts\n  ttf: XHR_RESPONSE_TYPE.BUFFER,\n  otf: XHR_RESPONSE_TYPE.BUFFER\n};\n\nconst LOAD_TYPE_MAP = {\n  // images\n  gif: LOAD_TYPE.IMAGE,\n  png: LOAD_TYPE.IMAGE,\n  bmp: LOAD_TYPE.IMAGE,\n  jpg: LOAD_TYPE.IMAGE,\n  jpeg: LOAD_TYPE.IMAGE,\n  tif: LOAD_TYPE.IMAGE,\n  tiff: LOAD_TYPE.IMAGE,\n  webp: LOAD_TYPE.IMAGE,\n  tga: LOAD_TYPE.IMAGE,\n  svg: LOAD_TYPE.IMAGE,\n\n  // audio\n  mp3: LOAD_TYPE.AUDIO,\n  ogg: LOAD_TYPE.AUDIO,\n  wav: LOAD_TYPE.AUDIO,\n\n  // videos\n  mp4: LOAD_TYPE.VIDEO,\n  webm: LOAD_TYPE.VIDEO\n};\n\nexport {\n  STATUS_FLAGS,\n  LOAD_TYPE,\n  XHR_RESPONSE_TYPE,\n  XHR_TYPE_MAP,\n  LOAD_TYPE_MAP\n};\n"],"file":"constant.js"}