{"version":3,"sources":["../../src/resource/Loader.js"],"names":["MAX_PROGRESS","rgxExtractUrlHash","ResourceLoader","constructor","baseUrl","concurrency","progress","loading","defaultQueryString","_beforeMiddleware","_afterMiddleware","_resourcesParsing","_boundLoadResource","r","d","_loadResource","_queue","async","queue","pause","resources","onProgress","Signal","onError","onLoad","onStart","onComplete","i","_defaultBeforeMiddleware","length","pre","_defaultAfterMiddleware","use","add","name","url","options","cb","Array","isArray","callback","key","Error","parentResource","_prepareUrl","Resource","onAfterMiddleware","once","parent","incompleteChildren","children","isComplete","push","fullChunk","progressChunk","eachChunk","fn","reset","kill","k","res","_onLoadBinding","detach","isLoading","abort","destroy","loadAsync","Promise","resolve","reject","load","idle","_onStart","_onComplete","numTasks","_tasks","chunk","data","resume","parsedUrl","strictMode","result","protocol","path","indexOf","lastIndexOf","charAt","hash","exec","substr","resource","dequeue","_dequeue","eachSeries","next","call","_onLoad","dispatch","Math","min","error","splice","LoaderPreStatic","LoaderUseStatic"],"mappings":"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","sourcesContent":["import Signal from \"mini-signals\";\nimport parseUri from \"parse-uri\";\nimport * as async from \"./async\";\nimport Resource from \"./Resource\";\n\nconst MAX_PROGRESS = 100;\nconst rgxExtractUrlHash = /(#[\\w-]+)?$/;\n\nexport default class ResourceLoader {\n  constructor(baseUrl = \"\", concurrency = 10) {\n    this.baseUrl = baseUrl;\n    this.progress = 0;\n    this.loading = false;\n    this.defaultQueryString = \"\";\n    this._beforeMiddleware = [];\n    this._afterMiddleware = [];\n    this._resourcesParsing = [];\n    this._boundLoadResource = (r, d) => this._loadResource(r, d);\n    this._queue = async.queue(this._boundLoadResource, concurrency);\n    this._queue.pause();\n\n    this.resources = {};\n    this.onProgress = new Signal();\n    this.onError = new Signal();\n    this.onLoad = new Signal();\n    this.onStart = new Signal();\n    this.onComplete = new Signal();\n\n    for (let i = 0; i < ResourceLoader._defaultBeforeMiddleware.length; ++i) {\n      this.pre(ResourceLoader._defaultBeforeMiddleware[i]);\n    }\n\n    for (let i = 0; i < ResourceLoader._defaultAfterMiddleware.length; ++i) {\n      this.use(ResourceLoader._defaultAfterMiddleware[i]);\n    }\n  }\n\n  add(name, url, options, cb) {\n    if (Array.isArray(name)) {\n      for (let i = 0; i < name.length; ++i) {\n        this.add(name[i]);\n      }\n\n      return this;\n    }\n\n    // if an object is passed instead of params\n    if (typeof name === \"object\") {\n      cb = url || name.callback || name.onComplete;\n      options = name;\n      url = name.url;\n      name = name.name || name.key || name.url;\n    }\n\n    if (this.resources[name]) {\n      return;\n    }\n\n    // case where no name is passed shift all args over by one.\n    if (typeof url !== \"string\") {\n      cb = options;\n      options = url;\n      url = name;\n    }\n\n    // now that we shifted make sure we have a proper url.\n    if (typeof url !== \"string\") {\n      throw new Error(\"No url passed to add resource to loader.\");\n    }\n\n    // options are optional so people might pass a function and no options\n    if (typeof options === \"function\") {\n      cb = options;\n      options = null;\n    }\n\n    // if loading already you can only add resources that have a parent.\n    if (this.loading && (!options || !options.parentResource)) {\n      throw new Error(\"Cannot add resources the loader is running.\");\n    }\n\n    url = this._prepareUrl(url);\n    this.resources[name] = new Resource(name, url, options);\n\n    if (typeof cb === \"function\") {\n      this.resources[name].onAfterMiddleware.once(cb);\n    }\n\n    // if actively loading, make sure to adjust progress chunks for that parent and its children\n    if (this.loading) {\n      const parent = options.parentResource;\n      const incompleteChildren = [];\n\n      for (let i = 0; i < parent.children.length; ++i) {\n        if (!parent.children[i].isComplete) {\n          incompleteChildren.push(parent.children[i]);\n        }\n      }\n\n      const fullChunk = parent.progressChunk * (incompleteChildren.length + 1); // +1 for parent\n      const eachChunk = fullChunk / (incompleteChildren.length + 2); // +2 for parent & new child\n\n      parent.children.push(this.resources[name]);\n      parent.progressChunk = eachChunk;\n\n      for (let i = 0; i < incompleteChildren.length; ++i) {\n        incompleteChildren[i].progressChunk = eachChunk;\n      }\n\n      this.resources[name].progressChunk = eachChunk;\n    }\n\n    this._queue.push(this.resources[name]);\n    return this;\n  }\n\n  pre(fn) {\n    this._beforeMiddleware.push(fn);\n    return this;\n  }\n\n  use(fn) {\n    this._afterMiddleware.push(fn);\n    return this;\n  }\n\n  reset() {\n    this.progress = 0;\n    this.loading = false;\n\n    this._queue.kill();\n    this._queue.pause();\n\n    for (const k in this.resources) {\n      const res = this.resources[k];\n      if (res._onLoadBinding) res._onLoadBinding.detach();\n      if (res.isLoading) res.abort();\n      delete this.resources[k];\n    }\n\n    this.resources = {};\n    return this;\n  }\n\n  destroy() {\n    this.progress = 0;\n    this.loading = false;\n\n    this._queue.kill();\n    this._queue.pause();\n\n    for (const key in this.resources) {\n      const res = this.resources[key];\n      if (res.destroy) res.destroy();\n      delete this.resources[key];\n    }\n\n    this.baseUrl = \"\";\n    this.defaultQueryString = \"\";\n    this._beforeMiddleware = null;\n    this._afterMiddleware = null;\n    this._resourcesParsing = null;\n    this._boundLoadResource = null;\n    this._queue = null;\n    this.resources = null;\n    this.onProgress = null;\n    this.onLoad = null;\n    this.onError = null;\n    this.onStart = null;\n    this.onComplete = null;\n  }\n\n  loadAsync() {\n    return new Promise((resolve, reject) => {\n      this.load(resolve);\n    });\n  }\n\n  load(cb) {\n    if (typeof cb === \"function\") this.onComplete.once(cb);\n    if (this.loading) return this;\n\n    if (this._queue.idle()) {\n      this._onStart();\n      this._onComplete();\n    } else {\n      const numTasks = this._queue._tasks.length;\n      const chunk = MAX_PROGRESS / numTasks;\n\n      for (let i = 0; i < this._queue._tasks.length; ++i) {\n        this._queue._tasks[i].data.progressChunk = chunk;\n      }\n\n      this._onStart();\n      this._queue.resume();\n    }\n\n    return this;\n  }\n\n  get concurrency() {\n    return this._queue.concurrency;\n  }\n\n  set concurrency(concurrency) {\n    this._queue.concurrency = concurrency;\n  }\n\n  _prepareUrl(url) {\n    const parsedUrl = parseUri(url, { strictMode: true });\n    let result;\n\n    // absolute url, just use it as is.\n    if (parsedUrl.protocol || !parsedUrl.path || url.indexOf(\"//\") === 0) {\n      result = url;\n    }\n    // if baseUrl doesn't end in slash and url doesn't start with slash, then add a slash inbetween\n    else if (\n      this.baseUrl.length &&\n      this.baseUrl.lastIndexOf(\"/\") !== this.baseUrl.length - 1 &&\n      url.charAt(0) !== \"/\"\n    ) {\n      result = `${this.baseUrl}/${url}`;\n    } else {\n      result = this.baseUrl + url;\n    }\n\n    // if we need to add a default querystring, there is a bit more work\n    if (this.defaultQueryString) {\n      const hash = rgxExtractUrlHash.exec(result)[0];\n      result = result.substr(0, result.length - hash.length);\n\n      if (result.indexOf(\"?\") !== -1) {\n        result += `&${this.defaultQueryString}`;\n      } else {\n        result += `?${this.defaultQueryString}`;\n      }\n\n      result += hash;\n    }\n\n    return result;\n  }\n\n  _loadResource(resource, dequeue) {\n    resource._dequeue = dequeue;\n\n    async.eachSeries(\n      this._beforeMiddleware,\n      (fn, next) => {\n        fn.call(this, resource, () => {\n          next(resource.isComplete ? {} : null);\n        });\n      },\n      () => {\n        if (resource.isComplete) {\n          this._onLoad(resource);\n        } else {\n          resource._onLoadBinding = resource.onComplete.once(\n            this._onLoad,\n            this\n          );\n          resource.load();\n        }\n      },\n      true\n    );\n  }\n\n  _onStart() {\n    this.progress = 0;\n    this.loading = true;\n    this.onStart.dispatch(this);\n  }\n\n  _onComplete() {\n    this.progress = MAX_PROGRESS;\n    this.loading = false;\n    this.onComplete.dispatch(this, this.resources);\n  }\n\n  _onLoad(resource) {\n    resource._onLoadBinding = null;\n    this._resourcesParsing.push(resource);\n    resource._dequeue();\n\n    async.eachSeries(\n      this._afterMiddleware,\n      (fn, next) => {\n        fn.call(this, resource, next);\n      },\n      () => {\n        resource.onAfterMiddleware.dispatch(resource);\n\n        this.progress = Math.min(\n          MAX_PROGRESS,\n          this.progress + resource.progressChunk\n        );\n        this.onProgress.dispatch(this, resource);\n\n        if (resource.error) {\n          this.onError.dispatch(resource.error, this, resource);\n        } else {\n          this.onLoad.dispatch(this, resource);\n        }\n\n        this._resourcesParsing.splice(\n          this._resourcesParsing.indexOf(resource),\n          1\n        );\n\n        // do completion check\n        if (this._queue.idle() && this._resourcesParsing.length === 0) {\n          this._onComplete();\n        }\n      },\n      true\n    );\n  }\n}\n\nResourceLoader._defaultBeforeMiddleware = [];\nResourceLoader._defaultAfterMiddleware = [];\n\nResourceLoader.pre = function LoaderPreStatic(fn) {\n  ResourceLoader._defaultBeforeMiddleware.push(fn);\n  return ResourceLoader;\n};\n\nResourceLoader.use = function LoaderUseStatic(fn) {\n  ResourceLoader._defaultAfterMiddleware.push(fn);\n  return ResourceLoader;\n};\n"],"file":"Loader.js"}